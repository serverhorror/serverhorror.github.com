<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2014-04-25 11:31"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>Server!/Horror!</title>
<link>http://serverhorror.wordpress.com</link>
<description>I have a magnet! And I don't mind using it!</description>
<pubDate>Fri, 25 Apr 2014 11:31:22 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>http://serverhorror.wordpress.com</wp:base_blog_url>
<wp:wp_author>
  <wp:author_login>martinmarcher</wp:author_login>
  <wp:author_email>martin@marcher.name</wp:author_email>
  <wp:author_display_name><![CDATA[serverhorror]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:wp_author>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>17543</wp:term_id>
  <wp:tag_slug>cable</wp:tag_slug>
  <wp:tag_name><![CDATA[#cable]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>112207</wp:term_id>
  <wp:tag_slug>fail</wp:tag_slug>
  <wp:tag_name><![CDATA[#fail]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>62744</wp:term_id>
  <wp:tag_slug>lexmark</wp:tag_slug>
  <wp:tag_name><![CDATA[#lexmark]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>57231</wp:term_id>
  <wp:tag_slug>usb</wp:tag_slug>
  <wp:tag_name><![CDATA[#usb]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>355</wp:term_id>
  <wp:tag_slug>wireless</wp:tag_slug>
  <wp:tag_name><![CDATA[#wireless]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>29691</wp:term_id>
  <wp:tag_slug>adobe</wp:tag_slug>
  <wp:tag_name><![CDATA[adobe]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6602</wp:term_id>
  <wp:tag_slug>amazon</wp:tag_slug>
  <wp:tag_name><![CDATA[Amazon]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>599334</wp:term_id>
  <wp:tag_slug>amazon-ec2</wp:tag_slug>
  <wp:tag_name><![CDATA[Amazon EC2]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9485197</wp:term_id>
  <wp:tag_slug>amazon-elastic-compute-cloud</wp:tag_slug>
  <wp:tag_name><![CDATA[Amazon Elastic Compute Cloud]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>236160</wp:term_id>
  <wp:tag_slug>amazon-web-services</wp:tag_slug>
  <wp:tag_name><![CDATA[Amazon Web Services]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3768</wp:term_id>
  <wp:tag_slug>apache</wp:tag_slug>
  <wp:tag_name><![CDATA[apache]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>43407880</wp:term_id>
  <wp:tag_slug>apache-subversion</wp:tag_slug>
  <wp:tag_name><![CDATA[Apache Subversion]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1085428</wp:term_id>
  <wp:tag_slug>application-programming-interface</wp:tag_slug>
  <wp:tag_name><![CDATA[Application programming interface]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7223</wp:term_id>
  <wp:tag_slug>author</wp:tag_slug>
  <wp:tag_name><![CDATA[Author]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>44070</wp:term_id>
  <wp:tag_slug>automation</wp:tag_slug>
  <wp:tag_name><![CDATA[automation]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>37292</wp:term_id>
  <wp:tag_slug>awk</wp:tag_slug>
  <wp:tag_name><![CDATA[AWK]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2674</wp:term_id>
  <wp:tag_slug>bash</wp:tag_slug>
  <wp:tag_name><![CDATA[bash]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2075170</wp:term_id>
  <wp:tag_slug>big-data</wp:tag_slug>
  <wp:tag_name><![CDATA[Big data]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1194</wp:term_id>
  <wp:tag_slug>browser</wp:tag_slug>
  <wp:tag_name><![CDATA[browser]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7735</wp:term_id>
  <wp:tag_slug>clients</wp:tag_slug>
  <wp:tag_name><![CDATA[Clients]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4596328</wp:term_id>
  <wp:tag_slug>command-line-interface</wp:tag_slug>
  <wp:tag_name><![CDATA[Command-line interface]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>109168</wp:term_id>
  <wp:tag_slug>cron</wp:tag_slug>
  <wp:tag_name><![CDATA[Cron]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1182372</wp:term_id>
  <wp:tag_slug>cruft</wp:tag_slug>
  <wp:tag_name><![CDATA[Cruft]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4294</wp:term_id>
  <wp:tag_slug>cvs</wp:tag_slug>
  <wp:tag_name><![CDATA[cvs]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>83336</wp:term_id>
  <wp:tag_slug>data-analysis</wp:tag_slug>
  <wp:tag_name><![CDATA[Data analysis]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5714862</wp:term_id>
  <wp:tag_slug>data-logger</wp:tag_slug>
  <wp:tag_name><![CDATA[Data logger]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>583452</wp:term_id>
  <wp:tag_slug>data-warehousing</wp:tag_slug>
  <wp:tag_name><![CDATA[Data Warehousing]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>475</wp:term_id>
  <wp:tag_slug>database</wp:tag_slug>
  <wp:tag_name><![CDATA[Database]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10286</wp:term_id>
  <wp:tag_slug>databases</wp:tag_slug>
  <wp:tag_name><![CDATA[Databases]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>428</wp:term_id>
  <wp:tag_slug>debian</wp:tag_slug>
  <wp:tag_name><![CDATA[Debian]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4736125</wp:term_id>
  <wp:tag_slug>device-file</wp:tag_slug>
  <wp:tag_name><![CDATA[Device file]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2037066</wp:term_id>
  <wp:tag_slug>disk-image</wp:tag_slug>
  <wp:tag_name><![CDATA[Disk image]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>37394</wp:term_id>
  <wp:tag_slug>distributions</wp:tag_slug>
  <wp:tag_name><![CDATA[Distributions]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>81819</wp:term_id>
  <wp:tag_slug>facebook</wp:tag_slug>
  <wp:tag_name><![CDATA[Facebook]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>489194</wp:term_id>
  <wp:tag_slug>fhs</wp:tag_slug>
  <wp:tag_name><![CDATA[fhs]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>793571</wp:term_id>
  <wp:tag_slug>filesystem</wp:tag_slug>
  <wp:tag_name><![CDATA[filesystem]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>456</wp:term_id>
  <wp:tag_slug>flash</wp:tag_slug>
  <wp:tag_name><![CDATA[flash]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>209196</wp:term_id>
  <wp:tag_slug>git</wp:tag_slug>
  <wp:tag_name><![CDATA[git]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5603054</wp:term_id>
  <wp:tag_slug>github</wp:tag_slug>
  <wp:tag_name><![CDATA[github]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>21388408</wp:term_id>
  <wp:tag_slug>glusterfs</wp:tag_slug>
  <wp:tag_name><![CDATA[GlusterFS]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>50798781</wp:term_id>
  <wp:tag_slug>gnu-variants</wp:tag_slug>
  <wp:tag_name><![CDATA[GNU variants]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7147494</wp:term_id>
  <wp:tag_slug>gnutls</wp:tag_slug>
  <wp:tag_name><![CDATA[gnutls]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2812</wp:term_id>
  <wp:tag_slug>go</wp:tag_slug>
  <wp:tag_name><![CDATA[Go]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>81</wp:term_id>
  <wp:tag_slug>google</wp:tag_slug>
  <wp:tag_name><![CDATA[Google]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6132529</wp:term_id>
  <wp:tag_slug>google-appengine</wp:tag_slug>
  <wp:tag_name><![CDATA[Google AppEngine]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3251196</wp:term_id>
  <wp:tag_slug>hadoop</wp:tag_slug>
  <wp:tag_name><![CDATA[Hadoop]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>79</wp:term_id>
  <wp:tag_slug>hardware</wp:tag_slug>
  <wp:tag_name><![CDATA[Hardware]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10734113</wp:term_id>
  <wp:tag_slug>hello-world-program</wp:tag_slug>
  <wp:tag_name><![CDATA[Hello world program]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4977067</wp:term_id>
  <wp:tag_slug>heroku</wp:tag_slug>
  <wp:tag_name><![CDATA[Heroku]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1233033</wp:term_id>
  <wp:tag_slug>hostname</wp:tag_slug>
  <wp:tag_name><![CDATA[Hostname]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10518</wp:term_id>
  <wp:tag_slug>http</wp:tag_slug>
  <wp:tag_name><![CDATA[HTTP]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>340760</wp:term_id>
  <wp:tag_slug>httpd</wp:tag_slug>
  <wp:tag_name><![CDATA[httpd]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>164265</wp:term_id>
  <wp:tag_slug>https</wp:tag_slug>
  <wp:tag_name><![CDATA[https]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5798886</wp:term_id>
  <wp:tag_slug>hypertext-transfer-protocol</wp:tag_slug>
  <wp:tag_name><![CDATA[Hypertext Transfer Protocol]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>96215</wp:term_id>
  <wp:tag_slug>internet-protocol</wp:tag_slug>
  <wp:tag_name><![CDATA[Internet Protocol]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>267172</wp:term_id>
  <wp:tag_slug>ip-address</wp:tag_slug>
  <wp:tag_name><![CDATA[IP address]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1017</wp:term_id>
  <wp:tag_slug>java</wp:tag_slug>
  <wp:tag_name><![CDATA[Java]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>457</wp:term_id>
  <wp:tag_slug>javascript</wp:tag_slug>
  <wp:tag_name><![CDATA[JavaScript]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>16140629</wp:term_id>
  <wp:tag_slug>javascript-syntax</wp:tag_slug>
  <wp:tag_name><![CDATA[JavaScript syntax]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>72721</wp:term_id>
  <wp:tag_slug>json</wp:tag_slug>
  <wp:tag_name><![CDATA[JSON]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>112258</wp:term_id>
  <wp:tag_slug>keyboards</wp:tag_slug>
  <wp:tag_name><![CDATA[Keyboards]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>80962</wp:term_id>
  <wp:tag_slug>linkedin</wp:tag_slug>
  <wp:tag_name><![CDATA[linkedin]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>610</wp:term_id>
  <wp:tag_slug>linux</wp:tag_slug>
  <wp:tag_name><![CDATA[linux]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>584757</wp:term_id>
  <wp:tag_slug>linux-distribution</wp:tag_slug>
  <wp:tag_name><![CDATA[Linux distribution]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>557</wp:term_id>
  <wp:tag_slug>literature</wp:tag_slug>
  <wp:tag_name><![CDATA[Literature]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>36055397</wp:term_id>
  <wp:tag_slug>loggly</wp:tag_slug>
  <wp:tag_name><![CDATA[Loggly]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>45417677</wp:term_id>
  <wp:tag_slug>logical-volume-manager-linux</wp:tag_slug>
  <wp:tag_name><![CDATA[Logical Volume Manager (Linux)]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2638192</wp:term_id>
  <wp:tag_slug>lsof</wp:tag_slug>
  <wp:tag_name><![CDATA[lsof]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>29436291</wp:term_id>
  <wp:tag_slug>lxc</wp:tag_slug>
  <wp:tag_name><![CDATA[LXC]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3348</wp:term_id>
  <wp:tag_slug>mac-os-x</wp:tag_slug>
  <wp:tag_name><![CDATA[Mac OS X]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>23191</wp:term_id>
  <wp:tag_slug>metadata</wp:tag_slug>
  <wp:tag_name><![CDATA[Metadata]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>391484</wp:term_id>
  <wp:tag_slug>mkdir</wp:tag_slug>
  <wp:tag_name><![CDATA[Mkdir]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>111949</wp:term_id>
  <wp:tag_slug>monitoring</wp:tag_slug>
  <wp:tag_name><![CDATA[Monitoring]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4419</wp:term_id>
  <wp:tag_slug>mysql</wp:tag_slug>
  <wp:tag_name><![CDATA[MySQL]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>167993</wp:term_id>
  <wp:tag_slug>nagios</wp:tag_slug>
  <wp:tag_name><![CDATA[Nagios]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3385</wp:term_id>
  <wp:tag_slug>network</wp:tag_slug>
  <wp:tag_name><![CDATA[network]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>83394</wp:term_id>
  <wp:tag_slug>nimsoft</wp:tag_slug>
  <wp:tag_name><![CDATA[NimSoft]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>22319505</wp:term_id>
  <wp:tag_slug>nosql</wp:tag_slug>
  <wp:tag_name><![CDATA[NoSQL]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>785</wp:term_id>
  <wp:tag_slug>notes</wp:tag_slug>
  <wp:tag_name><![CDATA[notes]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1359391</wp:term_id>
  <wp:tag_slug>openssl</wp:tag_slug>
  <wp:tag_name><![CDATA[openssl]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5495</wp:term_id>
  <wp:tag_slug>operating-system</wp:tag_slug>
  <wp:tag_name><![CDATA[Operating system]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3015</wp:term_id>
  <wp:tag_slug>operating-systems</wp:tag_slug>
  <wp:tag_name><![CDATA[Operating Systems]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2438</wp:term_id>
  <wp:tag_slug>os-x</wp:tag_slug>
  <wp:tag_name><![CDATA[os x]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1902</wp:term_id>
  <wp:tag_slug>osx</wp:tag_slug>
  <wp:tag_name><![CDATA[osx]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>47759</wp:term_id>
  <wp:tag_slug>pdf</wp:tag_slug>
  <wp:tag_name><![CDATA[pdf]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>15989</wp:term_id>
  <wp:tag_slug>postgresql</wp:tag_slug>
  <wp:tag_name><![CDATA[PostgreSQL]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9246</wp:term_id>
  <wp:tag_slug>preview</wp:tag_slug>
  <wp:tag_name><![CDATA[preview]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3279</wp:term_id>
  <wp:tag_slug>privacy</wp:tag_slug>
  <wp:tag_name><![CDATA[privacy]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>86425</wp:term_id>
  <wp:tag_slug>protocols</wp:tag_slug>
  <wp:tag_name><![CDATA[Protocols]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>140997</wp:term_id>
  <wp:tag_slug>public-key-cryptography</wp:tag_slug>
  <wp:tag_name><![CDATA[Public-key cryptography]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>848756</wp:term_id>
  <wp:tag_slug>putty</wp:tag_slug>
  <wp:tag_name><![CDATA[PuTTY]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>832</wp:term_id>
  <wp:tag_slug>python</wp:tag_slug>
  <wp:tag_name><![CDATA[Python]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1568</wp:term_id>
  <wp:tag_slug>randomness</wp:tag_slug>
  <wp:tag_name><![CDATA[Randomness]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11603470</wp:term_id>
  <wp:tag_slug>relational-database-management-system</wp:tag_slug>
  <wp:tag_name><![CDATA[Relational database management system]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1986458</wp:term_id>
  <wp:tag_slug>revision-control</wp:tag_slug>
  <wp:tag_name><![CDATA[Revision control]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>139</wp:term_id>
  <wp:tag_slug>safari</wp:tag_slug>
  <wp:tag_name><![CDATA[safari]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>101807</wp:term_id>
  <wp:tag_slug>scm</wp:tag_slug>
  <wp:tag_name><![CDATA[scm]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>141855</wp:term_id>
  <wp:tag_slug>secure</wp:tag_slug>
  <wp:tag_name><![CDATA[secure]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>483768</wp:term_id>
  <wp:tag_slug>secure-shell</wp:tag_slug>
  <wp:tag_name><![CDATA[Secure Shell]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>801</wp:term_id>
  <wp:tag_slug>security</wp:tag_slug>
  <wp:tag_name><![CDATA[security]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18568</wp:term_id>
  <wp:tag_slug>server</wp:tag_slug>
  <wp:tag_name><![CDATA[Server]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>298</wp:term_id>
  <wp:tag_slug>servers</wp:tag_slug>
  <wp:tag_name><![CDATA[Servers]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>43912</wp:term_id>
  <wp:tag_slug>shell</wp:tag_slug>
  <wp:tag_name><![CDATA[Shell]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>165862</wp:term_id>
  <wp:tag_slug>site-management</wp:tag_slug>
  <wp:tag_name><![CDATA[Site Management]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1062719</wp:term_id>
  <wp:tag_slug>snow-leopard</wp:tag_slug>
  <wp:tag_name><![CDATA[snow leopard]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18760</wp:term_id>
  <wp:tag_slug>source-code</wp:tag_slug>
  <wp:tag_name><![CDATA[Source code]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10346</wp:term_id>
  <wp:tag_slug>sql</wp:tag_slug>
  <wp:tag_name><![CDATA[SQL]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1141841</wp:term_id>
  <wp:tag_slug>srv</wp:tag_slug>
  <wp:tag_name><![CDATA[srv]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>49320</wp:term_id>
  <wp:tag_slug>ssh</wp:tag_slug>
  <wp:tag_name><![CDATA[SSH]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>58302</wp:term_id>
  <wp:tag_slug>ssl</wp:tag_slug>
  <wp:tag_name><![CDATA[ssl]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>866</wp:term_id>
  <wp:tag_slug>standard</wp:tag_slug>
  <wp:tag_name><![CDATA[standard]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3386</wp:term_id>
  <wp:tag_slug>storage</wp:tag_slug>
  <wp:tag_name><![CDATA[Storage]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>42964</wp:term_id>
  <wp:tag_slug>subversion</wp:tag_slug>
  <wp:tag_name><![CDATA[subversion]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>164684</wp:term_id>
  <wp:tag_slug>svn</wp:tag_slug>
  <wp:tag_name><![CDATA[svn]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>93280</wp:term_id>
  <wp:tag_slug>syntax</wp:tag_slug>
  <wp:tag_name><![CDATA[Syntax]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>13505</wp:term_id>
  <wp:tag_slug>sysadmin</wp:tag_slug>
  <wp:tag_name><![CDATA[sysadmin]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18523494</wp:term_id>
  <wp:tag_slug>sysfs</wp:tag_slug>
  <wp:tag_name><![CDATA[Sysfs]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>992462</wp:term_id>
  <wp:tag_slug>tls</wp:tag_slug>
  <wp:tag_name><![CDATA[tls]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1981</wp:term_id>
  <wp:tag_slug>tools</wp:tag_slug>
  <wp:tag_name><![CDATA[Tools]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>200302</wp:term_id>
  <wp:tag_slug>tor</wp:tag_slug>
  <wp:tag_name><![CDATA[Tor]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>255</wp:term_id>
  <wp:tag_slug>ubuntu</wp:tag_slug>
  <wp:tag_name><![CDATA[Ubuntu]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9203</wp:term_id>
  <wp:tag_slug>unix</wp:tag_slug>
  <wp:tag_name><![CDATA[Unix]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>105010</wp:term_id>
  <wp:tag_slug>upc</wp:tag_slug>
  <wp:tag_name><![CDATA[upc]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>50682449</wp:term_id>
  <wp:tag_slug>useless-math</wp:tag_slug>
  <wp:tag_name><![CDATA[useless math]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>39749</wp:term_id>
  <wp:tag_slug>var</wp:tag_slug>
  <wp:tag_name><![CDATA[var]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>42722</wp:term_id>
  <wp:tag_slug>vcs</wp:tag_slug>
  <wp:tag_name><![CDATA[vcs]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2505843</wp:term_id>
  <wp:tag_slug>vhost</wp:tag_slug>
  <wp:tag_name><![CDATA[vhost]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18060</wp:term_id>
  <wp:tag_slug>vim</wp:tag_slug>
  <wp:tag_name><![CDATA[vim]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>95007</wp:term_id>
  <wp:tag_slug>virtual-machine</wp:tag_slug>
  <wp:tag_name><![CDATA[Virtual machine]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>989685</wp:term_id>
  <wp:tag_slug>virtualbox</wp:tag_slug>
  <wp:tag_name><![CDATA[virtualbox]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2377255</wp:term_id>
  <wp:tag_slug>virtualhost</wp:tag_slug>
  <wp:tag_name><![CDATA[virtualhost]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>40559</wp:term_id>
  <wp:tag_slug>virtualization</wp:tag_slug>
  <wp:tag_name><![CDATA[virtualization]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2896</wp:term_id>
  <wp:tag_slug>web-application</wp:tag_slug>
  <wp:tag_name><![CDATA[Web application]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>267176</wp:term_id>
  <wp:tag_slug>web-design-and-development</wp:tag_slug>
  <wp:tag_name><![CDATA[Web Design and Development]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>63616365</wp:term_id>
  <wp:tag_slug>web-server-gateway-interface</wp:tag_slug>
  <wp:tag_name><![CDATA[Web Server Gateway Interface]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5201</wp:term_id>
  <wp:tag_slug>x509</wp:tag_slug>
  <wp:tag_name><![CDATA[x509]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>308823</wp:term_id>
  <wp:tag_slug>zabbix</wp:tag_slug>
  <wp:tag_name><![CDATA[Zabbix]]></wp:tag_name>
</wp:tag>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://secure.gravatar.com/blavatar/6559fc4a4cdfcd9786b64eb5770957a6?s=96&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Fbuttonw-com.png</url>
		<title>Server!/Horror!</title>
		<link>http://serverhorror.wordpress.com</link>
	</image>
	<item>
  <title>About</title>
  <link>http://serverhorror.wordpress.com/about/</link>
  <pubDate>Mon, 01 Jun 2009 19:47:42 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false"/>
  <description/>
  <content:encoded><![CDATA[As of 2011-04 I started to work for <a title="1&amp;1 Internet AG" href="http://www.1und1.de/">1&amp;1 Internet AG</a> as a <a href="http://en.wikipedia.org/wiki/System_Administrator">System Administrator</a>. Since this a new job I won't post any details on what I do. Maybe later, if I have more confidence that I'm not publishing confidential information, and even more important if I get clearance on that stuff.

<hr />

<a title="Contact Me" href="http://blog.serverhorror.com/about/contact-me/">Contact Me</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2</wp:post_id>
  <wp:post_date>2009-06-01 19:47:42</wp:post_date>
  <wp:post_date_gmt>2009-06-01 19:47:42</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Backup Systems</title>
  <link>http://serverhorror.wordpress.com/?p=9</link>
  <pubDate>Mon, 01 Jun 2009 21:03:15 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=9</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>9</wp:post_id>
  <wp:post_date>2009-06-01 21:03:15</wp:post_date>
  <wp:post_date_gmt>2009-06-01 21:03:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>backup-systems</wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Storage Thoughts</title>
  <link>http://serverhorror.wordpress.com/2009/06/03/storage-thoughts/</link>
  <pubDate>Wed, 03 Jun 2009 00:30:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=10</guid>
  <description/>
  <content:encoded><![CDATA[<h1>Would the best storage please stand up?</h1>
So we do need some storage to run our projects. OK, most of the projects don't need huge amounts of storage, I think the largest one we have in a a single system is some mail store for a project that has been running for quite some time now.

Next up is a (single) <a href="http://www.postgresql.org">PostgreSQL</a> database from the same project. It's size is about 120 GB and steadily growing, not really fast, but after all it's growing.

Next best thing is a project (actually a couple of projects but they all share the same codebase and thus: problems) that implement sharding with a MySQL database - at least the original developers thought they were sharding, but actually the aren't. So now we are stuck with 12 databases (for a single project!) which aren't evenly loaded at all, sizes vary from 60 GB to 5 GB (total amount of all databases per project is about 200GB but they are distributed on several machines).

Those numbers aren't actually large storage needs, but having local storage in each of those servers doesn't exactly help in solving the problem. We do however have a couple of options...
<h1>Solutions?</h1>
First thing to use would be a storage unit from one of the large storage providers, we talked to a pre-sales consultant from <a href="http://en.wikipedia.org/wiki/Netapp">NetApp</a>, the feature set of those devices is impressive and for our current needs it would solve all problems, so from a practical point of view I'm all for it (To be fair there are a couple of competitors out there: <a href="http://en.wikipedia.org/wiki/EMC_Corporation">EMC</a>, <a href="http://en.wikipedia.org/wiki/Hewlett_Packard">HP</a>, <a href="http://en.wikipedia.org/wiki/Dell">DELL</a>, <a href="http://en.wikipedia.org/wiki/IBM">IBM</a>, <a href="http://en.wikipedia.org/wiki/List_of_networked_storage_hardware_platforms">and so on</a>).

But I don't think that solution would last on the long term. There are a couple of problems I see with those devices - mor on that later.

Another option would be something like <a href="http://en.wikipedia.org/wiki/Google_File_System">GFS</a>. I recently read about RAIPCs (Redundant Array of Inexpensive PCs) which is exactly the same. It all boils down to spending some portion of the local storage in each server to a globally available storage pool. There are a couple of projects out there that try to provide exactly this. In recent press <a href="http://en.wikipedia.org/wiki/Hadoop">Hadoop</a> seems to be everybodies darling. I'm not quite convinced of Hadoop yet because they still have a <a href="http://en.wikipedia.org/wiki/SPOF">Single Point of Failure (SPOF)</a>. The NameNode, in Hadoops current state of development there's only a single NameNode, although there are possibilities to set up <a href="http://en.wikipedia.org/wiki/Hot_standby">Hot Standby</a> Servers to take over in case of failure, I'd rather like to see this option built in than having to rely on my limited knowledge about the system. Maybe Linux HA isn't fast enough for the switch, maybe the clients are somehow caching a state of the NameNode that for some reason is different on the standby server than it was on the original server. Also currently Hadoop isn't a native filesystem for Linux (I don't know if it's useable as a file system for windows at all), but rather relies on <a href="http://en.wikipedia.org/wiki/Filesystem_in_Userspace">FUSE</a> to be able to mount it. I'm not a huge fan of FUSE filesystems. Other players in that direction are:
<ul>
	<li><a href="http://en.wikipedia.org/wiki/GlusterFS">GlusterFS</a>
<ul>
	<li>no SPOF</li>
	<li>"quite" stable (I've read different posts that state problem)</li>
</ul>
</li>
	<li><a href="http://en.wikipedia.org/wiki/Lustre_(file_system)">Lustre</a>
<ul>
	<li>SPOF (metadata servers)</li>
</ul>
</li>
	<li><a href="http://en.wikipedia.org/wiki/Ceph"><span style="text-decoration:line-through;">Ceph</span></a>
<ul>
	<li>very alpha</li>
	<li>feature set sounds very promising</li>
</ul>
</li>
</ul>
<h2>RAID to the Rescue</h2>
There is some help from <a href="http://en.wikipedia.org/wiki/RAID">RAID</a> to meet our storage needs. We are mostly working with HP hardware, <a href="http://en.wikipedia.org/wiki/List_of_Hewlett-Packard_products#ProLiant_DL_Series">HP DL 360</a> to be exact. They do have quite a nice hardware RAID controller built-in. In the newest generation up to 8 disks can be put in a 1U Server. Up until now we had be fine with 6 disks per 1U server, the largest certified disk is currently 300GB. So with a RAID 5 configuration from the controller we now have a total storage capacity of 2100 GB (2,1 TB). For a single server that is quite nice. But on some of the servers we are running into scalability problems regarding the number if <a href="http://en.wikipedia.org/wiki/IOPS">I/O operations per second (IOPS)</a>.

The easiest way to raise that number is to use more disks (for the record: I know RAID 10 will also speed things up, but it would lower per server storage to 1,2 TB - effectively cutting it in half).

But the point of RAID is in my opinion simply to avoid downtimes of a single node. A failing disk shouldn't bring a whole node down. It should simply generate an alert so that the System Administrator can replace it as soon as possible and wait for the RAID to rebuild. No downtime, probably somewhat slower operation but it would still work.
<h2>Local Storage After All?</h2>
All the commercial storage units will at some point hit an expansion level, which means you have to either purchase the next option in the program (which in turn will hit it's limit too) or think about a different solution (like distributed file systems).

Not exactly the solution I'd like to see.
<h2>Go distributed?</h2>
Going distributed certainly would get rid of all storage problems, but what other problems would come up? I can think of a couple of problems.
<ul>
	<li><a href="http://en.wikipedia.org/wiki/Network_Latency">Network Latency</a></li>
	<li>State Consistency across the whole cluster</li>
	<li>We loose the ability to separate projects by using <a href="http://en.wikipedia.org/wiki/VLAN">VLANs</a> (Physical Network Security)</li>
	<li>Databases anyone?</li>
	<li>IOPS - what will happen to them</li>
	<li>Backup?</li>
</ul>
<h4>Network Latency</h4>
I'm not going to do any math here, I think every SysAdmin is smart enough to calculate that. But we have to keep in mind that latency will be more of a concern than with traditional storage.
<h4>State Consistency</h4>
This is gonna be tough, and we will have to trust developers of distributed file systems that they do it right. Just imagine you have a farm with 10 webservers on the fronted. Your system is a <a href="http://en.wikipedia.org/wiki/Wiki">Wiki</a> so everybody can edit anything. In a typical web application now you either create a simple lock file (OK with 10 frontend servers a lock probably won't do - or maybe it will?) or let the database take care of it, or you place a locking mechanism inside the application - but all webserver need to have access to the same location/resource that is being edited right now by some user. I'm not the one that is keen on handling the support calls from all the people who just edited the Roadmap for the next 3 months just to find out that only the last person who hit save still has their data (in the best case).

Maybe it should be a distributed storage system rather than a file system. Just give developers a really nice library that looks up all the resources and provides a set of useful operations (But what exactyl would useful be?)
<h4>Physical Network Security</h4>
Ahh Security, I wish it wouldn't be necessary :)

So, we are currently using VLANs as a base line of security. We do have quite a couple of them and use them extensively to separate stuff that really doesn't need to know about each others existence. But as soon as we start donating say 500 GB of each server to this distributed storage we are lost. Aren't we?

Personally I think making such a storage VLAN aware isn't a good solution, I'd rather see something like mountpoints and a good set of permissions in this system.

Mountpoints/Filesystems/Namespaces (whatever you call them) would be nice so that a single project can only access a certain set of namespaces. From an administrational point I'd rather not care about where exactly this namespace is stored, I just want to know it's there and only project X and project Y have access to it.

Permissions should built in right from the start, a protocol where authentication and authorization aren't a basic part of the system in these days is just shit hitting the fan.
<h4>Databases</h4>
I like this one. Now go have 50 Servers, each donates 500GB of storage (25 TB). Fine we have plenty of space, we now all our database needs to do is actually store stuff, it will never ever(TM) need much CPU. We are all safe. Except our distributed storage doesn't provide the locking semantics needed by the database. Shit hits the fan...

OK this is solveable, <a href="http://en.wikipedia.org/wiki/Map_reduce">MapReduce</a> should be able to solve this. But on the other hand there are quite a couple of applications out there that rely on PostgreSQL, Oracle or even MySQL (I like that "rely on MySQL") to be available.

I know that a couple of the distributed file systems do try to provide POSIX semantics so that all of this would be running. But why do we need that? Why can't we just have a layer that validates the given SQL (the code is already there) that remaps the statements to something that can exist in our new shiny storage universe. And that's where Hadoop comes into play again. Not exactly Hadoop, but a sub project of Hadoop already provides an SQL-like interface that's <a href="http://hadoop.apache.org/hive/">Hive</a>. Personally I think that's the right direction, now we only need to have a grace time of about 8 - 10 years to get rid of all the legacy application, but by that time we will of course have some shiny new idea that seems to be the next best thing.
<h4>IOPS</h4>
I honestly have now idea how all of that will perform, probably IOPS won't be of interest anymore. My guess is that the network layer will be the problem at some point but not in the forseeable future, fibre is going to be standard everywhere, and it does 10Gbit/s now, SATA 3.0 just came out and has only 6Gbit/s. So not that much of a problem, we'll see what the impact <a href="http://en.wikipedia.org/wiki/Solid-state_drive">SSD Disks</a> will change the market. Maybe <a href="http://en.wikipedia.org/wiki/Moores_law">Moores Law</a> will become valid for storage devices too after all.
<h4>Backup</h4>
Do you think Google has a backup? What retention time, 30 days, 90 days? Daily incremental backups, weekly differential, and each 1st of the month a full backup? Yeah, right...

On the other hand, maybe they do. It just won't be a traditional backup that is written on tape. I'd guess they have some kind of distribution algorithm plus a snapshot function. Distribution is probably n+1 distribution, and the snapshot is what their backups are. In good old UNIX terms I'd simply use a cronjob that takes a snapshout hourly, keeps one snapshot for each of the last seven days, one snapshot for each of the last 4 weeks and discards all other snapshots automagically. Of course the papers on GFS will tell you more about that in detail - If I remember correctly data isn't even deleted from GFS in the traditional sense, it's some Copy-On-Write, so actually the snapshots are free.
<h1>Conclusion</h1>
I'm all in for distributed storage, <strong>if it's:</strong>
<ul>
	<li>redundant (node failure doesn't matter)</li>
	<li>provides libs and file system like access
<ul>
	<li>file-system like access is something I probably only like because I'm used to it</li>
</ul>
</li>
	<li>authentication and authorization is built in</li>
	<li>no single point of failure</li>
	<li>dynamic (add/remove nodes on the fly)</li>
	<li>metrics are built in
<ul>
	<li>there's just too much I don't know about it yet, I need to measure it</li>
</ul>
</li>
	<li>"legacy layer"
<ul>
	<li>I'd like to still be able to run all major database servers on it, plus Oracle and MySQL (I don't run MS SQL so that leaves us with PostgreSQL :))</li>
</ul>
</li>
	<li>runs on cheap hardware
<ul>
	<li>I do mean cheap, I want it to run on <a href="http://en.wikipedia.org/wiki/AMD_Geode">this!</a></li>
</ul>
</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>10</wp:post_id>
  <wp:post_date>2009-06-03 00:30:00</wp:post_date>
  <wp:post_date_gmt>2009-06-03 00:30:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>storage-thoughts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1245787852";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1245787852";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Logging and Analysis</title>
  <link>http://serverhorror.wordpress.com/?p=11</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=11</guid>
  <description/>
  <content:encoded><![CDATA[<ul>
	<li>splunk</li>
	<li>rsyslog</li>
	<li>syslog-ng</li>
	<li>syslog (plain old syslog)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>11</wp:post_id>
  <wp:post_date>2011-02-03 17:57:06</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Monitoring and Alerting</title>
  <link>http://serverhorror.wordpress.com/?p=15</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=15</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>15</wp:post_id>
  <wp:post_date>2011-02-03 17:57:02</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>HowTo NILFS2</title>
  <link>http://serverhorror.wordpress.com/2009/06/08/howto-nilfs2/</link>
  <pubDate>Mon, 08 Jun 2009 12:00:40 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=37</guid>
  <description/>
  <content:encoded><![CDATA[With kernel 2.6.30 there's a shiny new filesystem officially available. <a href="http://www.nilfs.org">NILFS2</a> provides
<ul>
	<li>checkpoints at regular intervals (unless there is no change) or  with  synchronous  writings</li>
</ul>
essentially that means that everytime you write a new file you will have a new version of your filesystem just ready to be mounted at a convenient place so that you are able to restore the version of the file from just about 2 seconds ago. Check the <a href="http://en.wikipedia.org/wiki/NILFS">details of NILFS on the wikipedia page</a> for a good overview. This post will be about basic usage and some ideas I have how to put it to actual use in a production environment.

So getting nilfs running on Debian/Squeeze (in that case as I tried it on my workstation) isn't much of a problem. A couple of commands and you are good to go:

[sourcecode language="text"]
$ sudo m-a a-i nilfs2 # compile the modules for the kernel you currently use
$ sudo apt-get install nilfs2-tools
$ sudo lvcreate -L 1000M -n nilfs.test vg00
$ sudo mkfs.nilfs2 /dev/vg00/nilfs.test
$ sudo mount /dev/vg00/nilfs.test /mnt/nilfs/
[/sourcecode]
Now with this you can start using your shiny new nilfs2 2 partition right away, the interesting part comes from the snapshots you are able to use with nilfs2. Use lscp to show how many checkpoints have been created.
[sourcecode language="text"]
$ sudo lscp
        CNO        DATE     TIME  MODE  FLG   NBLKINC       ICNT
         51  2009-06-08 11:42:43   cp    -       1181          6
         52  2009-06-08 11:42:48   cp    -       1168          6
         53  2009-06-08 11:42:53   cp    -       1464          6
         54  2009-06-08 11:42:58   cp    -        551          6
         55  2009-06-08 11:43:03   cp    -        748          6
         56  2009-06-08 11:43:08   cp    -       1505          6
         57  2009-06-08 11:43:13   cp    -        785          6
         58  2009-06-08 11:43:18   cp    -       2155          6
         59  2009-06-08 11:43:23   cp    -        688          6
         60  2009-06-08 11:43:28   cp    -        762          6
         ...
         83  2009-06-08 11:45:30   cp    -       2643          5
         84  2009-06-08 11:47:28   cp    i         10          5
         85  2009-06-08 11:47:40   cp    i         10          5
         86  2009-06-08 11:48:21   cp    i         13          5
[/sourcecode]
Yes I did this from a random directory, lscp will try to find a nilfs2 filesystem by looking at /proc/mounts. Regarding the meaning of the columns I'm pretty sure you can read the manpage yourself. Now let's get a mount from an older version of the filesystem. This involves 3 steps:
<ol>
	<li>find the checkpoint you want to mount</li>
	<li>make the checkpoint a snapshot</li>
	<li>mount it</li>
</ol>
[sourcecode language="text"]
...
# I decided to use no. 65
$ sudo chcp ss 65
$ sudo lscp|grep 65
        65  2009-06-08 11:43:54   ss    -       1563          6
$ mount -t nilfs2 -r -o cp=65 /dev/vg00/nilfs.test /mnt/cp/
$ sudo ls -l /mnt/nilfs/
total 181796
-rw-r--r-- 1 martin martin  43220992 2009-04-14 00:20 debian-501-amd64-businesscard.iso
-rw-r--r-- 1 martin martin 142194688 2009-04-14 00:21 debian-501-amd64-netinst.iso
$ sudo mkdir -p /mnt/cp/
$ sudo ls -l /mnt/cp/
total 0
$ sudo mount -t nilfs2 -r -o cp=65 /dev/vg00/nilfs.test /mnt/cp/
$ sudo ls -l /mnt/cp/
total 117808
-rw-r--r-- 1 martin martin 120151000 2009-06-08 11:43 debian-501-amd64-netinst.iso
-rw-r--r-- 1 martin root           7 2009-06-08 10:50 foo
[/sourcecode]
Aha! Now we have a version from just a couple of minutes before we did something to our filesystem.

How do we put that to actual use now?
<ul>
	<li><a href="http://en.wikipedia.org/wiki/Continuous_Data_Protection">Continuous Data Protection</a> - imagine you have some kind of interface where users can mount arbitrary snapshots to restore a file they just destroyed. Forget about those high budget data protection tools</li>
	<li>Poor (Wo)Mans Version Control - I do know quite a couple of developers who don't check in to their soruce repo often enough. Could be some help for them</li>
	<li>Nicer Backups - quite a couple of server don't have any option without being taken down. Linux LVM snapshots take quite a while to finish, with NILFS2 this takes nearly no time.
<ul>
	<li>shutdown # this is probably the part that takes the longest</li>
	<li>chcp</li>
	<li>startup again</li>
	<li>take care of the backup</li>
</ul>
</li>
</ul>
Of course those are just very vague ideas but I hope a richt environment of nice tools will build around it. Of course I'd wish that btrfs would have that feature (or the other way around) because I like the idea of the volume manager being built into the file system. I can't yet exactly say why but to me it just seems to be the right place for it.
<div id="_mcePaste" style="overflow:hidden;position:absolute;left:-10000px;top:764px;width:1px;height:1px;">
<h1 class="firstHeading">Continuous data protection</h1>
</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>37</wp:post_id>
  <wp:post_date>2009-06-08 12:00:40</wp:post_date>
  <wp:post_date_gmt>2009-06-08 12:00:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>howto-nilfs2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1245787862";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1245787862";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2</wp:comment_id>
    <wp:comment_author><![CDATA[2.6.30 is out! « Server Horror]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://serverhorror.wordpress.com/2009/06/10/2-6-30-is-out/</wp:comment_author_url>
    <wp:comment_author_IP>66.135.48.207</wp:comment_author_IP>
    <wp:comment_date>2009-06-10 05:59:16</wp:comment_date>
    <wp:comment_date_gmt>2009-06-10 05:59:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Filed under: Uncategorized &#8212; Martin @ 05:59   Just a small sidenote: Linux 2.6.30 is out and NILFS2 is now officially considered [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3</wp:comment_id>
    <wp:comment_author><![CDATA[Update NILFS2 &laquo; Server Horror]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://serverhorror.wordpress.com/2009/06/14/update-nilfs2/</wp:comment_author_url>
    <wp:comment_author_IP>76.74.254.62</wp:comment_author_IP>
    <wp:comment_date>2009-06-14 13:18:59</wp:comment_date>
    <wp:comment_date_gmt>2009-06-14 13:18:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Uncategorized &#8212; Tags: filesystem, open source, storage &#8212; Martin @ 13:00   Regarding my previous post about NILFS2, I just found to nice blog posts over at opensourcetips.org that also explain a bit more about [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Naming Schemas that work - or not</title>
  <link>http://serverhorror.wordpress.com/2009/06/15/naming-schemas-that-work-or-not/</link>
  <pubDate>Mon, 15 Jun 2009 12:00:58 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=49</guid>
  <description/>
  <content:encoded><![CDATA[I've recently been thinking about our naming scheme in the company, up until now it has worked quite well and still does so. With about 300 devices (and growing) I thought I might share this to eventually get some input (if anyone ever reads this, if not I do have some reference at least).
<h1>Domains</h1>
We are actively distinguishing between internally and externally available services, one of the easiest ways to remember is to use another domain for internal services than the one you use for external services. There's however the drawback of typing, you can of course configure completely different domains but that is something I consider bad use, you either have to
<ul>
	<li>buy yet another domain (and never ever use it in public) or</li>
	<li>use an invalid domain - <a href="http://www.faqs.org/rfcs/rfc2606.html">check the corresponding RFC on the proper names</a></li>
	<li>use some random domain and hope you never want to go there or do business with them because it probably would require reconfigurinig all of your machines</li>
</ul>
The option I prefer is to use a dedicated subdomain. Yes that involves some more typing but you can always choose a really short name, <strong>good options I'd consider are</strong>:
<ul>
	<li>in.example.com</li>
	<li>int.example.com</li>
	<li>local.example.com (already quite a bit long)</li>
</ul>
bad options would be:
<ul>
	<li>internal.example.com</li>
	<li>not-public.example.com</li>
</ul>
Going the other way around and having a dedicated domain for external services while defaulting to internal services isn't quite working because all your customers would have some additional typing consider this:
<ul>
	<li>blog.public.example.com</li>
	<li>www.public.example.com</li>
</ul>
Not quite what you want
<h2>Split Horizon DNS</h2>
Deserves some paragraph on it's own :)

Split horizon is a technique that is able to give you different answers for the same hostname depending on the source of the request. It may be of use but I don't think it's that good to seperate services with it. How so? Consider the following situation:

You are at your company and visit blog.example.org to publish which is an internal only service, now you go home and remember that you forgot to add some important information, you go to blog.example.org and it just won't work. Heck why? You know the DNS works because just about an hour earlier you were happily typing, you start investigating search stuff and after all you just created unnecessary work for you.

I still consider a simple int.example.org to be better because not only you will know instantly about internal vs. external services but also all your users. And your job is all about giving good services to your users isn't it?
<h1>Hostnames</h1>
This is actually more interesting that domains because you and your customers (users and paying customers) will be typing them all day long. There are a few documents that may be helpful:
<ul>
	<li><a href="http://tools.ietf.org/html/rfc1178">http://tools.ietf.org/html/rfc1178</a></li>
	<li><a href="http://tools.ietf.org/html/rfc2100">http://tools.ietf.org/html/rfc2100</a></li>
	<li><a href="http://www.namingschemes.com/Main_Page">http://www.namingschemes.com/Main_Page</a></li>
</ul>
Those naming schemes mostly refer to mythology, movies or tv series. All of them are quite well known and try to create a mental link between the meaning of a character, god or creature and the use of the server. Personally however I don't quite like this. It implies knowledge about cultural things that may not quite apply depending on where you are located.

We have a couple of rules that apply to our naming scheme:
<ul>
	<li>all devices adhere to the same schema (printers, switches, routers, servers, workstations, ...)</li>
	<li>hostnames are set up from either 2 to 4 parts these are</li>
	<li>company abbreviation - max. 3 letters</li>
	<li>optional environment abbreviation - a fixed list</li>
	<li>usage abbreviation (abbreviated only if too long or if usage is still clear)</li>
	<li>if it is a service that end users should use it will have an internal name with the abbreviation "<em>vip</em>" after the environment abbreviation</li>
	<li>name parts are separated by dashes</li>
</ul>
<h2>Examples</h2>
<h3>Company Abbreviations</h3>
<ul>
	<li>Snake Oil Lt. would become <em>sno</em></li>
	<li>Bogus Inventory would become <em>boi</em></li>
</ul>
<h3>Environment Abbreviations</h3>
This is fixed in our case we use the following:
<ul>
	<li><em>devl</em> for development environments - Developers playground, we don't care about what happens on those boxes, we only provide daily backups</li>
	<li><em>stag</em> for staging - Our playground, where we - SysAdmins - try to get the config right for a production deployment</li>
	<li><em>prod</em> for production - In a perfect world <em>prod</em> matches <em>stag</em> at all times</li>
</ul>
<h4>Usage Abbreviations</h4>
This is a bit tougher. There's no hard rule but rather something that makes it clear what the box actually does:
<ul>
	<li>mail - a mail server with services like imap, smtp or whatever is needed for a mail structure that end users see</li>
	<li>mailout - guess what</li>
	<li>openxdb - any ideas? <a href="http://www.openx.org">OpenX</a> is an ad-server, you can probably imagine what DB stands for. Note that we do not include the type of DB here, that kind of information is something you can figure out as soon as you are on the host or by reading internal documentation</li>
</ul>
<h1>Putting it all together</h1>
Ok, so now we have a couple of rules to apply to our hostnames. Let's say we are going to put up a new project and it requires
<ul>
	<li>a source code repository (deployed on it's own virtualized server)</li>
	<li>mailing infrastructure - fitted to the environment in question, after all we don't want to send out 200.000 test mails to real customers but rather to a certain mailbox the devs can check</li>
	<li>shared storage to place images</li>
	<li>a static webhost</li>
	<li>a database server</li>
	<li>a webhost with the application itself</li>
	<li>the company responsible is Snake Oil Ltd.</li>
</ul>
Let's create the hostnames we are going to use:
<ul>
	<li>sno-scm.in.snakeoil.example - note I'm using .invalid for documentation purposes as per <a href="http://www.faqs.org/rfcs/rfc2606.html">RFC 2606</a>, also I won't repeat the domain in all the other hostnames<a href="http://www.faqs.org/rfcs/rfc2606.html">
</a></li>
	<li>sno-devl-mail, sno-devl-mailout, sno-stag-mail, sno-stag-mailout, sno-prod-mail, sno-prod-mailout - I'll also leave out the hostnames for staging and production environments now. I'm pretty sure you are able to construct them yourself</li>
	<li>sno-devl-storage</li>
	<li>sno-devl-db</li>
	<li>sno-devl-staticweb</li>
	<li>sno-devl-appweb</li>
</ul>
A few points might need explanation.

<strong>Why isn't the source code reposity a production service?</strong>
<p style="padding-left:30px;">Well it is, but since there's only one (and only one) we dump the environment. This is our convention for all SCM instances, it is well known so it's not a problem</p>
<strong>Why the "<em>appweb</em>" and "<em>staticweb</em>"?</strong>
<p style="padding-left:30px;">Those might sound:</p>

<ul style="padding-left:40px;">
	<li>too complicated and</li>
	<li>too generic</li>
</ul>
<p style="padding-left:30px;">I think neither is true, we are sysadmins and don't really care wether it's a java application, PHP, Python, Rails or plain Assembler. What I need to now is where the application is so that I can directly go to a host that needs some reconfiguration in case it's necessary. The web part of the name is a hint that it's...well a web application. Yes in this day and age there are still some applications running on a server that don't provide a GUI on port 80!</p>
There are few other things we try to adhere too, while it may seem like quite a rule set that people need to keep in mind it's actually not that bad. People - that is system administrators, developers <em>and end users</em> - know about this scheme and can easily construct hostnames with little guessing. It's not too hard to write. I thought about moving from "<em>devl</em>" to "<em>devel</em>" but it's
<ul>
	<li>not worth the effort</li>
	<li>everybody's already used to it</li>
	<li>one more character to type</li>
</ul>
so I have enough excuses to purposely have a typo in there. But since we are dealing with artifical names anyway we don't have much of a problem here. We get very few questions about where a service actually is, and most questions are only asked once. Those come up when we obviously did something wrong abbreviating the usage but that is something we live with for the sake of not generating sources of error. Renaming a host is quite a risky thing to do, there are references all over the place you might forget and tests don't always cover all cases. We are hit early enough with missing test cases everytime we have to migrate some server or service due to scaling issues.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>49</wp:post_id>
  <wp:post_date>2009-06-15 12:00:58</wp:post_date>
  <wp:post_date_gmt>2009-06-15 12:00:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>naming-schemas-that-work-or-not</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1245787882";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1245787882";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>44</wp:comment_id>
    <wp:comment_author><![CDATA[Microsoft did it right! (Making a case for DNS SRV records) &laquo; Server Horror]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://serverhorror.wordpress.com/2010/03/31/microsoft-did-it-right-making-a-case-for-dns-srv-records/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.96.189</wp:comment_author_IP>
    <wp:comment_date>2010-03-31 20:16:20</wp:comment_date>
    <wp:comment_date_gmt>2010-03-31 20:16:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] to be reachable by DNS on a host named &#8220;puppet&#8220;. That isn&#8217;t consistent with the naming scheme we made up for our hosts. So why not use a perfectly available standard to discover where the correct endpoint is (yes [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Next Generation Email?</title>
  <link>http://serverhorror.wordpress.com/2009/06/09/next-generation-email/</link>
  <pubDate>Tue, 09 Jun 2009 14:16:44 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=53</guid>
  <description/>
  <content:encoded><![CDATA[This seems to be a great thing. Of course right now only Google has it (more or less, it's still not public).

Just watch the video and try not to keep your mouth open about the features they were thinking about.

[youtube=http://www.youtube.com/watch?v=v_UyVmITiYQ&amp;hl=en&amp;fs=1&amp;border=1]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>53</wp:post_id>
  <wp:post_date>2009-06-09 14:16:44</wp:post_date>
  <wp:post_date_gmt>2009-06-09 14:16:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>next-generation-email</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1245787869";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079209";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>2.6.30 is out!</title>
  <link>http://serverhorror.wordpress.com/2009/06/10/2-6-30-is-out/</link>
  <pubDate>Wed, 10 Jun 2009 13:00:07 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2009/06/10/2-6-30-is-out/</guid>
  <description/>
  <content:encoded><![CDATA[Just a small sidenote: Linux 2.6.30 is out and <a href="http://serverhorror.wordpress.com/2009/06/08/howto-nilfs2/">NILFS2</a> is now officially considered stable!
<p style="text-align:center;"><strong>Yay!</strong></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>65</wp:post_id>
  <wp:post_date>2009-06-10 13:00:07</wp:post_date>
  <wp:post_date_gmt>2009-06-10 13:00:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2-6-30-is-out</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1245787874";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079209";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Linux Desktop Deployment &amp; Firefox</title>
  <link>http://serverhorror.wordpress.com/?p=68</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=68</guid>
  <description/>
  <content:encoded><![CDATA[https://help.ubuntu.com/community/FirefoxMandatoryPreferences/]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>68</wp:post_id>
  <wp:post_date>2009-06-12 07:27:59</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Update NILFS2</title>
  <link>http://serverhorror.wordpress.com/2009/06/14/update-nilfs2/</link>
  <pubDate>Sun, 14 Jun 2009 13:00:19 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=71</guid>
  <description/>
  <content:encoded><![CDATA[Regarding my <a href="http://serverhorror.wordpress.com/2009/06/08/howto-nilfs2/">previous post about NILFS2</a>, I just found two nice blog posts over at <a href="http://opensourcetips.org">opensourcetips.org</a> that also explain a bit more about possible use cases and how NILFS2 works:
<ul>
	<li><a href="http://www.opensourcetips.org/news-opensource-tips-tricks/nilfs-a-new-linux-file-system-for-prevention-of-data-loss/">http://www.opensourcetips.org/news-opensource-tips-tricks/nilfs-a-new-linux-file-system-for-prevention-of-data-loss/</a></li>
	<li><a href="http://www.opensourcetips.org/linuxunix/the-features-new-nilfs-nxt-gen-file-system/">http://www.opensourcetips.org/linuxunix/the-features-new-nilfs-nxt-gen-file-system/</a></li>
</ul>
The first post is more or less a basic feature enumeration but for starters it provides quite a nice overview, while the second posts dives a bit into the details, I'f you never worked with NILFS2 before - or any other log-based-filesystem for that matter - I recommend having a short read on both of them. It's actually just a few minutes to invest but you get some nice overview and hopefully some ideas what's possible with this new filesystem.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>71</wp:post_id>
  <wp:post_date>2009-06-14 13:00:19</wp:post_date>
  <wp:post_date_gmt>2009-06-14 13:00:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>update-nilfs2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1245787877";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1245787878";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Test driven system administration</title>
  <link>http://serverhorror.wordpress.com/2009/06/17/test-driven-system-administration/</link>
  <pubDate>Wed, 17 Jun 2009 12:00:24 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=77</guid>
  <description/>
  <content:encoded><![CDATA[<h1>Where are the general (best) practices for System Administration?</h1>
Software development has various aspects on how to do it right, there is so much choice that you could let a holy war break loose about it, to people (like me) not doing too much with actual development the one that is probably the best known method is probably <a href="http://en.wikipedia.org/wiki/Test-driven_development">Test Driven Software Development (TDD)</a>, there are <a href="http://en.wikipedia.org/wiki/List_of_software_development_philosophies">some other methods availabe</a> - at least half of which I haven't heard about by now.

I'll focus on how TDD could be applied to System Administration and what the benefits are. For the sake of convenience I'll refer to Test Driven Administration (TDA) from now on.
<h2>Documentation</h2>
In System Administration we need to document how things are set up and how they work, I think that for SysAdmins that is even more true than for Developers. You might throw some piece of code at a developer with no comments or documentation at all and he or she can simply debug it locally. That is not always possible in larger systems, one might need to debug why all of a sudden in a certain time only 50 % percent of the emails go out thru the pipe with no obvious change to the setup. We can't simply take the stuff offline and look at it. Of course there are systems where the same is true for developers but from my impression it's more often that SysAdmins have to deal with such situations than developers.

People need to know about all the dependencies that might affect another system and with that being written down it's often still not obvious if the list is accurate or if it is just some list that was valid half a year ago.

TDA is a great help here. A lot of people use check lists to document their systems, these checklists coul look like below:
<ul>
	<li>Apache listening on port 8000
<ul>
	<li>Port 8000 returns the extended server status</li>
</ul>
</li>
	<li>Each project is listening on on it's own port starting at 8001
<ul>
	<li>possibly using multiple VHosts</li>
</ul>
</li>
	<li>Make sure all security updates are applied</li>
	<li>Make sure that at least 20 IDLE processes are ready to serve requests</li>
	<li>Apache must not use more than 80% of RAM</li>
	<li>...</li>
</ul>
You get the idea. This can easily be converted into automated checks. <a href="http://www.nagios.org/">Nagios</a> (soon to be <a href="http://www.icinga.org/">Icinga</a> at our site) or <a href="http://en.wikipedia.org/wiki/Comparison_of_network_monitoring_systems">other tools</a> are of great help here. Wouldn't it be nice if somebody told you immediately if one of those points on the list isn't working as "documented"? Maybe even text message you about it?

No problem just define the checks you need and you'll have at least an overview on the web. You just added more documentation as well as made your checklist easily expandable (Right now I'm speaking in terms of Nagios/Icinga since that is what I know best). In case you need to add another webserver just add it to the service group, right out of nowhere you'll probably have a bunch of items on you checklist either totally failing of everything is OK, either of those is actually good. You won't need to print out the checklist 3 times just to not get confused with your markers what you already did and what is still on the todo list. It will update automatically as soon as a state change is found. This brings us to the next point, reproducible results
<h2>Reproducible Results</h2>
As nice as checklists are the checking of the items is still not done the same everytime you do it. You could forget to check this one itzi-bitzi small item, you could just assume that everything works by implication that another check on the list worked, or you simply have a lazy day and don't do it.

Testing the list as often as possible in an automated manner will give you reproducible results and also ensure (to some point) that you have somewhat the same configuration all over the place. Actually ensuring that you have your systems set up in the same way is a different topic, but having those tests will provide a good basis to get started with a more streamlined infrastructure.

You (as a person) could for example always check with `netstat -tulpen|grep -c apache 2` and then know that at least some process that is named apache2 is listening, now your junior SysAdmin gets the checklist and has to go thru all of it, he does a `netstat -tuln` and looks for something that is listening on port 80. Well most of the time it will be apache, but what if it's not Apache, some 3rd admin with access to the system could have killed it and replaced it with lighttpd which is now serving it's wonderful default page instead of your company's homepage. Not quite that nice.

Now instead of having that item on the checklist just make up the following tests:
<ul>
	<li>something is listening on port 80</li>
	<li>the answer has to contain some string (preferably one that is rather unique to your site)</li>
	<li>something is listening on port 8100</li>
	<li>the answer on port 8100 contains "Apache Server Status for"</li>
</ul>
There you go you just created 2 reproducible results for your tests, those are not actually the first to listed but rather the last to. How does that help you? It will ensure that
<ul>
	<li>you are indeed serving your company's website</li>
	<li>you are indeed using Apache to do that</li>
</ul>
The server-status page enables a few more nice things but what information you need from that page is up to you to figure out.
<h2>Service Migration</h2>
This is another interesting topic where checklists have failed on me not only once. The situation of migrating services. A written checklist (be it in paper, wiki or some other system) can really let you down.

Every time a service has to be migrated it's not the problem of migration actually it's a benchmark of your documentation, there can be different situations:
<ul>
	<li>migration to a new location with new hardware</li>
	<li>migration to another server in the same location
<ul>
	<li>the difference being quite notable in the speed of data transfer</li>
</ul>
</li>
	<li>migration of several services to a single server (down scaling, consolidation, re planning)</li>
	<li>migration of several services from a single server to a multitude of server (up scaling, growth)</li>
</ul>
the most critical one being when you have to completely (geographically) relocate an installation with no redundant hardware on the target site. How are your checklists working then, you'd need to bring up your storage, database server and Wiki before you can access that one single document you forgot to print out that lists how to bring up the database correctly - catch22 anyone?

If you have monitoring in place (preferably on a single system of course) you will be able to fire up your monitoring server and see hell break loose, red items all over the place nothing is working! Quick, everybody, panic! Of course everything is red, because none of the servers is running. As you start deploying your services you will see light at the end of the tunnel because your items will become green.

Now how is that better than checklists when you could just have a look at the list and see that all the items are checked? There are quite a couple of points you can make here but some are really more useful than others.

<strong>Communication</strong>. You won't have to run in circles just to find everybody and check on his or her status. You will be able to see what has already been done from one single point. If you have an out of bands channel, like text messages (and you should) the need to make phone calls whether or not a service works will be minimized. Of course people will have to wait for the test cycle to complete from your monitoring solution but on the other hand as long as it isn't verifiably good you have to consider it's in a bad state. As soon as you get a green item everybody in your team will be text messaged and knows that there's another working service. That's actually a good transition to the next point.

<strong>Motivation</strong> (even if you are on your own). You will be able to see progress. You don't have to check all around who finished what, you see progress as it happens. Of course that also adds a little pressure to everyone but as you start realizing someone may have a problem because some service is 30 minutes late, in a good team someone will probably be already on his or her way to give a helping hand. Might be some screws are missing to mount a switch, might be someone screwed (sic) up big-time and totally destroyed a switch. In a stressful situation a helping hand is always welcome. But how does it help you if you are on your own? Consider doing all the physical installation of the servers in a rack and finally switching on the power, now while you wait for you cell phone to go crazy you can mount the next rack full of servers without wasting time by going thru the checklist. There another 30 minutes saved. Finally there's another point which your boss will definitely like.

<strong>Traceability</strong>. You don't need to take care of carefully writing down the time of when things happend, any decent monitoring solution will let you do that after you got up and running again by simply looking at the logs. Of course you can write everything, but in the heat of the moment you may be scribbling something on you checklist you might even be able to read later on. Nobody will be happy if you have to start guessing about when things happened, after all a complete migration is the ultimate test for the administration team, because you will be taking down everything - just like a complete power outage with UPS installed maybe even worse you may have to reconfigure a couple of IPs or the whole network. Some may say now that reconfiguring the whole network will make the monitoring useless anyway - I don't think so. Just clone the configuration of your monitoring server either to a virtual OS installation or if the system allows it let it run in parallel with all the tests going to the new IPs. Parallelism is actually the next point.

<strong>Parallelism</strong>. As noted before you don't have to waste time double checking (or checking even once) what your documentation says you'll get the notices anyway, or at least see them on the overview screen of your monitoring software. Also some DBA might work on the local console of a server, not even being able to reach the outside world, while your networking people set up the core switch. Now as soon as the core switch is up half the databases will be instantly reachable (verifiably reachable) and people can go on to the next task. Manually going thru documentation might keep you from this as the DBA might be able to do his work on a console but has to go thru the checklist twice or more often.
<h1>Conclusion</h1>
TDA is a nice complement to simply writing everything down. Why do I say complement if TDA is so great and you will have all the bells ringing when something doesn't work? Well you will instantly know what works, but there are always parts of the system that you don't work with daily, things you might have forgotten or something that you simply don't know but need to fix.

Written documentation is not something you should drop but it's something that should only be used as a complementary point of information, all admins in the team should be able to (basically) fix everything. Even if fixing just means to know who to call, that is not something your monitoring will or can tell you (well actually it can if you give it the information to message you some short URI where to go in case of emergency). Properly set up it will however tell you that 1 switch just broke and now 25 webservers are down. So instead of of panicing because a multitude of websites are down you can be relaxed and call your vendor (for which you hopefully have a good support contract in such a case) and demand replacement hardware - or better yet just restore the configuration backup to a replacement hardware on-site throw it in your trunk (probably handle it more carefully, do not "throw" it) and drive to the datacenter to replace everything. Time save by knowing what was broken without even looking at it.

You might want to check out some articles that refer to other "new" ways of system administration i found on the web, there's even one article from Microsoft. These article may not apply fully to TDA but they show the point of having more options than the traditional setup - document cycle:
<ul>
	<li><a href="http://delducagroup.com/ddg-blog/2009/04/22/test-driven-system-administration/">http://delducagroup.com/ddg-blog/2009/04/22/test-driven-system-administration/</a></li>
	<li><a href="http://www.onlamp.com/pub/a/onlamp/2005/03/31/extreme_admin.html">http://www.onlamp.com/pub/a/onlamp/2005/03/31/extreme_admin.html</a></li>
	<li><a href="http://lwn.net/Articles/266520/">http://lwn.net/Articles/266520/</a></li>
	<li><a href="http://msdn.microsoft.com/en-us/library/bb491123.aspx">http://msdn.microsoft.com/en-us/library/bb491123.aspx</a></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>77</wp:post_id>
  <wp:post_date>2009-06-17 12:00:24</wp:post_date>
  <wp:post_date_gmt>2009-06-17 12:00:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>test-driven-system-administration</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1245787898";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1245787899";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>73</wp:comment_id>
    <wp:comment_author><![CDATA[Methodman]]></wp:comment_author>
    <wp:comment_author_email>Odonovan14@gmx.de</wp:comment_author_email>
    <wp:comment_author_url>http://methodenmann.de/</wp:comment_author_url>
    <wp:comment_author_IP>87.147.62.92</wp:comment_author_IP>
    <wp:comment_date>2010-04-24 18:19:23</wp:comment_date>
    <wp:comment_date_gmt>2010-04-24 18:19:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Wow dass ich letztendlich doch noch etwas zu dem Thema finde, hab ich fast nicht mehr geglaubt. ^^ Danke sehr!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Icinga 0.8.1 released</title>
  <link>http://serverhorror.wordpress.com/2009/06/17/icinga-0-8-1-released/</link>
  <pubDate>Wed, 17 Jun 2009 11:30:34 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2009/06/17/icinga-0-8-1-released/</guid>
  <description/>
  <content:encoded><![CDATA[It <a href="http://www.icinga.org/team/">seems the people who forked Nagios</a> are making progress fast. The <a href="http://www.icinga.org/2009/05/20/icinga-v080-is-out/">initial 0.8.0 release of Icinga</a> wasn't too long ago and already <a href="http://www.icinga.org/2009/06/17/icinga-081-released/">Icinga 0.8.1 has been released</a>. I hope they keep up the good work and prepackaged binaries for the larger distributions will show up fairly soon.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>95</wp:post_id>
  <wp:post_date>2009-06-17 11:30:34</wp:post_date>
  <wp:post_date_gmt>2009-06-17 11:30:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>icinga-0-8-1-released</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1248272880";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079207";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>4</wp:comment_id>
    <wp:comment_author><![CDATA[Update: Icinga 0.8.1 released &laquo; Server Horror]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://serverhorror.wordpress.com/2009/06/17/update-icinga-0-8-1-released/</wp:comment_author_url>
    <wp:comment_author_IP>66.135.48.201</wp:comment_author_IP>
    <wp:comment_date>2009-06-17 15:49:37</wp:comment_date>
    <wp:comment_date_gmt>2009-06-17 15:49:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Tags: icinga, monitoring, nagios, shorts &#8212; Martin @ 15:49   A short followup on the recent 0.8.1 release of Icinga. I just found the list of changes from the ChangeLog in the git repository of [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Update: Icinga 0.8.1 released</title>
  <link>http://serverhorror.wordpress.com/2009/06/17/update-icinga-0-8-1-released/</link>
  <pubDate>Wed, 17 Jun 2009 15:49:28 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=100</guid>
  <description/>
  <content:encoded><![CDATA[A short followup on the recent <a href="http://serverhorror.wordpress.com/2009/06/17/icinga-0-8-1-released/">0.8.1 release</a> of <a href="http://www.icinga.org">Icinga</a>. I just found the list of changes from the <a href="https://git.icinga.org/index?p=icinga-core.git;a=blob_plain;f=Changelog;hb=7c5b56d64bfedf7e3a0487e1fc195294df6cb23a">ChangeLog in the git repository</a> of Icinga
[sourcecode language="text"]
0.8.1 - 06/17/2009
------------------
* Archived Logfiles renamed from Icinga-date-syntax.log =&amp;gt; icinga-date-syntax.log (capital 'i')
* cherry picked latest Nagios Patches (see Nagios Changelog below)
* new ido2db command switch: '-f' don't daemonize the ido2db
* ido2db will now prints out available database drivers
* fix ido2db segfault when try to access non existing tables
* DocBook v5 conversion
* Fix menu frameset cols width&lt;!--more--&gt;
[/sourcecode]
Here is the ChangeLog for Nagios referenced above:
[sourcecode language="text"]
3.1.1 - 02/??/2009
------------------
* New &quot;important check command&quot; flag for use in service templates, to aid configuration in distributed environments
* Fix for nagios validation error when no services defined
* Fix for stylesheet link
* Fix for extinfo.cgi error message when cgi.cfg doesn't exist
* Fix for notifications.cgi where Update button on right didn't retain host information when no host= was in query parameters
* Fix for potential bug where a contactgroup with no members could cause parsing errors
* Fix for W3 validation for history.cgi
* Fix for W3 validation for extinfo.cgi
* Fix for nagiostats to return non-zero with failures in MRTG mode
* Added t/ directory for tests. Use make test to run. Requires perl on development server
* Fix for duplicate event_id attributes in status and retention data
* Fix for duplicate unlink() during check processing
* Added missing check period column to host config display (CGI)
* Fix for embedded Perl initialization under FreeBSD
* Fix for incorrect re-initialization of mutext after program restart
* Fix for incorrect weighting in host flap detection logic
* Added libtap to distribution. Use ./configure --enable-libtap to compile
* nagios.log permissions are now kept after log rotation
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>100</wp:post_id>
  <wp:post_date>2009-06-17 15:49:28</wp:post_date>
  <wp:post_date_gmt>2009-06-17 15:49:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>update-icinga-0-8-1-released</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1245787908";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079206";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Amazon Publishes Kindle DX Source Code</title>
  <link>http://serverhorror.wordpress.com/2009/06/18/amazon-publishes-kindle-dx-source-code/</link>
  <pubDate>Thu, 18 Jun 2009 08:36:03 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=106</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://en.wikipedia.org/wiki/Amazon.com">Amazon</a> yesterday <a href="http://www.techcrunch.com/2009/06/16/want-the-kindle-source-code-you-can-have-it/">published the source code</a> of the Kindle DX. They have until now released three Kindle products.
<ul>
	<li><a href="http://en.wikipedia.org/wiki/Amazon_Kindle#Original_Kindle">Kindle</a></li>
	<li><a href="http://en.wikipedia.org/wiki/Amazon_Kindle#Kindle_2">Kindle 2</a></li>
	<li><a href="http://en.wikipedia.org/wiki/Amazon_Kindle#Kindle_DX">Kindle DX</a></li>
</ul>
Over at <a href="http://www.blogkindle.com/">blogkindle.com</a> is a post covering some <a href="http://www.blogkindle.com/2007/12/kindle-source-code/">details about the original source code</a>, but it seems that there hasn't been an update yet about the new Kindle DX source code. You can <a href="http://www.amazon.com/gp/help/customer/display.html?ie=UTF8&amp;nodeId=200203720">grab the source code for Kindle DX here</a>. The page also lists the source code for the earlier product versions of the Kindle, so it may still be usefull to you even if you do not own a Kindle DX.

However the source code isn't the full code used in the Kindle DX (the same is true for the other downloads), it might still be interesting to skim over it or investigate the toolchain they used to provide the functionality of the Kindle DX.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>106</wp:post_id>
  <wp:post_date>2009-06-18 08:36:03</wp:post_date>
  <wp:post_date_gmt>2009-06-18 08:36:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>amazon-publishes-kindle-dx-source-code</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1246166794";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079205";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ubuntu certified for HP servers</title>
  <link>http://serverhorror.wordpress.com/2009/06/19/ubuntu-certified-for-hp-servers/</link>
  <pubDate>Fri, 19 Jun 2009 10:04:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=112</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://www.ubuntu.com">Ubuntu</a> just announced a <a href="http://www.ubuntu.com/news/hp-proliant-servers-certified-ubuntu">certification for the server version 9.04 on HP Proliant G6 servers</a> (see also <a href="http://h18004.www1.hp.com/products/servers/platforms/new.html?psn=servers">HP Press release about this</a>).

It seems I finally have to consider Ubuntu for our servers. <strong>Not something I'm too pleased with</strong> as my previous experience has been less than good. <a href="https://launchpad.net/ubuntu/+source/cyrus-imapd-2.2/+bug/67111">One bug I ran into</a> burned itself into my memory.

The bug was a cyrus-imapd linked to a version of libdb it wasn't compiled against. As a result you could nicely see it segfault but that was it. The real tragedy in this bug was actually a couple of things:
<ul>
	<li>it was an LTS (Long-Term-Support) Release</li>
	<li>cyrus-imapd was in main</li>
	<li>the bug was not fixed for nearly  7 months</li>
</ul>
I can understand that things like these can happen - even in an LTS release, even in main - but the time it took to repair the trivial issue just doesn't make me feel comfortable with Ubuntu on our servers.

Fortunately <a href="http://h20219.www2.hp.com/services/cache/442406-0-0-225-121.html">Debian is also supported on HP Proliant servers</a>, and has even been supported for much longer than the just <a href="http://h18006.www1.hp.com/products/servers/platforms/new.html">recently released G6 Family</a> of HP's servers. Hopefully HP won't drop support for Debian that would be a real pita.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>112</wp:post_id>
  <wp:post_date>2009-06-19 10:04:00</wp:post_date>
  <wp:post_date_gmt>2009-06-19 10:04:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ubuntu-certified-for-hp-servers</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1246166792";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1246166791";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Google considered insecure</title>
  <link>http://serverhorror.wordpress.com/2009/06/20/google-considered-insecure/</link>
  <pubDate>Sat, 20 Jun 2009 18:15:49 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=116</guid>
  <description/>
  <content:encoded><![CDATA[A <a href="http://www.cloudprivacy.net/letter/#signers">group of 38 <span style="text-decoration:line-through;">experts</span> researchers</a> wrote an <a href="http://www.cloudprivacy.net/letter/">open letter to Google</a> claiming - according to recent news - that Google is insecure.

After reading the original PDF sent to <a href="http://www.google.com/corporate/execs.html#eric">Eric Schmidt (PhD)</a> I can't quite follow why the common opinion states that <em>Google is insecure</em>. I do understand that from a security point of view it is - without doubts - a lot better to use an SSL encrypted connection by default. Let's get into the details.

The researchers claim that <strong>Google Apps is insecure by default</strong>, because (in essence):
<ul>
	<li>Google uses an authentication cookie</li>
	<li>once authenticated to any of Google's services (Docs, iGoogle, Mail, Blogger,...) users are able to log in without providing any password to services visited later on</li>
	<li>the options to activate SSL secured connection to Google is hard to find</li>
	<li>the <strong>default is not to use secure connections</strong> by using encryption</li>
</ul>
I read up a bit on how authentication cookies generally work and that seems to be a real problem. A short thought about how many PCs out there are probably a member of some kind of botnet, the botnet operators could rather easily gain access to such a cookie and authenticate to any of Google's services.

On the other hand a compromised PC has no guarantee at all that it doesn't send all keystrokes to the operators anyway. So asking for the username and password for any service provided by Google won't add much to security anyway. For a PC that is not some kind of Zombie but for some reason let's anyone access all data on disk the problem with authentication cookies still is valid.

The reasoning that the option to enable encrypted connections is something I can't quite follow. Actually I find it very easy to reach. Just login to your Google account and click "<em>Settings</em>" at the top right (excuse the quality of the graphics, I'm just not compatible with graphics or anything that should be appealing to the eye).

<img class="aligncenter size-medium wp-image-119" title="settings" src="http://serverhorror.files.wordpress.com/2009/06/settings.jpg?w=300" alt="settings" width="300" height="24" />

You'll be taken to the General settings page, scroll down near the end and you'll find the option to encrypt all your traffic.

<img class="aligncenter size-medium wp-image-122" title="https" src="http://serverhorror.files.wordpress.com/2009/06/https.jpg?w=300" alt="https" width="300" height="44" />Give, the naming of the option could be better for the casual user, something like "Prevent 3rd parties from eavesdropping my data" - but there are probably smarter people than me to choose a nice, non-technical wording for that.

Finally the last option is indeed valid. The connection should be secured by default, but this is Google and they have a lot of resources so <a href="http://googlepublicpolicy.blogspot.com/2009/06/https-security-for-web-applications.html">an answer didn't take too long</a> (see also the original on the <a href="http://googleonlinesecurity.blogspot.com/2009/06/https-security-for-web-applications.html">Google Online Security Blog</a> - resembling the same content).

The canonical answer from Google seems to be that they are investigation the impact of switching to HTTPS by default will have, so they are not really opposed to switch to a secure by default configuration.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>116</wp:post_id>
  <wp:post_date>2009-06-20 18:15:49</wp:post_date>
  <wp:post_date_gmt>2009-06-20 18:15:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>google-considered-insecure</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1246166791";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079204";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>settings</title>
  <link>http://serverhorror.wordpress.com/2009/06/20/google-considered-insecure/settings/</link>
  <pubDate>Sat, 20 Jun 2009 17:50:42 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2009/06/settings.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>119</wp:post_id>
  <wp:post_date>2009-06-20 17:50:42</wp:post_date>
  <wp:post_date_gmt>2009-06-20 17:50:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>settings</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>116</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2009/06/settings.jpg</wp:attachment_url>
</item>
<item>
  <title>https</title>
  <link>http://serverhorror.wordpress.com/2009/06/20/google-considered-insecure/https/</link>
  <pubDate>Sat, 20 Jun 2009 17:58:18 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2009/06/https.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>122</wp:post_id>
  <wp:post_date>2009-06-20 17:58:18</wp:post_date>
  <wp:post_date_gmt>2009-06-20 17:58:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>https</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>116</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2009/06/https.jpg</wp:attachment_url>
</item>
<item>
  <title>GnuTLS vs. OpenSSL</title>
  <link>http://serverhorror.wordpress.com/?p=128</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=128</guid>
  <description/>
  <content:encoded><![CDATA[<div id="_mcePaste" style="position:absolute;left:-10000px;top:0;width:1px;height:1px;">#!/bin/sh</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:0;width:1px;height:1px;">/usr/bin/openssl pkcs12 -in ./xid-scm01.in.inqnet.at.p12 -cacerts -nodes ## extract Trust Chain</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:0;width:1px;height:1px;">/usr/bin/openssl pkcs12 -in ./xid-scm01.in.inqnet.at.p12 -nodes -nocerts ## extract Private Key</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:0;width:1px;height:1px;">/usr/bin/openssl pkcs12 -in ./xid-scm01.in.inqnet.at.p12 -clcerts -nokeys ## extract Cert</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:0;width:1px;height:1px;">/usr/bin/openssl rsa -in xid-scm01.in.iqnet.at.key ## extract Key usable for Daemon</div>
<div id="_mcePaste" style="position:absolute;left:-10000px;top:0;width:1px;height:1px;">/usr/bin/openssl x509 -in xid-scm01.in.iqnet.at.pem ## extract Cert usable for Daemon</div>
<pre style="padding-left:30px;">#!/bin/sh

/usr/bin/openssl pkcs12 -in ./xid-scm01.in.inqnet.at.p12 -cacerts -nodes ## extract Trust Chain

/usr/bin/openssl pkcs12 -in ./xid-scm01.in.inqnet.at.p12 -nodes -nocerts ## extract Private Key

/usr/bin/openssl pkcs12 -in ./xid-scm01.in.inqnet.at.p12 -clcerts -nokeys ## extract Cert

/usr/bin/openssl rsa -in xid-scm01.in.iqnet.at.key ## extract Key usable for Daemon

/usr/bin/openssl x509 -in xid-scm01.in.iqnet.at.pem ## extract Cert usable for Daemon</pre>
extract key from pkcs12
<ul>
	<li>http://sycure.wordpress.com/2008/05/15/tips-using-openssl-to-extract-private-key-pem-file-from-pfx-personal-information-exchange/</li>
</ul>
extract cert from pkcs12
<ul>
	<li>http://sycure.wordpress.com/2008/05/15/tips-using-openssl-to-extract-private-key-pem-file-from-pfx-personal-information-exchange/</li>
</ul>
exctract ca from pkcs12

configure apache for ssl

configure postgresql for ssl (f'up post)
<ul>
	<li>http://technicalhitch.wordpress.com/2008/01/02/why-a-rsa-private-key-can-be-encrypted-with-a-password/</li>
	<li>http://kahdev.wordpress.com/2008/06/21/an-intro-to-openssl/</li>
	<li>http://sycure.wordpress.com/2008/03/31/psk-tls-and-tls-comparision-when-to-use-what/</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>128</wp:post_id>
  <wp:post_date>2010-03-29 09:14:37</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>SCO Boredom sues strikes again</title>
  <link>http://serverhorror.wordpress.com/2009/06/23/sco-boredom-strikes-sues-again/</link>
  <pubDate>Tue, 23 Jun 2009 18:45:45 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=130</guid>
  <description/>
  <content:encoded><![CDATA[A nice information from <a href="http://www.groklaw.net">Groklaw</a> just dropped in to my newsreader. <a href="http://en.wikipedia.org/wiki/SCO_Group">SCO</a>, the <a href="http://www.groklaw.net/staticpages/index.php?page=20061212211016210">company that tried to sue Linux (Timeline at Groklaw)</a> strikes again. Will they never get it? Apart from that they haven't shown any sign of having evidence that there was actually code stolen from Unix another lawsuit already settled clearly showed that the rights for what they base their statements on, are with Novell.

As the recent post at Groklaw points out, <a href="http://www.groklaw.net/article.php?story=20090623013806705">SCO seems to be acquired by a group called unXis, Inc.</a>

Personally I'm more than bored by this news, I'd have thought that somehow even lawyers should be bored by now. Who are they goingt to sue anyway, a couple of companies in he U.S.?

As far as I know SCO wouldn't stand a chance here in good old Europe without showing any evidence. If they would simply put the facts on the table I guess there would be quite a couple of kernel hackers that would rewrite much of the code so that I wasn't copied, probably even be happy about being pointed to it. If the code is really that old, there's my guess is that there by now are interfaces in the kernel that would hopefully lead to a much nicer solution than what SCO considers to be their code.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>130</wp:post_id>
  <wp:post_date>2009-06-23 18:45:45</wp:post_date>
  <wp:post_date_gmt>2009-06-23 18:45:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sco-boredom-strikes-sues-again</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1246166790";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079204";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Nagios 3.1.2 Released</title>
  <link>http://serverhorror.wordpress.com/2009/06/23/nagios-3-1-2-released/</link>
  <pubDate>Tue, 23 Jun 2009 19:15:52 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=136</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://www.nagios.org/news/77-news-announcements/205-nagios-312-released">Nagios 3.1.2 Released</a> has just been released. I'm not quite sure I want to try it, given the recent fork from <a href="http://www.icinga.org">Nagios (Icinga)</a>, where <a href="http://www.icinga.org/team/">all the people who were contributing the interesting plugins and addons</a>.

Anyway here are the recent notes from the Nagios ChangeLog:
[sourcecode language="text"]
3.1.2 - 06/23/2009
------------------
* Fix for CPU hogging in service and host check scheduling logic

3.1.1 - 06/22/2009
------------------
* New &quot;important check command&quot; flag for use in service templates, to aid configuration in distributed environments
* Fix for nagios validation error when no services defined
* Fix for stylesheet link
* Fix for extinfo.cgi error message when cgi.cfg doesn't exist
* Fix for notifications.cgi where Update button on right didn't retain host information when no host= was in query parameters
* Fix for potential bug where a contactgroup with no members could cause parsing errors
* Fix for W3 validation for history.cgi
* Fix for W3 validation for extinfo.cgi
* Fix for nagiostats to return non-zero with failures in MRTG mode
* Added t/ directory for tests. Use make test to run. Requires perl on development server
* Fix for duplicate event_id attributes in status and retention data
* Fix for duplicate unlink() during check processing
* Added missing check period column to host config display (CGI)
* Fix for embedded Perl initialization under FreeBSD
* Fix for incorrect re-initialization of mutext after program restart
* Fix for incorrect weighting in host flap detection logic
* Added libtap to distribution. Use ./configure --enable-libtap to compile
* nagios.log permissions are now kept after log rotation
* Fix for &quot;Max concurrent service checks (X) has been reached&quot; messages - will now push services 5 + random(10) seconds ahead for
retry
* Fix for removing old HTML files for web frontend that are now replaced with PHP equivalents (index/main/side.html)
* Fix for incorrect service history link text in CGIs
* Fix for useless code loop in netutils.c
* Fix for potential divide by zero in event scheduling code
* Fix for trailing backslash in plugin output causing memory corruption in CGIs
* Fix for bug that could affect host/service scheduling during clock time skew or changes to timeperod definitions between restart
s
* Leading whitespace from continuation lines in configuration files is now stripped out
* Fix for bug where pipe (used by IPC) file descriptors get inherited by child processed (e.g. event handlers) (bug #0000026)
* Fix for failure to daemonize - Nagios now bails (bug #0000011)
* Fix for notifications about flapping starting not processed properly by retention data
* Patch to add transparency to statusmap icons for truecolor images
* Patch to add read-only permissions to extinfo CGI
* Security fix for statuswml.cgi where arbitrary shell injection was possible
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>136</wp:post_id>
  <wp:post_date>2009-06-23 19:15:52</wp:post_date>
  <wp:post_date_gmt>2009-06-23 19:15:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>nagios-3-1-2-released</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1246166789";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079203";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Community Choice Awards at SourceForge</title>
  <link>http://serverhorror.wordpress.com/2009/06/24/community-choice-awards-at-sourceforge/</link>
  <pubDate>Wed, 24 Jun 2009 08:45:51 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=145</guid>
  <description/>
  <content:encoded><![CDATA[SourceForge.net opened the <a href="http://sourceforge.net/community/cca09/vote/">votes for the Community Choice Awards</a>. You can <a href="http://sourceforge.net/community/cca09/vote/?f=485">vote for Nagios (direct voting)</a>, but not for <a href="http://www.icinga.org">Icinga</a>. Too bad, especially as Nagios is a well established project and <a href="http://www.icinga.org/why-a-fork/">Icinga being rather new</a> could need some attention.

I couldn't find Icinga in the list, if you now the link to vote for Icinga I'd be happy about it, just drop a comment (if anybody is indeed reading this blog).]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>145</wp:post_id>
  <wp:post_date>2009-06-24 08:45:51</wp:post_date>
  <wp:post_date_gmt>2009-06-24 08:45:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>community-choice-awards-at-sourceforge</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1246166774";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079202";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Directions of Database Support in Icinga</title>
  <link>http://serverhorror.wordpress.com/2009/06/24/directions-of-database-support-in-icinga/</link>
  <pubDate>Wed, 24 Jun 2009 09:00:33 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=149</guid>
  <description/>
  <content:encoded><![CDATA[The people form <a href="http://www.icinga.org">Icinga</a> started a poll about the kind of <a href="http://www.icinga.org/2009/06/08/vote-for-your-favorite-database/">database support users want to see</a> with ido-utils (Icinga Data Out).

I voted quite early in the process and the results were more than promising from my point of view. <a href="http://www.mysql.com">MySQL</a> and <a href="http://www.postgresql.org">PostgreSQL</a> had each about 50% with PostgreSQL having a few percent less than MySQL, after some time (16 days), the results are now quite different.

PostgreSQL is still on the second place, <a href="http://www.oracle.com">Oracle</a> on the 3rd place with only about half the votes of PostgreSQL. However MySQL clearly seems to be the database of choice most users want with nearly twice as many votes as PostgreSQL.
<p style="text-align:left;">As of today (2009-06-24) the results look like this:</p>


[caption id="attachment_151" align="aligncenter" width="474" caption="Icinga Database Poll"]<a href="http://www.icinga.org/2009/06/08/vote-for-your-favorite-database/"><img class="size-full wp-image-151" title="icinga_db_poll" src="http://serverhorror.files.wordpress.com/2009/06/icinga_db_poll.png" alt="Icinga Database Poll" width="474" height="310" /></a>[/caption]
<p style="text-align:center;"></p>
<p style="text-align:left;">That was quite a move. I still hope to see PostgreSQL to be supported very soon, personally I consider the feature-set of PostgreSQL to be far superior to that of MySQL</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>149</wp:post_id>
  <wp:post_date>2009-06-24 09:00:33</wp:post_date>
  <wp:post_date_gmt>2009-06-24 09:00:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>directions-of-database-support-in-icinga</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1248107907";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1248107907";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>icinga_db_poll</title>
  <link>http://serverhorror.wordpress.com/2009/06/24/directions-of-database-support-in-icinga/icinga_db_poll/</link>
  <pubDate>Wed, 24 Jun 2009 09:04:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2009/06/icinga_db_poll.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Icinga Database Poll]]></excerpt:encoded>
  <wp:post_id>151</wp:post_id>
  <wp:post_date>2009-06-24 09:04:00</wp:post_date>
  <wp:post_date_gmt>2009-06-24 09:04:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>icinga_db_poll</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>149</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2009/06/icinga_db_poll.png</wp:attachment_url>
</item>
<item>
  <title>`staff` and `adm` Group on Debian Boxes</title>
  <link>http://serverhorror.wordpress.com/2009/06/24/staff-and-adm-group-on-debian/</link>
  <pubDate>Wed, 24 Jun 2009 16:00:23 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=160</guid>
  <description/>
  <content:encoded><![CDATA[We had quite a few discussions on our internal usage of the filesystem. Usually we try to keep to the <a href="http://www.pathname.com/fhs/">Linux FHS</a>. That is we use <em><strong>/srv</strong></em><strong> for application data</strong>, <strong><em>/opt</em> for local installations of 3rd party software</strong>. But so far we couldn't get an agreement on how to deal with <em>/usr/local</em>.

One thing that bugged us was: "<strong>What the hell is the `</strong><em><strong>staff</strong></em><strong>` group about anyway</strong>". Well I started investigating a bit.
<ul>
	<li>what is actually writeable according to the <a href="http://www.debian.org/doc/debian-policy/">Debian Policy</a></li>
	<li>what is actually writeable (now really)</li>
</ul>
According to the <a href="http://www.debian.org/doc/debian-policy/">Debian Policy</a> there are 2 groups prepared for a site to use, those are:
<ul>
	<li><em>staff</em> and</li>
	<li><em>adm</em></li>
</ul>
The <a href="http://www.debian.org/doc/manuals/securing-debian-howto/">Securing Debian HOWTO</a> mentions it's uses in the FAQ part in chapter 12:
<ul>
	<li><a href="http://www.debian.org/doc/manuals/securing-debian-howto/ch12.en.html#s12.1.12.3">What is the difference between the adm and the staff group?</a></li>
</ul>
However that wasn't good enough for me, so I fired up a new debian instance and had a look at which files (or directories for that matter) are actually writable by the staff group:

[sourcecode language="text"]
sudo find / -xdev -group staff -perm +0020 -exec ls -ld {} \;
[/sourcecode]


Long story short: It seems only 2 directories are writeable:

&nbsp;
<ul>
	<li>/var/local</li>
	<li>/usr/local</li>
</ul>
of course that includes all the subdirectories in a default Debian installation. While we're at it we can also check the same for the `adm` group:

[sourcecode language="text"]
sudo find / -xdev -group adm -perm +0020 -exec ls -ld {} \;
[/sourcecode]

Interestingly enough, nothing came back. So let's check what we can read with this group and also what the `staff` group can read:

[sourcecode language="text"]
sudo find / -xdev -group adm -perm +0010 -exec ls -ld {} \;
sudo find / -xdev -group staff -perm +0010 -exec ls -ld {} \;
[/sourcecode]


The `<em>adm</em>` group returned a few hits in the `<em>/var/log</em>` directory while the `<em>staff</em>` group had read access to everything under `<em>/var/local</em>` and `<em>/usr/local`</em>. From my point of view it seems that `<em>staff</em>` and `<em>adm</em>` are perfectly useable for administrators as long as there aren't any critical packages installed by "exploiting" these memberships. I rather see such things installed by creating a proper package and using <em>apt-get</em>.

&nbsp;

Of course there should be some testing done on a regular basis that no files or directories are in a place where `<em>staff</em>` or `<em>adm</em>` people shouldn't write to.

Now I just need to completely convince my colleagues to use an existing infrastructure instead of further maintaining our home grown solution.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>160</wp:post_id>
  <wp:post_date>2009-06-24 16:00:23</wp:post_date>
  <wp:post_date_gmt>2009-06-24 16:00:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>staff-and-adm-group-on-debian</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1248107894";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"1";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1248107893";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>IDE-Subsystem soon to be legacy?</title>
  <link>http://serverhorror.wordpress.com/2009/06/26/ide-subsystem-soon-to-be-legacy/</link>
  <pubDate>Fri, 26 Jun 2009 09:00:50 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=174</guid>
  <description/>
  <content:encoded><![CDATA[It seems the Kernel Maintainers of the IDE-subsystem are "giving up". A recent thread thread on the Linux Kernel Mailing List (LKML) fired up a discussion about the IDE-subsystem. The discussion arised because the former maintainer Bartlomiej Zolnierkiewicz made a few changes to the subsystem and a user of a SPARC system reported undesired behaviour.

Zolnierkiewicz mentioned being quite tired about the "hostile environment" (<em>I'm really tired of this kind of hostility towards IDE changes[...]</em>) he feels to be in, so he suggested to David Miller to take over maintainership of the subsystem who immediately accepted.

However David Milleralso noted that he will tread the IDE-subsystem as a pure legacy (<em>I'm going to treat IDE as pure legacy [...]</em>). Linus Torvalds also took part in the discussion and told Miller and Zolnierkiewicz to invest more time in the subsystem to iron out the problems it has.

Here are some links to key points in the discussion (hosted on gmane):
<ul>
	<li><a href="http://thread.gmane.org/gmane.linux.ports.sparc/11845">http://thread.gmane.org/gmane.linux.ports.sparc/11845</a></li>
	<li><a href="http://thread.gmane.org/gmane.linux.ports.sparc/11845">http://thread.gmane.org/gmane.linux.ports.sparc/11845/focus=11864</a></li>
	<li><a href="http://thread.gmane.org/gmane.linux.ports.sparc/11845">http://thread.gmane.org/gmane.linux.ports.sparc/11845/focus=11867</a></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>174</wp:post_id>
  <wp:post_date>2009-06-26 09:00:50</wp:post_date>
  <wp:post_date_gmt>2009-06-26 09:00:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ide-subsystem-soon-to-be-legacy</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1248107892";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1248107893";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>BTRFS On-Disk Format to Change</title>
  <link>http://serverhorror.wordpress.com/2009/06/26/btrfs-on-disk-format-to-change/</link>
  <pubDate>Fri, 26 Jun 2009 11:00:14 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=182</guid>
  <description/>
  <content:encoded><![CDATA[The <a href="http://kernel.org/pub/linux/kernel/v2.6/snapshots/patch-2.6.31-rc1-git1.bz2">Linux Kernel 2.6.31-rc1 (direct git-snapshot download)</a> has been released.

Among some <a href="http://en.wikipedia.org/wiki/Mode-setting">Kernel Mode Setting (KMS)</a> enhancements which allow the Kernel to set the "correct" video mode - and thus take some work from X. The most notable change is probably a change in the on-disk format of the <a href="http://en.wikipedia.org/wiki/Btrfs">btrfs file system</a>.

Migration (hopefully) happens automagically upon the filesystem being mounted with the new kernel, there's however no (easy) way back. So <strong>you won't be able to mount the filesystem again with older kernels</strong>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>182</wp:post_id>
  <wp:post_date>2009-06-26 11:00:14</wp:post_date>
  <wp:post_date_gmt>2009-06-26 11:00:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>btrfs-on-disk-format-to-change</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1248107891";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079200";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Python 3.1 Release</title>
  <link>http://serverhorror.wordpress.com/2009/06/29/python-3-1-release/</link>
  <pubDate>Mon, 29 Jun 2009 09:00:52 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=189</guid>
  <description/>
  <content:encoded><![CDATA[Great news: 2 days ago Python 3.1 has been released.

You can find the <a href="http://svn.python.org/projects/python/tags/r31/Misc/NEWS">ChangeLog here</a>. Personally I find these fixes great (not any specific order):
[sourcecode language="text"]
- Issue #1655: Make imaplib IPv6-capable. Patch by Derek Morr.
- Issue #1664: Make nntplib IPv6-capable. Patch by Derek Morr.
- Issue #4868: utf-8, utf-16 and latin1 decoding are now 2x to 4x faster. The common cases are optimized thanks to a dedicated fast path and a moderate amount of loop unrolling.
- Issue #4874: Most builtin decoders now reject unicode input.
- Issue #3959: The ipaddr module has been added to the standard library. Contributed by Google.
- The json module now works exclusively with str and not bytes.
[/sourcecode]
I nearly missed it but my RSS Reader was kind enough to remind me, first <a href="http://sayspy.blogspot.com/2009/06/python-31-is-out.html">found it on this blog post</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>189</wp:post_id>
  <wp:post_date>2009-06-29 09:00:52</wp:post_date>
  <wp:post_date_gmt>2009-06-29 09:00:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-3-1-release</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079199";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1250068346";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Debian GNU/Linux 5.0 updated</title>
  <link>http://serverhorror.wordpress.com/2009/06/29/debian-gnulinux-5-0-updated/</link>
  <pubDate>Mon, 29 Jun 2009 14:30:59 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=194</guid>
  <description/>
  <content:encoded><![CDATA[2 days ago the <a href="http://www.debian.org">Debian Project</a> (the distribution which Ubuntu is based on) updated it current stable release (5.0 - Lenny). Among a <a href="http://www.debian.org/News/2009/20090627"><em>New version of the debian-installer</em></a> there are also a remarkable number of security fixes for this major update - not that the nice people from the <a href="http://www.debian.org/security/">Debian Security Team</a> haven't updated their distribution until yet - but the <a href="http://www.debian.org/News/2009/20090627">number of 57 bug fixes</a> (as the press release states) is just another sign that - yes - open-source also software has security issues. But at least they (a) tell you about it and evenly important (b) they do fix issues in a very strict time frame.

An especially nice point is that if you incorporate the <a href="http://www.debian.org/security/">upgrades from security.debian.org</a> in your sources list on a regular basis you won't even have to download vast amounts of data since the majority of the security upgrades should already be fixed for you.<em>
</em>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>194</wp:post_id>
  <wp:post_date>2009-06-29 14:30:59</wp:post_date>
  <wp:post_date_gmt>2009-06-29 14:30:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>debian-gnulinux-5-0-updated</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1250068347";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079199";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Six Dumbest Ideas in Computer Security</title>
  <link>http://serverhorror.wordpress.com/2009/06/29/the-six-dumbest-ideas-in-computer-security/</link>
  <pubDate>Mon, 29 Jun 2009 18:00:32 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=198</guid>
  <description/>
  <content:encoded><![CDATA[<span><a href="http://www.webmink.net/speaker.htm">Simon Phipps</a> found a nice writeup about the </span><a href="http://www.ranum.com/security/computer_security/editorials/dumb/"><em>The Six Dumbest Ideas in Computer Security</em></a>. What's really nice about it is the direct and honest content of the original post. Not too much not too little, still it covers everything that basic planning needs to address and also provides a good reasoning.

The six points are:
<ol>
	<li>Default Permit</li>
	<li>Enumerating Badness</li>
	<li>Penetrate and Patch</li>
	<li>Hacking is Cool[1]</li>
	<li>Educating Users</li>
	<li>Action is Better Than Inaction</li>
</ol>
[1] Yes I do think hacking is cool, unfortunately <span style="font-family:Arial,Helvetica,sans-serif;"><a href="http://www.ranum.com/"><em>Marcus J. Ranum</em></a> is right about it. The media reports about hacking make it cool personally I freak out a bit about the difference of hacking vs. cracking</span><strong><span style="font-family:Arial,Helvetica,sans-serif;">
</span></strong>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>198</wp:post_id>
  <wp:post_date>2009-06-29 18:00:32</wp:post_date>
  <wp:post_date_gmt>2009-06-29 18:00:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-six-dumbest-ideas-in-computer-security</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1250068357";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1250068357";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Commands to forget</title>
  <link>http://serverhorror.wordpress.com/2008/11/07/commands-to-forget/</link>
  <pubDate>Fri, 07 Nov 2008 21:45:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/11/07/commands-to-forget/</guid>
  <description/>
  <content:encoded><![CDATA[Commands I always forget (mostly this is <a href="http://www.kernel.org/">Linux</a> only, or at least <a href="http://www.gnu.org/">GNU Tools</a>):
<ul>
	<li><span style="font-style:italic;">gzip </span>input from <span style="font-style:italic;">stdin</span> to a file: <a href="http://manpages.debian.net/cgi-bin/man.cgi?query=cat&amp;sektion=1"> </a><code><a href="http://manpages.debian.net/cgi-bin/man.cgi?query=cat&amp;sektion=1">cat</a> <span style="font-style:italic;">&lt;sourcefile&gt;</span> | <a href="http://manpages.debian.net/cgi-bin/man.cgi?sektion=1&amp;query=gzip">gzip</a> &gt; <span style="font-style:italic;">&lt;targetfile&gt;</span></code></li>
	<li><span>get the number of threads for a given process name</span><span>:</span><span> <code><a href="http://manpages.debian.net/cgi-bin/man.cgi?query=ps&amp;sektion=0">ps</a> -C <span style="font-style:italic;">&lt;processname&gt;</span> -L</code></span><span style="font-style:italic;">
</span></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>202</wp:post_id>
  <wp:post_date>2008-11-07 21:45:00</wp:post_date>
  <wp:post_date_gmt>2008-11-07 21:45:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>commands-to-forget</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/gzip-from-stdin.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>TaskFive Streamlines Tasks in an Elegant Calendar View</title>
  <link>http://serverhorror.wordpress.com/2008/11/07/taskfive-streamlines-tasks-in-an-elegant-calendar-view/</link>
  <pubDate>Fri, 07 Nov 2008 22:15:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/11/07/taskfive-streamlines-tasks-in-an-elegant-calendar-view/</guid>
  <description/>
  <content:encoded><![CDATA[<div style="text-align:right;"></div>
<div style="text-align:center;">The introduction at <a href="http://lifehacker.com/">lifehacker.com </a>seems nice except for: <span style="font-weight:bold;">It just doesn't work!

</span><a href="http://www.taskfive.com/"><img style="cursor:pointer;width:400px;height:214px;" src="http://serverhorror.files.wordpress.com/2008/11/taskfivewentwrong.png" border="0" alt="" /></a>
<div style="text-align:left;">I'm not saying <a href="http://www.taskfive.com/">TaskFive </a>isn't working at all. I could register and even got an invitation email to a second email account since I couldn't figure out wether I was supposed to register as a mentor or a company account.
I do like the idea of the simple task list. Maybe I'll check back sometime...</div>
</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>203</wp:post_id>
  <wp:post_date>2008-11-07 22:15:00</wp:post_date>
  <wp:post_date_gmt>2008-11-07 22:15:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>taskfive-streamlines-tasks-in-an-elegant-calendar-view</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/taskfive-streamlines-tasks-in-elegant.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>TaskFive Streamlines Tasks in an Elegant Calendar View</title>
  <link>http://serverhorror.wordpress.com/?attachment_id=204</link>
  <pubDate>Tue, 30 Jun 2009 08:20:17 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2008/11/taskfivewentwrong.png</guid>
  <description/>
  <content:encoded><![CDATA[<div style="text-align:right;">
</div><div style="text-align:center;">The introduction at <a href="http://lifehacker.com/">lifehacker.com </a>seems nice except for: <span style="font-weight:bold;">It just doesn't work!

</span><a href="http://www.taskfive.com/"><img style="cursor:pointer;width:400px;height:214px;" src="http://serverhorror.files.wordpress.com/2008/11/taskfivewentwrong.png" alt="" border="0" /></a>
<div style="text-align:left;">
I'm not saying <a href="http://www.taskfive.com/">TaskFive </a>isn't working at all. I could register and even got an invitation email to a second email account since I couldn't figure out wether I was supposed to register as a mentor or a company account.<br />I do like the idea of the simple task list. Maybe I'll check back sometime...
</div></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>204</wp:post_id>
  <wp:post_date>2008-11-07 22:12:00</wp:post_date>
  <wp:post_date_gmt>2009-06-30 08:20:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>taskfive-streamlines-tasks-in-an-elegant-calendar-view-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2008/11/taskfivewentwrong.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>blogger_attachment</wp:meta_key>
    <wp:meta_value><![CDATA[http://3.bp.blogspot.com/_SfkvOkpFiwE/SRS-jv-WLoI/AAAAAAAAAH0/hZs3p2rx0u8/TaskFiveWentWrong.PNG]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Search for Backup Tools</title>
  <link>http://serverhorror.wordpress.com/2008/11/07/search-for-backup-tools/</link>
  <pubDate>Fri, 07 Nov 2008 22:45:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/11/07/search-for-backup-tools/</guid>
  <description/>
  <content:encoded><![CDATA[This is a thing that annoys me. Backups should just work, the things I found work best are <a href="http://www.bacula.org/">Bacula</a> and <a href="http://www.amanda.org/">amanda</a>.

While <a href="http://www.bacula.org/en/">Bacula </a>needs quite a setup (database, director and storage -- which you still can install on a single machine), it is indeed easier for me to use than <a href="http://www.amanda.org/">amanda</a> for me.

<a href="http://www.amanda.org/">amanda</a> does work once it's set up but I my personal opinion is that it should be a real daemon and not "<span style="font-style:italic;">just a cron job</span>". <a href="http://www.bacula.org/en/">Bacula</a> runs as a true daemon and can decide when it's best to backup a client. So my suggestion goes for <a href="http://www.bacula.org/en/">Bacula</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>205</wp:post_id>
  <wp:post_date>2008-11-07 22:45:00</wp:post_date>
  <wp:post_date_gmt>2008-11-07 22:45:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>search-for-backup-tools</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/search-for-backup-tools.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Remember that damn link!</title>
  <link>http://serverhorror.wordpress.com/2008/11/07/remember-that-damn-link/</link>
  <pubDate>Fri, 07 Nov 2008 23:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/11/07/remember-that-damn-link/</guid>
  <description/>
  <content:encoded><![CDATA[Some day I do have to <a href="http://processorfinder.intel.com/"><span style="font-weight:bold;font-style:italic;">remember that damn link</span></a> to Intel's processfinder:
<ul>
	<li><a href="http://processorfinder.intel.com/">http://processorfinder.intel.com</a></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>206</wp:post_id>
  <wp:post_date>2008-11-07 23:00:00</wp:post_date>
  <wp:post_date_gmt>2008-11-07 23:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>remember-that-damn-link</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/remember-that-damn-link.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Meta-classes Made Easy</title>
  <link>http://serverhorror.wordpress.com/?p=208</link>
  <pubDate>Tue, 06 Apr 2010 08:51:56 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=208</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>208</wp:post_id>
  <wp:post_date>2010-04-06 08:51:56</wp:post_date>
  <wp:post_date_gmt>2010-04-06 08:51:56</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/feeds/2231370730534168413/posts/default/3637204846735988484]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Fun with MySQL</title>
  <link>http://serverhorror.wordpress.com/?p=209</link>
  <pubDate>Wed, 12 Nov 2008 09:24:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/11/12/fun-with-mysql/</guid>
  <description/>
  <content:encoded><![CDATA[This is <a href="http://journal.dedasys.com/2008/11/11/another-mysql-doesnt-do-that-moment">another story of why MySQL just is a CSV-file on steroids</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>209</wp:post_id>
  <wp:post_date>2008-11-12 09:24:00</wp:post_date>
  <wp:post_date_gmt>2008-11-12 09:24:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fun-with-mysql</wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/fun-with-mysql.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Fighting with munin</title>
  <link>http://serverhorror.wordpress.com/2008/11/17/fighting-with-munin/</link>
  <pubDate>Mon, 17 Nov 2008 21:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/11/17/fighting-with-munin/</guid>
  <description/>
  <content:encoded><![CDATA[I had a nice fight with a <a href="http://munin.projects.linpro.no/">Munin</a> plugin yesterday evening. The problem was that according <a href="http://munin.projects.linpro.no/wiki/HowToWritePlugins">to the docs</a> a munin plugin is called with an argument count of 2 (the name of the plugin itself and the "config" parameter).

This is all nice and well but from my experience isn't quite true. I had the problem that the graphs from munin were created configured fine. However no values were drawn.
<pre style="padding-left:30px;">import sys
if (len(sys.argv)) == 2:
    if sys.argv[1] == "config":
        print "I need to ouptut the configuration directives"
    if sys.argv[1] == "autoconf":
        """This plugin doesn't have 'autoconf' capabilities."""
        print "no"
        sys.exit(1)
else:
    print "I need to output the values"</pre>
Do you see the error? Well I didn't for about 90 minutes. The problem is the "<span style="font-weight:bold;">else</span>" tree. The else tree is executed fine and all correct in the shell and even when running under the munin user, but I just couldn't get it to print out the values when called thru the munin network interface (<span style="font-family:monospace;">telnet localhost 4949</span>)

To get around this I'd suggest the following with python:
<pre style="padding-left:30px;">import sys
if "config" in sys.argv:
    print "I need to ouptut the configuration directives"
elif "autoconf" in sys.argv:
    """This plugin doesn't have 'autoconf' capabilities."""
    print "no"
    sys.exit(1)
else:
    print "I need to output the values"</pre>
With this it's not only nearly impossible to output the wrong values but also much nicer to read...]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>214</wp:post_id>
  <wp:post_date>2008-11-17 21:00:00</wp:post_date>
  <wp:post_date_gmt>2008-11-17 21:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fighting-with-munin</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/fighting-with-munin.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Kerneloops.org verzeichnet 100.000sten Oops</title>
  <link>http://serverhorror.wordpress.com/?attachment_id=216</link>
  <pubDate>Tue, 30 Jun 2009 08:20:43 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2008/11/linuxmagazinoops.jpg</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://serverhorror.files.wordpress.com/2008/11/linuxmagazinoops.jpg"><img style="display:block;text-align:center;cursor:hand;width:400px;height:163px;margin:0 auto 10px;" src="http://serverhorror.files.wordpress.com/2008/11/linuxmagazinoops.jpg" border="0" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>216</wp:post_id>
  <wp:post_date>2008-11-18 14:44:00</wp:post_date>
  <wp:post_date_gmt>2009-06-30 08:20:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>kerneloops-org-verzeichnet-100-000sten-oops-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2008/11/linuxmagazinoops.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>blogger_attachment</wp:meta_key>
    <wp:meta_value><![CDATA[http://4.bp.blogspot.com/_SfkvOkpFiwE/SSLVFcyyWtI/AAAAAAAAAJo/gZ5S7VXMbE0/LinuxMagazinOOPS.JPG]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Blade Configuration Center</title>
  <link>http://serverhorror.wordpress.com/2008/11/19/blade-configuration-center/</link>
  <pubDate>Wed, 19 Nov 2008 13:30:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/11/19/blade-configuration-center/</guid>
  <description/>
  <content:encoded><![CDATA[So we are buying 2 <a href="http://www.hp.com/go/bladeanswers">HP c7000 Blade Centers</a>. Since I haven't found a useful tool to play around with the configuration I build it myself.

It's neither shiny nor digital but useable.

<a href="http://serverhorror.files.wordpress.com/2008/11/bladeconfigurationcenter01.jpg"><img style="display:block;text-align:center;cursor:pointer;width:317px;height:400px;margin:0 auto 10px;" src="http://serverhorror.files.wordpress.com/2008/11/bladeconfigurationcenter01.jpg" border="0" alt="" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>218</wp:post_id>
  <wp:post_date>2008-11-19 13:30:00</wp:post_date>
  <wp:post_date_gmt>2008-11-19 13:30:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>blade-configuration-center</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/blade-configuration-center.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Blade Configuration Center</title>
  <link>http://serverhorror.wordpress.com/?attachment_id=219</link>
  <pubDate>Tue, 30 Jun 2009 08:21:03 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2008/11/bladeconfigurationcenter01.jpg</guid>
  <description/>
  <content:encoded><![CDATA[<p>So we are buying 2 <a href="http://www.hp.com/go/bladeanswers">HP c7000 Blade Centers</a>. Since I haven't found a useful tool to play around with the configuration I build it myself.</p>
<p>It's neither shiny nor digital but useable.</p>
<a href="http://serverhorror.files.wordpress.com/2008/11/bladeconfigurationcenter01.jpg"><img style="display:block;text-align:center;cursor:pointer;width:317px;height:400px;margin:0 auto 10px;" src="http://serverhorror.files.wordpress.com/2008/11/bladeconfigurationcenter01.jpg" alt="" border="0" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>219</wp:post_id>
  <wp:post_date>2008-11-19 13:24:00</wp:post_date>
  <wp:post_date_gmt>2009-06-30 08:21:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>blade-configuration-center-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2008/11/bladeconfigurationcenter01.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>blogger_attachment</wp:meta_key>
    <wp:meta_value><![CDATA[http://1.bp.blogspot.com/_SfkvOkpFiwE/SSQUiuxE8CI/AAAAAAAAAJw/bMRlgX9c-II/BladeConfigurationCenter01.jpg]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Fly Blind</title>
  <link>http://serverhorror.wordpress.com/2008/11/25/fly-blind/</link>
  <pubDate>Tue, 25 Nov 2008 14:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/11/25/fly-blind/</guid>
  <description/>
  <content:encoded><![CDATA[Quite a short time of records before the switch happened in this diagram. I do hope the system is new and hasn't been in use for long before they started using <a href="http://munin.projects.linpro.no/">Munin</a>

<a href="http://s3.amazonaws.com/io-soup-assets/asset/0151/0929_26f2.png"><img style="display:block;text-align:center;cursor:pointer;width:438px;height:622px;margin:0 auto 10px;" src="http://s3.amazonaws.com/io-soup-assets/asset/0151/0929_26f2.png" border="0" alt="" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>223</wp:post_id>
  <wp:post_date>2008-11-25 14:00:00</wp:post_date>
  <wp:post_date_gmt>2008-11-25 14:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fly-blind</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/fly-blind.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>SSH grief</title>
  <link>http://serverhorror.wordpress.com/2008/11/25/ssh-grief/</link>
  <pubDate>Tue, 25 Nov 2008 15:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/11/25/ssh-grief/</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://www.debian-administration.org/users/simonw">simonw</a> over at <a href="http://www.debian-administration.org/">debian-administration.org</a> seems to have a <a href="http://www.debian-administration.org/users/simonw/weblog/290">problem with SSH Auth on busy servers</a>. I've had a few hosts out in the wild with ssh on port 22 and was suffering similiar problems.
<pre style="padding-left:30px;">ssh_exchange_identification: Connection closed by remote host</pre>
My solution was to have these options in <span style="white-space:pre;font-family:sans;">sshd_config</span>:
<ul>
	<li>AllowGroups: <span style="white-space:pre;font-family:sans;">AllowGroups sshusers</span></li>
	<li>MaxStartups: <span style="white-space:pre;font-family:sans;">MaxStartups 5:90:10</span></li>
</ul>
These 2 options solved the problems for me. On a busy host you might want to look at the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config&amp;sektion=5"><span style="white-space:pre;font-family:sans;">sshd_config</span> manpage.</a>

Another helpful options is: <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh_config&amp;sektion=5"><span style="white-space:pre;font-family:sans;">ControlMaster</span> from the <span style="white-space:pre;font-family:sans;">ssh_config</span> manpade</a>

What this does it that for a given hostname and username combination it reuses the connection so that on subsequent logins you can login without entering the passwort and in most cases almost immediately as sshd doesn't need to run another process since it reuses the one already existing.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>224</wp:post_id>
  <wp:post_date>2008-11-25 15:00:00</wp:post_date>
  <wp:post_date_gmt>2008-11-25 15:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ssh-grief</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/ssh-grief.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>6</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Renner]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url/>
    <wp:comment_author_IP/>
    <wp:comment_date>2008-11-30 20:53:00</wp:comment_date>
    <wp:comment_date_gmt>2008-11-30 20:53:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Or just use fail2ban (or similar tools) on public reachable SSH servers...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Auch Dell hat seine Probleme</title>
  <link>http://serverhorror.wordpress.com/?attachment_id=226</link>
  <pubDate>Tue, 30 Jun 2009 08:21:16 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2008/11/dell_customer_account.jpg</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://serverhorror.files.wordpress.com/2008/11/dell_customer_account.jpg"><img style="display:block;text-align:center;cursor:pointer;width:320px;height:74px;margin:0 auto 10px;" src="http://serverhorror.files.wordpress.com/2008/11/dell_customer_account.jpg" alt="" border="0" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>226</wp:post_id>
  <wp:post_date>2008-11-25 20:46:00</wp:post_date>
  <wp:post_date_gmt>2009-06-30 08:21:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>auch-dell-hat-seine-probleme-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2008/11/dell_customer_account.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>blogger_attachment</wp:meta_key>
    <wp:meta_value><![CDATA[http://4.bp.blogspot.com/_SfkvOkpFiwE/SSxkdUncgYI/AAAAAAAAAKA/AHpYYCiCE_A/dell_customer_account.JPG]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Stupidity - I haz it!</title>
  <link>http://serverhorror.wordpress.com/2008/11/26/stupidity-i-haz-it/</link>
  <pubDate>Wed, 26 Nov 2008 13:15:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/11/26/stupidity-i-haz-it/</guid>
  <description/>
  <content:encoded><![CDATA[Yes <em>ekimus</em> is my nickname in that case...<code>
<strong><em>14:11:53</em> &lt;ekimus&gt;</strong> hmm i have this: "[(elem1, elem2), (elem3, elem4), ...]" what I'd like would be to make that a dictionairy where the first element of each tuple becomes the key and the second element the value. any easy magic that does something like that?
<strong><em>14:12:36</em> &lt;eggy_&gt;</strong> ekimus: dict(L)
</code>

Shame on me!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>227</wp:post_id>
  <wp:post_date>2008-11-26 13:15:00</wp:post_date>
  <wp:post_date_gmt>2008-11-26 13:15:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>stupidity-i-haz-it</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/stupidity-i-haz-it.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>github is down :(</title>
  <link>http://serverhorror.wordpress.com/?attachment_id=229</link>
  <pubDate>Tue, 30 Jun 2009 08:21:21 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2008/11/github.png</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://serverhorror.files.wordpress.com/2008/11/github.png"><img style="display:block;text-align:center;cursor:hand;width:320px;height:61px;margin:0 auto 10px;" src="http://serverhorror.files.wordpress.com/2008/11/github.png" border="0" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>229</wp:post_id>
  <wp:post_date>2008-11-27 20:13:00</wp:post_date>
  <wp:post_date_gmt>2009-06-30 08:21:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>github-is-down-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2008/11/github.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>blogger_attachment</wp:meta_key>
    <wp:meta_value><![CDATA[http://2.bp.blogspot.com/_SfkvOkpFiwE/SS7_2OcBEUI/AAAAAAAAAKk/d23AgKH0-FI/github.PNG]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Yesssssss, they're back!</title>
  <link>http://serverhorror.wordpress.com/?attachment_id=231</link>
  <pubDate>Tue, 30 Jun 2009 08:21:24 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2008/11/github_up_again.png</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://serverhorror.files.wordpress.com/2008/11/github_up_again.png"><img style="display:block;text-align:center;cursor:hand;width:320px;height:66px;margin:0 auto 10px;" src="http://serverhorror.files.wordpress.com/2008/11/github_up_again.png" border="0" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>231</wp:post_id>
  <wp:post_date>2008-11-27 22:17:00</wp:post_date>
  <wp:post_date_gmt>2009-06-30 08:21:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>yesssssss-theyre-back-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2008/11/github_up_again.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>blogger_attachment</wp:meta_key>
    <wp:meta_value><![CDATA[http://1.bp.blogspot.com/_SfkvOkpFiwE/SS8cn0BkJAI/AAAAAAAAAKs/jYbrhaqXkp0/github_up_again.PNG]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>A perfect world</title>
  <link>http://serverhorror.wordpress.com/2008/11/29/a-perfect-world/</link>
  <pubDate>Sat, 29 Nov 2008 02:15:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/11/29/a-perfect-world/</guid>
  <description/>
  <content:encoded><![CDATA[I just got reminded of a great quote:
<blockquote>In a perfect world, spammers would get caught, go to jail, and share a cell with many men who have enlarged their penisses, taken Viagra and are looking for a new relationship.</blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>236</wp:post_id>
  <wp:post_date>2008-11-29 02:15:00</wp:post_date>
  <wp:post_date_gmt>2008-11-29 02:15:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-perfect-world</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/perfect-world.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How to install a minimal eclipse</title>
  <link>http://serverhorror.wordpress.com/2008/12/24/how-to-install-a-minimal-eclipse/</link>
  <pubDate>Wed, 24 Dec 2008 22:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/12/24/how-to-install-a-minimal-eclipse/</guid>
  <description/>
  <content:encoded><![CDATA[Everytime I go to the <a href="http://www.eclipse.org/">Eclipse Homepage</a> i find myself searching for the right download. Usually I just want the plain Eclipse. That means:
<ul>
	<li>I don't want any development environment</li>
	<li>I want the download to be as fast as possible (in terms of size)</li>
	<li>I want to find it fast</li>
</ul>
Usually I manage to accomplish neither of those. So here's what you need to download to get a plain Eclipse as small as possible but still be able to run it.
<ol>
	<li>go to the <a href="http://www.eclipse.org/">Eclipse Homepage</a></li>
	<li>find the <a href="http://www.eclipse.org/downloads/">download section</a></li>
	<li>scroll to the bottom of the page</li>
	<li>click "<a style="font-style:italic;" href="http://download.eclipse.org/eclipse/downloads/">Other downloads</a>"</li>
	<li>click on the link in the second column of "Latest Release"</li>
	<li>get the "<span style="font-style:italic;">Platform Runtime Binary</span>" download (it should be about 40 - 50 MB)</li>
	<li>Consider yourself happy you just needed a <em>6 step how-to</em> to find a plain Eclipse version without any plugins.</li>
</ol>
Now what can you do with the a plain eclipse that seems to have no usefull functions?
<ul>
	<li>Get the "<a href="http://directory.apache.org/studio/">Apache Directory Studio</a>" (which I consider the best freely - as in beer, and software - available LDAP browser)</li>
	<li>Get the "<a style="font-style:italic;" href="http://www.eclipse.org/bpmn/">BPMN Plugin</a>" a great tool to formally specify processes, usefull for all kind of process not just "business"</li>
	<li>Try "<a href="http://pydev.sourceforge.net/">PyDev</a>" - a great IDE for Python that is just a plugin to Eclipse</li>
</ul>
Happy Holidays to whom it may concern.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>238</wp:post_id>
  <wp:post_date>2008-12-24 22:00:00</wp:post_date>
  <wp:post_date_gmt>2008-12-24 22:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-install-a-minimal-eclipse</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/12/how-to-install-minimal-eclipse.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Python, map and filter.</title>
  <link>http://serverhorror.wordpress.com/2008/12/27/python-map-and-filter/</link>
  <pubDate>Sat, 27 Dec 2008 01:30:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/12/27/python-map-and-filter/</guid>
  <description/>
  <content:encoded><![CDATA[Just another note to myself for some useful python stuff:
<pre style="padding-left:30px;">Python 2.4.4 (#2, Oct 22 2008, 20:20:22)
[GCC 4.1.2 20061115 (prerelease) (Debian 4.1.1-21)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; def multby3(elem):
...     return elem * 3
...
&gt;&gt;&gt; map(multby3, (1, 2, 3, ))
[3, 6, 9]
&gt;&gt;&gt; def even(elem):
...     return not elem % 2
...
&gt;&gt;&gt; filter(even, (1, 2, 3, ))
(2,)
&gt;&gt;&gt; map(multby3, filter(even, (1, 2, 3, )))
[6]
&gt;&gt;&gt;</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>240</wp:post_id>
  <wp:post_date>2008-12-27 01:30:00</wp:post_date>
  <wp:post_date_gmt>2008-12-27 01:30:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-map-and-filter</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/12/python-map-and-filter.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Fibonacci Number Slowness</title>
  <link>http://serverhorror.wordpress.com/2008/12/27/fibonacci/</link>
  <pubDate>Sat, 27 Dec 2008 03:45:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/12/27/fibonacci/</guid>
  <description/>
  <content:encoded><![CDATA[Something I tend to forget:
[sourcecode language="python"]
def fibonacci():
    a, b = 1, 2
    while True:
        yield a
        a, b = b, a + b
[/sourcecode]
Another way of implementing it of course this is very slow, try calculating the <a href="http://en.wikipedia.org/wiki/Fibonacci_number">Fibonacci number</a> of 50 with this algorithm and then get it with the first algorithm:
[sourcecode language="python"]
def fib(n):
    if n &lt; 2:
        return n
    return fib(n-1) + fib(n-2)
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>241</wp:post_id>
  <wp:post_date>2008-12-27 03:45:00</wp:post_date>
  <wp:post_date_gmt>2008-12-27 03:45:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fibonacci</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/12/fibonacci.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Python, SAX and creating instances of your classes from it</title>
  <link>http://serverhorror.wordpress.com/2008/12/27/python-sax-and-creating-instances-of-your-classes-from-it/</link>
  <pubDate>Sat, 27 Dec 2008 20:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/12/27/python-sax-and-creating-instances-of-your-classes-from-it/</guid>
  <description/>
  <content:encoded><![CDATA[So I made up a small XML-Snippet to send data of of probes around. Basically it's just the information
<ul>
	<li>which host collected data of</li>
	<li>which probe,</li>
	<li>when it was and</li>
	<li>what it's value is.</li>
</ul>
What we could end up with in the worst case is an XML document of quite a few megabytes. Now to efficiently parse that thing I wanted to use something that doesn't need to keep the whole document in memory.

What I found was <a href="http://en.wikipedia.org/wiki/Simple_API_for_XML">sax</a> and <a href="http://en.wikipedia.org/wiki/Expat_%28XML%29">expat</a>, both of which are available in the <a href="http://docs.python.org/library/index.html">python standard library</a>.

I chose to use sax as I didn't want to jump into XML to deep, and a bit of googling around suggestedSo what's the simplest way of using this SAX thing with python?

First let's define some sample data
<pre style="padding-left:30px;">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;itemList xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
     &lt;item hostName="host1.example.com" itemName="boolean item"&gt;
             &lt;dateRecorded&gt;1967-08-13&lt;/dateRecorded&gt;
             &lt;boolValue&gt;true&lt;/boolValue&gt;
     &lt;/item&gt;
     &lt;item hostName="host1.example.com" itemName="float item"&gt;
             &lt;dateRecorded&gt;1967-08-13&lt;/dateRecorded&gt;
             &lt;floatValue&gt;1.2&lt;/floatValue&gt;
     &lt;/item&gt;
     &lt;item hostName="host1.example.com" itemName="int item without time"&gt;
             &lt;dateRecorded&gt;1967-08-13&lt;/dateRecorded&gt;
             &lt;intValue&gt;12&lt;/intValue&gt;
     &lt;/item&gt;
     &lt;item hostName="host1.example.com" itemName="string item without time"&gt;
             &lt;dateRecorded&gt;1967-08-13&lt;/dateRecorded&gt;
             &lt;stringValue&gt;foo&lt;/stringValue&gt;
     &lt;/item&gt;
&lt;/itemList&gt;</pre>
Now our first draft of using the SAX module in python. What you do with SAX essentially is:
<ul>
	<li>import the needed modules</li>
	<li>make a subclass of sax.ContentHandler</li>
	<li>Later we will implement the methods for:</li>
</ul>
<ul>
	<li>what to do when the document starts</li>
	<li>what to do when the document ends</li>
	<li>what to do when an element starts</li>
	<li>what to do when an element ends</li>
	<li>what to do with content of elements</li>
</ul>
<pre style="padding-left:30px;">#!/usr/bin/env python
# vim: syn=python ts=4 sts=4 enc=utf-8 tw=78 bg=dark expandtab:

import os
import sys
from xml import sax
class ItemListParser(sax.ContentHandler):
   pass
sax.parse(sys.argv[1], ItemListParser())</pre>
No that code doesn't really do much except that it doesn't generate errors. Let's enhance it so that we at least get some info on what's happening
<pre style="padding-left:30px;">#!/usr/bin/env python
# vim: syn=python ts=4 sts=4 enc=utf-8 tw=78 bg=dark expandtab:

import os
import sys
from xml import sax

def emit(message):
   print message.encode("UTF-8")

class ItemListParser(sax.ContentHandler):
   def startDocument(self):
       emit(u"The document has started")
   def endDocument(self):
       emit(u"The document has ended")
   def startElement(self, name, attrs):
       emit(u"A new element started: %s" % (name, ))
   def endElement(self, name):
       emit(u"A element ended: %s" % (name, ))
   def characters(self, content):
       emit(u"Content found: %s" % (repr(content), ))

sax.parse(sys.argv[1], ItemListParser())</pre>
If you run this code you should be able to see how SAX works, it's actually just executing the method defined for an event. Now the good news is you don't need to worry about memory (mostly, that is). The bad news is that you don't really have any object like access so you need some sort of state to know when to do what. Let's create a simple class that will hold the values of your items defined in the XML sample
<pre style="padding-left:30px;">class Item(object):
   def __init__(self, host, name, date_time, value):
       self.host = host
       self.name = name
       self.time = date_time
       self.value = value

   def __str__(self):
       return u'' % (self.__class__,
           self.host,
           self.name,
           self.time,
           self.value)</pre>
A simple data structure like Item class. The <em>hard part</em> with SAX now is that you don't have access to the necessary parameters without some work to create an instance of the Item class. Let's fix that by first doing a step backwards and writing some documentation for the <em>ItemListParser</em> class so that we have a plan of what we want.
<pre style="padding-left:30px;">class ItemListParser(sax.ContentHandler):
   def startDocument(self):
       """We don't need anything special when the document starts."""
   def endDocument(self):
       """We don't need anything special when the document ends."""
   def startElement(self, name, attrs):
       """Save the state depending on the element encountered."""
   def endElement(self, name):
       """Clear the state depending on the element encountered, possibly
create an instance of the desired object."""
   def characters(self, content):
       """Save the characters encountered to a helper variable depending on
the state of our parser instance."""</pre>
That's nice, but our script is back to a <em>noop</em>. So let's implement what we just defined.
<pre style="padding-left:30px;">class ItemListParser(sax.ContentHandler):
    value_names = (u"boolValue",
        u"floatValue",
        u"intValue",
        u"stringValue", )
    def startDocument(self):
        """We don't need anything special when the document starts."""
    def endDocument(self):
        """We don't need anything special when the document ends."""
    def startElement(self, name, attrs):
        """Save the state depending on the element encountered. Also save the
data that is useful to us."""
        self._date_time = False
        self._get_characters = False
        value_names = (u"boolValue",
            u"floatValue",
            u"intValue",
            u"stringValue", )

        if name == "item":
            self.host_name = attrs.getValue("hostName")
            self.item_name = attrs.getValue("itemName")
        elif name == "dateRecorded":
            self._date_time = True
        elif name in ItemListParser.value_names:
            self._get_characters = True
    def endElement(self, name):
        """Clear the state depending on the element encountered, possibly create an instance of the desired object."""
        if name == "item":
            # we are at the end of an item and now we should be able to
            # construct a new item from the values we saved earlier
            pass
        elif name == "dateRecorded":
            # reset the state
            self._date_time = False
        elif name in ItemListParser.value_names:
            # reset the state
            self._get_characters = False
    def characters(self, content):
        """Save the characters encountered to a helper variable depending on
the state of our parser instance."""
        try:
            if self._get_characters is True:
                # yes we are interested in the content here
                self.value = content
            elif self._date_time is True:
                self.date_time = content
        except AttributeError, e:
            # if we don't know about self._get_characters or self._date_time yet: don't care
            emit(e)</pre>
Now we are all good to go, but still we don't have anything done to our <em>Item</em> class that holds the data we encountered. Let's change that and at least create a single <em>Item</em> that we can print. To do that just modify the endelement method to look like the following:
<pre style="padding-left:30px;">    def endElement(self, name):
        """Clear the state depending on the element encountered,
           possibly create an instance of the desired object."""
        if name == "item":
            # we are at the end of an item and now we should be able to
            # construct a new item from the values we saved earlier
            try:
                emit(Item(self.host_name,
                    self.item_name,
                    self.date_time,
                    self.value))
            except AttributeError, e:
                # we may not really now about all the stuff we need by now...
                pass
        elif name == "dateRecorded":
            # reset the state
            self._date_time = False
        elif name in ItemListParser.value_names:
            # reset the state
            self._get_characters = False</pre>
If we now call our python script with a file that contains our sample XML you should get the following output:
<pre style="padding-left:30px;">$ python itemlistparser.py sampleData.xml
&lt;: "host1.example.com" "boolean item" "2000-08-13" "true"&gt;
&lt;: "host1.example.com" "float item" "2001-08-13" "1.2"&gt;
&lt;: "host1.example.com" "int item without time" "2002-08-13" "12"&gt;
&lt;: "host1.example.com" "string item without time" "2003-08-13" "foo"&gt;</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>242</wp:post_id>
  <wp:post_date>2008-12-27 20:00:00</wp:post_date>
  <wp:post_date_gmt>2008-12-27 20:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-sax-and-creating-instances-of-your-classes-from-it</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/12/python-sax-and-creating-instances-of.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>See what you have made me do, you RUBY LOVERS!!?!?!!</title>
  <link>http://serverhorror.wordpress.com/2008/12/27/see-what-you-have-made-me-do-you-ruby-lovers/</link>
  <pubDate>Sat, 27 Dec 2008 20:30:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/12/27/see-what-you-have-made-me-do-you-ruby-lovers/</guid>
  <description/>
  <content:encoded><![CDATA[[sourcecode language="text"]From: Giudo von Rossom &amp;lt;...&amp;gt;
Subject: Re: HELP!...Google SketchUp needs a Python API
Newsgroups: comp.lang.python
Date: 29 Nov 2008 00:26:06 GMT

On Fri, 28 Nov 2008 15:22:58 -0800, r wrote:
&gt; You know I said before that I hoped Guido never see's this thread...but i
&gt; wonder if maybe he should see it...To see how far the &quot;great advocates&quot;
&gt; have fallen. I am disappointed to say the least. I would not want to be in
&gt; his shoes and see this!

I am shocked! Shocked and dismayed and distraught and heart-borken by the
vile, dastardly, spineless false-friend's who have BETRAYED Pyhton and
STABBED ME IN TEH BACK like the cowardly FIENDS they ARE!

Everybody except r on this thread is banned from using Ptyhon. No,
EVERYBODY is banned from Pyhton. I'm going to stop all work on it
immediatelty and delete it from my website.

See what you have made me do, you RUBY LOVERS!!?!?!!

--
Giudo
--
http://mail.python.org/mailman/listinfo/python-list
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>243</wp:post_id>
  <wp:post_date>2008-12-27 20:30:00</wp:post_date>
  <wp:post_date_gmt>2008-12-27 20:30:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>see-what-you-have-made-me-do-you-ruby-lovers</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/12/see-what-you-have-made-me-do-you-ruby.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1d420844eadaf4e68514f6fd963632b9</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>MySQL - kiss goodbye to your data</title>
  <link>http://serverhorror.wordpress.com/2008/12/29/mysql-kiss-goodbye-to-your-data/</link>
  <pubDate>Mon, 29 Dec 2008 21:37:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/12/29/mysql-kiss-goodbye-to-your-data/</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://www.planetmysql.org">Planet MySQL</a> had a <a href="http://www.pythian.com/blogs/1422/draft-mind-the-sql_mode-when-running-alter-table#more-1422">blog post about some strange behaviour</a> <a href="http://www.mysql.com">MySQL</a> is showing

<strong>Step One</strong>: Create a table with a primary key
[sourcecode language="text"]
mysql&gt; use test;
Database changed
mysql&gt; show tables;
Empty set (0.00 sec)

mysql&gt; create table test_table (id int not null primary key) engine=innodb;
Query OK, 0 rows affected (0.01 sec)

mysql&gt; desc test_table;
+-------+---------+------+-----+---------+-------+
| Field | Type    | Null | Key | Default | Extra |
+-------+---------+------+-----+---------+-------+
| id    | int(11) | NO   | PRI |         |       |
+-------+---------+------+-----+---------+-------+
1 row in set (0.00 sec)

mysql&gt; insert into test_table (id) values (1);
Query OK, 1 row affected (0.00 sec)

mysql&gt; insert into test_table (id) values (2);
Query OK, 1 row affected (0.00 sec)

mysql&gt; insert into test_table (id) values (0);
Query OK, 1 row affected (0.00 sec)

mysql&gt; select * from test_table;
+----+
| id |
+----+
|  0 |
|  1 |
|  2 |
+----+
3 rows in set (0.00 sec)

mysql&gt;
[/sourcecode]
<strong>Step Two</strong>: Alter the table to an auto_increment
[sourcecode language="text"]
mysql&gt; alter table test_table modify id int not null auto_increment, auto_increment=3;
Query OK, 3 rows affected (0.03 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql&gt; select * from test_table;
+----+
| id |
+----+
|  1 |
|  2 |
|  3 |
+----+
3 rows in set (0.00 sec)

mysql&gt;
[/sourcecode]
<strong>Step Three</strong>: Kiss goodbye to your data

To be fair: There is a solution to this, but personally I think that should be the default, or at least there should be the a warning or error when such a statement is altering your data.
[sourcecode language="text"]
mysql&gt; set sql_mode='NO_AUTO_VALUE_ON_ZERO';
Query OK, 0 rows affected (0.00 sec)

mysql&gt; select @@session.sql_mode;
+-----------------------+
| @@session.sql_mode    |
+-----------------------+
| NO_AUTO_VALUE_ON_ZERO |
+-----------------------+
1 row in set (0.00 sec)
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>244</wp:post_id>
  <wp:post_date>2008-12-29 21:37:00</wp:post_date>
  <wp:post_date_gmt>2008-12-29 21:37:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>mysql-kiss-goodbye-to-your-data</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/12/mysql-kiss-goodbye-to-your-data.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Relation and Database size for munin</title>
  <link>http://serverhorror.wordpress.com/2009/01/11/relation-and-database-size-for-munin/</link>
  <pubDate>Sun, 11 Jan 2009 17:15:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2009/01/11/relation-and-database-size-for-munin/</guid>
  <description/>
  <content:encoded><![CDATA[Since we are running into some minor scaling problems at work and <a href="http://munin.projects.linpro.no/">Munin</a> doesn't provide the necessary information out of the box I created a small script that let's you see the relation size total relation size and also the database size of a <a href="http://www.postgresql.org/">PostgreSQL</a> database.

The necessary information is quite easy to find in the <a href="http://www.postgresql.org/docs/current/interactive/functions-admin.html#FUNCTIONS-ADMIN-DBSIZE">PostgreSQL documentation</a>. And with <a href="http://www.python.org/">Python</a> at hand you have a tool that let's you easily create the <a href="http://github.com/mm/munin-plugins/tree/master/pg_dbsize_.py">necessary script, available at my github repository</a>.

The usage is simple just copy the script to a suitable place - personally I'd suggest either a directory under <span style="font-style:italic;">/opt</span> oder <span style="font-style:italic;">/usr/local/bin</span> - as my understanding of the <a href="http://www.pathname.com/fhs/">Linux FHS</a> is that this is just the right place.

When you're done make the script executable and symlink it to:
<ul>
	<li><span style="font-style:italic;">pg_dbsize_</span> or</li>
	<li><span style="font-style:italic;">pg_relation_size_</span> or</li>
	<li><span style="font-style:italic;">pg_total_relation_size_</span> (this includes <a href="http://www.postgresql.org/docs/current/interactive/storage-toast.html#STORAGE-TOAST">TOAST</a> and indexes)</li>
</ul>
The latter two require to configure munin with at least a <span style="font-style:italic;">PG_DB</span> environment variable so that the relation name is qualified and the functions used in the script will find the relation. The first form should just work.

Get the script here:
<ul>
	<li><a href="http://github.com/mm/munin-plugins/tree/master/pg_dbsize_.py">http://github.com/mm/munin-plugins/tree/master/pg_dbsize_.py</a></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>247</wp:post_id>
  <wp:post_date>2009-01-11 17:15:00</wp:post_date>
  <wp:post_date_gmt>2009-01-11 17:15:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>relation-and-database-size-for-munin</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2009/01/relation-and-database-size-for-munin.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Creating Sparse Files</title>
  <link>http://serverhorror.wordpress.com/2009/01/30/creating-sparse-files/</link>
  <pubDate>Fri, 30 Jan 2009 23:15:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2009/01/30/creating-sparse-files/</guid>
  <description/>
  <content:encoded><![CDATA[This is something I really tend to forget: <strong>How do you create a sparse file in unix?</strong>
[sourcecode language="text"]
dd if=/dev/zero of=/tmp/sparsefile.sparse bs=1 count=0 seek=5M
[/sourcecode]
From <a href="http://en.wikipedia.org/wiki/Sparse_file">Wikipedia</a> about what a sparse file is:
<blockquote>In <a title="Computer science" href="http://en.wikipedia.org/wiki/Computer_science">computer science</a>, a <strong>sparse file</strong> is a type of <a title="Computer file" href="http://en.wikipedia.org/wiki/Computer_file">computer file</a> that attempts to use <a title="File system" href="http://en.wikipedia.org/wiki/File_system">file system</a> space more efficiently when blocks allocated to the file are mostly empty.</blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>249</wp:post_id>
  <wp:post_date>2009-01-30 23:15:00</wp:post_date>
  <wp:post_date_gmt>2009-01-30 23:15:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>creating-sparse-files</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2009/01/creating-sparse-files.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>When can a TINYTEXT column have a default value?</title>
  <link>http://serverhorror.wordpress.com/2009/02/23/when-can-a-tinytext-column-have-a-default-value/</link>
  <pubDate>Mon, 23 Feb 2009 21:30:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2009/02/23/when-can-a-tinytext-column-have-a-default-value/</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://www.flamingspork.com/blog/2009/02/24/when-can-a-tinytext-column-have-a-default-value/">This</a>:
[sourcecode language="text"]
$ mysql -u root test
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 2496
Server version: 5.0.51a-3ubuntu5.4-log (Ubuntu)

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt; create table t1 (a tinytext default 'fail');
ERROR 1101 (42000): BLOB/TEXT column 'a' can't have a default value
mysql&gt; create table t1 (a tinytext default '');
Query OK, 0 rows affected, 1 warning (0.07 sec)

mysql&gt; show warnings;
+---------+------+-------------------------------------------------+
| Level   | Code | Message                                         |
+---------+------+-------------------------------------------------+
| Warning | 1101 | BLOB/TEXT column 'a' can't have a default value |
+---------+------+-------------------------------------------------+
1 row in set (0.00 sec)
[/sourcecode]
wouldn't have happened with a <a href="http://www.postgresql.org">real database</a>:
[sourcecode language="text"]
test=# create TABLE xxxx(
test(#  id serial,
test(#  bla text default 'foo'
test(# );
NOTICE:  CREATE TABLE will create implicit sequence &quot;xxxx_id_seq&quot; for serial column &quot;xxxx.id&quot;
CREATE TABLE
test=# INSERT into xxxx (id) values (1);
INSERT 0 1
test=# SELECT * from xxxx;
 id | bla
----+-----
  1 | foo
(1 row)
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>252</wp:post_id>
  <wp:post_date>2009-02-23 21:30:00</wp:post_date>
  <wp:post_date_gmt>2009-02-23 21:30:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>when-can-a-tinytext-column-have-a-default-value</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2009/02/when-can-tiny-text-column-have-default.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Force a User to change password</title>
  <link>http://serverhorror.wordpress.com/2009/02/25/force-a-user-to-change-password/</link>
  <pubDate>Wed, 25 Feb 2009 21:41:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2009/02/25/force-a-user-to-change-password/</guid>
  <description/>
  <content:encoded><![CDATA[How do you force a user to change his/her password on the next login under linux?
[sourcecode language="text"]
passwd -e &lt;user in question&gt;
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>253</wp:post_id>
  <wp:post_date>2009-02-25 21:41:00</wp:post_date>
  <wp:post_date_gmt>2009-02-25 21:41:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>force-a-user-to-change-password</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2009/02/force-user-to-change-password.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>MySQL, Sun, Oracle -- Time for evolution</title>
  <link>http://serverhorror.wordpress.com/2009/04/21/mysql-sun-oracle-time-for-evolution/</link>
  <pubDate>Tue, 21 Apr 2009 05:39:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2009/04/21/mysql-sun-oracle-time-for-evolution/</guid>
  <description/>
  <content:encoded><![CDATA[No I'm not going to advertise that <a href="http://www.mysql.com">MySQL</a> can only get better because <a href="http://www.sun.com">Sun</a> bought it and now has in turn been bought by <a href="http://www.oracle.com">Oracle</a>.

It is true that MySQL can only get better but the reasons for this are that there for example is:
<ul>
	<li>no way to do a consistent backup</li>
	<li>schema changes aren't transactional</li>
	<li>it doesn't scale very well</li>
</ul>
There couldn't be a better time for <a href="http://www.postgresql.org">PostgreSQL</a>. It's completely community driven (released under a <a href="http://www.postgresql.org/about/licence">BSD-License</a>). That means
<ul>
	<li>YOU are defining which features get into it at which don't.</li>
	<li>it can't be bought by a company that suddenly shuts it down</li>
	<li>If you want to you can patch <a href="http://www.postgresql.org">PostgreSQL</a> to your liking and don't give away the source code (not necessarily a good thing, but you have the freedom to do so)</li>
</ul>
To be fair MySQL couldn't be shut down down either, but Oracle could just stop releasing a database that is called MySQL and all of a sudden you may find yourself in the situation that you have to choose between PerconaSQL or whatnot.

Not so with <a href="http://www.postgresql.org">PostgreSQL</a>. You get <a href="http://www.postgresql.org">PostgreSQL</a> which is IMHO superior to all other Open-Source Databases out there, in fact I think it's actually the only Open-Source <a href="http://en.wikipedia.org/wiki/Relational_database_management_system">RDBMS</a> system left.

<a href="http://www.postgresql.org">Go get PostgreSQL!</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>254</wp:post_id>
  <wp:post_date>2009-04-21 05:39:00</wp:post_date>
  <wp:post_date_gmt>2009-04-21 05:39:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>mysql-sun-oracle-time-for-evolution</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2009/04/mysql-sun-oracle-time-for-evolution.html]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Firefox 3.5 ready to download</title>
  <link>http://serverhorror.wordpress.com/2009/06/30/firefox-3-5-ready-to-download/</link>
  <pubDate>Tue, 30 Jun 2009 13:30:26 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=355</guid>
  <description/>
  <content:encoded><![CDATA[<a href="ftp://releases.mozilla.org/pub/mozilla.org/firefox/releases/3.5/">Firefox 3.5 is ready</a> for download. The <a href="http://www.mozilla.com/en-US/firefox/comingsoon/">official Press Release is still missing</a>. But I found some reports that it's already possible to download the new Firefox 3.5

Probably the most interesting changes are:
<ul>
	<li>HTML5 support and</li>
	<li>native support of Ogg-Vorbis and Ogg-Theora</li>
</ul>
That means that you are now able to watch videos (as hopefully some video portals will soon change, and I read reports that some already did) without any 3rd party plugins or extensions. Right now the download doesn't have a link but you can:
<ul>
	<li><strong><a href="ftp://releases.mozilla.org/pub/mozilla.org/firefox/releases/3.5/">browse it here to get it now via FTP</a> or</strong></li>
	<li><strong>use <a href="http://download.mozilla.org/?product=firefox-3.5&amp;os=linux&amp;lang=en-US">this link to directly download via http</a></strong></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>355</wp:post_id>
  <wp:post_date>2009-06-30 13:30:26</wp:post_date>
  <wp:post_date_gmt>2009-06-30 13:30:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>firefox-3-5-ready-to-download</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1250068371";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079198";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>8</wp:comment_id>
    <wp:comment_author><![CDATA[Update: Firefox 3.5 ready to download &laquo; Server Horror]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://serverhorror.wordpress.com/2009/06/30/update-firefox-3-5-ready-to-download/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.96.143</wp:comment_author_IP>
    <wp:comment_date>2009-06-30 14:13:43</wp:comment_date>
    <wp:comment_date_gmt>2009-06-30 14:13:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] 3.5 ready to&nbsp;download  Posted in Uncategorized by Martin on 2009-06-30   As Firefox is now ready to download, here is the nice screenshot from the about [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>9</wp:comment_id>
    <wp:comment_author><![CDATA[Update: Firefox 3.5 officially released &laquo; Server Horror]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://serverhorror.wordpress.com/2009/06/30/update-firefox-3-5-officially-released/</wp:comment_author_url>
    <wp:comment_author_IP>74.200.245.188</wp:comment_author_IP>
    <wp:comment_date>2009-06-30 15:06:16</wp:comment_date>
    <wp:comment_date_gmt>2009-06-30 15:06:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Update: Firefox 3.5 officially&nbsp;released  Posted in Uncategorized by Martin on 2009-06-30   A small update on the earlier download of Firefox 3.5. [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Update: Firefox 3.5 ready to download</title>
  <link>http://serverhorror.wordpress.com/2009/06/30/update-firefox-3-5-ready-to-download/</link>
  <pubDate>Tue, 30 Jun 2009 14:10:02 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=361</guid>
  <description/>
  <content:encoded><![CDATA[As Firefox is now <a href="http://serverhorror.wordpress.com/2009/06/30/firefox-3-5-ready-to-download/">ready to download</a>, here is the nice screenshot from the about page.

It's indeed indicating that this is the final release

<img class="aligncenter size-full wp-image-362" title="Firefox_3.5" src="http://serverhorror.files.wordpress.com/2009/06/firefox_3-5.png" alt="Firefox_3.5" width="304" height="481" />]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>361</wp:post_id>
  <wp:post_date>2009-06-30 14:10:02</wp:post_date>
  <wp:post_date_gmt>2009-06-30 14:10:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>update-firefox-3-5-ready-to-download</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1250674297";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079198";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Firefox_3.5</title>
  <link>http://serverhorror.wordpress.com/2009/06/30/update-firefox-3-5-ready-to-download/firefox_3-5/</link>
  <pubDate>Tue, 30 Jun 2009 14:12:35 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2009/06/firefox_3-5.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>362</wp:post_id>
  <wp:post_date>2009-06-30 14:12:35</wp:post_date>
  <wp:post_date_gmt>2009-06-30 14:12:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>firefox_3-5</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>361</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2009/06/firefox_3-5.png</wp:attachment_url>
</item>
<item>
  <title>Update: Firefox 3.5 officially released</title>
  <link>http://serverhorror.wordpress.com/2009/06/30/update-firefox-3-5-officially-released/</link>
  <pubDate>Tue, 30 Jun 2009 15:00:47 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=367</guid>
  <description/>
  <content:encoded><![CDATA[A small update on the <a href="http://serverhorror.wordpress.com/2009/06/30/firefox-3-5-ready-to-download/">earlier download of Firefox 3.5</a>.

The <a href="http://www.mozilla.com/en-US/firefox/firefox.html">Mozilla product page of firefox</a> is now officially stating that Firefox 3.5 is available.

<a href="http://www.mozilla.com/en-US/firefox/firefox.html"><img class="aligncenter size-full wp-image-368" title="Firefox_3.5_Release" src="http://serverhorror.files.wordpress.com/2009/06/firefox_3-5_release.png" alt="Firefox_3.5_Release" width="704" height="315" /></a>

Right now the <a href="http://www.mozilla.com/en-US/firefox/3.5/releasenotes/">Release Notes</a> still yield a 404. Probably that will change quite soon.
<p style="text-align:center;"><a href="http://www.mozilla.com/en-US/firefox/3.5/releasenotes/"><img class="aligncenter size-full wp-image-370" title="Firefox_3.5_ReleaseNotes" src="http://serverhorror.files.wordpress.com/2009/06/firefox_3-5_releasenotes.png" alt="Firefox_3.5_ReleaseNotes" width="704" height="412" /></a></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>367</wp:post_id>
  <wp:post_date>2009-06-30 15:00:47</wp:post_date>
  <wp:post_date_gmt>2009-06-30 15:00:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>update-firefox-3-5-officially-released</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1259053360";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079196";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>10</wp:comment_id>
    <wp:comment_author><![CDATA[serverhorror's status on Tuesday, 30-Jun-09 15:12:53 UTC - Identi.ca]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://identi.ca/notice/5902755</wp:comment_author_url>
    <wp:comment_author_IP>8.12.43.93</wp:comment_author_IP>
    <wp:comment_date>2009-06-30 15:12:56</wp:comment_date>
    <wp:comment_date_gmt>2009-06-30 15:12:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Seems Firefox 3.5 is now officially available http://serverhorror.wordpress.com/2009/06/30/update-firefox-3-5-officially-released/ [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>11</wp:comment_id>
    <wp:comment_author><![CDATA[serverhorror's status on Tuesday, 30-Jun-09 15:27:54 UTC - Identi.ca]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://identi.ca/notice/5903317</wp:comment_author_url>
    <wp:comment_author_IP>8.17.172.111</wp:comment_author_IP>
    <wp:comment_date>2009-06-30 15:27:57</wp:comment_date>
    <wp:comment_date_gmt>2009-06-30 15:27:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Seems Firefox 3.5 is now officially available http://serverhorror.wordpress.com/2009/06/30/update-firefox-3-5-officially-released/ [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>12</wp:comment_id>
    <wp:comment_author><![CDATA[serverhorror's status on Tuesday, 30-Jun-09 15:31:27 UTC - Identi.ca]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://identi.ca/notice/5903446</wp:comment_author_url>
    <wp:comment_author_IP>8.17.172.111</wp:comment_author_IP>
    <wp:comment_date>2009-06-30 15:31:31</wp:comment_date>
    <wp:comment_date_gmt>2009-06-30 15:31:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...]  Update: Firefox 3.5 officially released &laquo; Server Horror  [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Firefox_3.5_Release</title>
  <link>http://serverhorror.wordpress.com/2009/06/30/update-firefox-3-5-officially-released/firefox_3-5_release/</link>
  <pubDate>Tue, 30 Jun 2009 15:05:29 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2009/06/firefox_3-5_release.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>368</wp:post_id>
  <wp:post_date>2009-06-30 15:05:29</wp:post_date>
  <wp:post_date_gmt>2009-06-30 15:05:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>firefox_3-5_release</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>367</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2009/06/firefox_3-5_release.png</wp:attachment_url>
</item>
<item>
  <title>Firefox_3.5_ReleaseNotes</title>
  <link>http://serverhorror.wordpress.com/2009/06/30/update-firefox-3-5-officially-released/firefox_3-5_releasenotes/</link>
  <pubDate>Tue, 30 Jun 2009 15:07:12 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2009/06/firefox_3-5_releasenotes.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>370</wp:post_id>
  <wp:post_date>2009-06-30 15:07:12</wp:post_date>
  <wp:post_date_gmt>2009-06-30 15:07:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>firefox_3-5_releasenotes</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>367</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2009/06/firefox_3-5_releasenotes.png</wp:attachment_url>
</item>
<item>
  <title>LDAP Setup for a SAMBA-Server</title>
  <link>http://serverhorror.wordpress.com/?p=381</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=381</guid>
  <description/>
  <content:encoded><![CDATA[ahhh....the wonderful world of CIFS (Samba and Windows).

Until recently we had an old legacy Samba server providing CIFS shares to our users. We decided it was time to provide real service to our users with good shares(TM). After some requirement thinking we came up with a list of what we need to do.<!--more-->

I'll adapt the requirements mentioned here to what I think is better than what we can currently do (like LDAPv3 only and other minor stuff but the overall requirements are still the same.

Also this is only about the (re)design of the LDAP tree so that we are in a useable state, and hopefully have some good stuff in it that will ease up working with it in the future.
<h2>LDAP with V3 and TLS only</h2>
<h2>rfc2307bis</h2>
Makes objectClass: posixGroup an auxilliary objectClass. Let's us use objectClass: groupOfNames as a grouping mechanism.
<h2>Lock down via ACL</h2>
<ul>
	<li>Do not let anonymous users access the directory</li>
	<li>allow access to password attributes by anonymous auth</li>
	<li>allow access to password attributes by self write, by operator write, by * none</li>
</ul>
<h2>LDAP Auth via PAM</h2>
<ul>
	<li>libnss-ldap</li>
	<li>libpam-ldap</li>
</ul>
<h2>Nested Groups via PAM</h2>
<ul>
	<li>for free with rfc2307bis</li>
</ul>
<h2>LDAP Overlays</h2>
<h3>dynlist</h3>
<ul>
	<li>activate the overlay for dynamic Groups</li>
	<li>configure the overlay to (optionally) remap roleOccupant to member when retrieving roleMembers/Occupants</li>
</ul>
<h3>unique</h3>
<ul>
	<li>uidNumber in ou=People</li>
	<li>uid in ou=People</li>
	<li>cn in ou=People</li>
	<li>sambaSID in ou=People</li>
	<li>gidNumber in ou=Groups</li>
	<li>cn in ou=Groups</li>
</ul>
<h3>memberOf Attribute Overlay</h3>
<ul>
	<li>convienence to quickly see the memberships of an object directly at the object
<ul>
	<li>fix the issue with recursive memberOf attributes not working</li>
</ul>
</li>
</ul>
<h2>Using Roles instead of Groups</h2>
<ul>
	<li>objectClass: organizationalRole</li>
	<li>fix the libnss-ldap issue that somehow pop's up when using this</li>
</ul>
Needs some special config in the dynlist overlay]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>381</wp:post_id>
  <wp:post_date>2011-02-03 17:56:58</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Screenshot-Keyboard Preferences</title>
  <link>http://serverhorror.wordpress.com/2009/08/12/numerical-keypad-not-working-heres-a-solutiontm/screenshot-keyboard-preferences/</link>
  <pubDate>Wed, 12 Aug 2009 12:35:58 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2009/08/screenshot-keyboard-preferences.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Screenshot-Keyboard Preferences]]></excerpt:encoded>
  <wp:post_id>441</wp:post_id>
  <wp:post_date>2009-08-12 12:35:58</wp:post_date>
  <wp:post_date_gmt>2009-08-12 12:35:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screenshot-keyboard-preferences</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>439</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2009/08/screenshot-keyboard-preferences.png</wp:attachment_url>
</item>
<item>
  <title>Book Review: Python for System Administrators</title>
  <link>http://serverhorror.wordpress.com/?p=487</link>
  <pubDate>Sat, 14 Nov 2009 13:48:42 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=487</guid>
  <description/>
  <content:encoded><![CDATA[Obvious examples
Bad indentation
Twistd chapter useless
No Admin specifics
Useless Introduction to Python Basics

GOOD
snmp howto
Scapy but Way too short]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>487</wp:post_id>
  <wp:post_date>2009-11-14 13:48:42</wp:post_date>
  <wp:post_date_gmt>2009-11-14 13:48:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>I know deployment - I'm your shiny! new cloud</title>
  <link>http://serverhorror.wordpress.com/?p=579</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=579</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>579</wp:post_id>
  <wp:post_date>2011-02-03 17:56:55</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Include! Glob! It's teh WIN!</title>
  <link>http://serverhorror.wordpress.com/?p=595</link>
  <pubDate>Wed, 31 Mar 2010 20:53:19 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=595</guid>
  <description/>
  <content:encoded><![CDATA[http://en.wikipedia.org/wiki/Lexicographical_order Lexicographical order

http://wiki.exim.org/FAQ/Linux/Q9606

http://sudo.ws/repos/sudo/rev/3923d85a6c79 SUDO: Implement #includedir directive.
http://sudo.ws/repos/sudo/rev/a7daa1bce6c2 SUDO: For #includedir, ignore any file containing a dot]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>595</wp:post_id>
  <wp:post_date>2010-03-31 20:53:19</wp:post_date>
  <wp:post_date_gmt>2010-03-31 20:53:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>include-glob-its-th-win</wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>PHP and MySQL - It's teh WIN - Is it?</title>
  <link>http://serverhorror.wordpress.com/?p=618</link>
  <pubDate>Fri, 02 Apr 2010 13:58:14 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=618</guid>
  <description/>
  <content:encoded><![CDATA[Why is PHP bound to MySQL?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>618</wp:post_id>
  <wp:post_date>2010-04-02 13:58:14</wp:post_date>
  <wp:post_date_gmt>2010-04-02 13:58:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Getting HP Smart Array information</title>
  <link>http://serverhorror.wordpress.com/?p=688</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=688</guid>
  <description/>
  <content:encoded><![CDATA[[sourcecode language="text"]

hpacucli ctrl all show detail
hpacucli ctrl slot=0 show config
hpacucli ctrl slot=0 array all show
hpacucli ctrl slot=0 array A show
hpacucli ctrl slot=0 physicaldrive all show
hpacucli ctrl slot=0 physicaldrive 1I:1:1 show
hpacucli ctrl slot=0 logicaldrive all show
hpacucli ctrl slot=0 logicaldrive 1 show
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>688</wp:post_id>
  <wp:post_date>2010-04-12 22:32:06</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Virtualization with KVM (Part 1)</title>
  <link>http://serverhorror.wordpress.com/?p=739</link>
  <pubDate>Thu, 20 May 2010 12:00:40 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=739</guid>
  <description/>
  <content:encoded><![CDATA[So <a href="http://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine">Kernel-based Virtual Machine (KVM)</a> is something <em>everybody wants to use</em>(TM). Let's define a (not so) small private project to make it useful. Since XEN will never (and should never - IMHO) be in the mainline kernel, let's do some KVM!

First of our final requirements (in random order):
<ul>
	<li>Get Started! Do the basic setup, verify we have KVM working</li>
	<li>Automated Guest Installations from the direct physical host</li>
	<li>Offer IPv4 connectivity over public IPs to  guest machines</li>
	<li>Offer IPv6 and IPv4 connectivity to guest machines</li>
	<li>Offer IPv6 as the only connectivity to guest machines</li>
	<li>Automagically create new guests with a single command</li>
</ul>
Since my private resources are limited this will run on a <a href="http://www.hetzner.de/">hosting provider</a>. The initial "problem" with this is their network setup, it will however not be a problem when diving deeper once this is set up.
<h1>Network Configuration</h1>
<h2>Bridging the Gap</h2>
The host will be running Debian/Squeeze and what you get after installing is this:

[sourcecode language="text"]
# Loopback device:
auto lo
iface lo inet loopback

# device: eth0
auto  eth0
    iface eth0 inet static
    address 192.0.2.195
    broadcast 192.0.2.255
    netmask 255.255.255.192
    gateway 192.0.2.193
    default route to access subnet

# default route to access subnet
up route add -net 192.0.2.192 netmask 255.255.255.192 gw 192.0.2.193 br0
[/sourcecode]

Let's make a bridge which will later on be used to route the traffic from our guests to the world:

[sourcecode language="text"]
# Loopback device:
auto lo
iface lo inet loopback

## device: br0
auto br0
iface br0 inet static
    bridge_ports eth0 dummy0
    bridge_maxwait 2
    address 192.0.2.195
    netmask 255.255.255.192
    gateway   192.0.2.193

# default route to access subnet
up route add -net 192.0.2.192 netmask 255.255.255.192 gw 192.0.2.193 eth0
[/sourcecode]

Let's look at the output of <tt>iproute2</tt> now.

[sourcecode language="text"]
$ ip link list
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue state UNKNOWN
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000
    link/ether 00:24:21:b4:36:26 brd ff:ff:ff:ff:ff:ff
3: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UNKNOWN
    link/ether 00:24:21:b4:36:26 brd ff:ff:ff:ff:ff:ff
4: dummy0: &lt;BROADCAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UNKNOWN
    link/ether 92:0e:c3:fe:5f:ae brd ff:ff:ff:ff:ff:ff
[/sourcecode]

All nice and fine, we have a <tt>br0</tt> interface <tt>eth0</tt> and <tt>dummy0</tt>. What about the assigned addresses?

[sourcecode language="text"]
$ ip address list
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue state UNKNOWN
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000
    link/ether 00:24:21:b4:36:26 brd ff:ff:ff:ff:ff:ff
    inet6 fe80::224:21ff:feb4:3626/64 scope link
       valid_lft forever preferred_lft forever
3: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UNKNOWN
    link/ether 00:24:21:b4:36:26 brd ff:ff:ff:ff:ff:ff
    inet 192.0.2.195/26 brd 188.40.110.255 scope global br0
    inet6 fe80::224:21ff:feb4:3626/64 scope link
       valid_lft forever preferred_lft forever
4: dummy0: &lt;BROADCAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UNKNOWN
    link/ether 92:0e:c3:fe:5f:ae brd ff:ff:ff:ff:ff:ff
    inet6 fe80::900e:c3ff:fefe:5fae/64 scope link
       valid_lft forever preferred_lft forever
[/sourcecode]

All nice and fine, <tt>br0</tt> has the IP configured <tt>eth0</tt> and <tt>dummy0</tt> don't have an IPv4 address. This looks quite good. Let's see how the routing table works:

[sourcecode language="text"]
$ ip route list
192.0.2.192/26 dev br0  proto kernel  scope link  src 192.0.2.195
default via 192.0.2.193 dev br0
[/sourcecode]

This doesn't look so good. In the <tt>/etc/network/interfaces</tt> file we told debian to route thru <tt>eth0</tt> but ended up routing thru <tt>br0</tt> what happened?

Actually nothing too serious. Our Linux kernel knows that <tt>eth0</tt> doesn't have an address and thus uses <tt>br0</tt> instead. Which actually is what whe told it to do in the definition of <tt>iface br0 inet static</tt>. What about our bridge config?

[sourcecode language="text"]
$ sudo brctl show
[sudo] password for sysmaint:
bridge name	bridge id		STP enabled	interfaces
br0		8000.002421b43626	no		    dummy0
                                                              eth0
[/sourcecode]

[sourcecode language="text"]
$ sudo brctl showmacs br0
port no	mac addr		        is local?	ageing timer
  1	        00:23:9c:17:34:23	no		   0.00
  1	        00:24:21:b4:36:26	yes		   0.00
  2	        92:0e:c3:fe:5f:ae	yes		   0.00
[/sourcecode]

All nice and fine, our bridge is here, and has the members we defined.
<h1>Virtualize!</h1>
It's time to run our first virtualized machine. For testing purposes we'll simply install Debian/Stable with the default network config that KVM uses. It has nothing to do with the bridge setup since it uses an internal DHCP server and NAT services. So here are the ToDos:
<ol>
	<li>Create the image</li>
	<li>Run the guest</li>
	<li>Install Debian/Stable to verify we have connectivity</li>
</ol>
[sourcecode language="text"]
$ qemu-img create test.img 10G
[/sourcecode]

[sourcecode language="text"]
sudo /usr/bin/kvm \
    -k en \
    -name test \
    -boot order=cd,once=d \
    -drive file=$HOME/test.img,if=virtio,format=raw,media=disk \
    -drive file=$HOME/debian-504-amd64-netinst.iso,if=ide,media=cdrom \
    -usbdevice tablet \
    -watchdog i6300esb \
    -m 1024 \
    -vnc :1 \
    -balloon virtio \
    -pidfile /var/run/kvm.test
[/sourcecode]

The command above does the following:
<ul>
	<li>Tell KVM to use the english keymap</li>
	<li>Name the guest test</li>
	<li>Define a boot order of: disk,cdrom; but on the first boot use cdrom</li>
	<li>Define a hard disk image, it's location and tell it to use the virtualized IO</li>
	<li>Define a cdrom disk image, it's location and tell it to use the IDE IO</li>
	<li>Set up a USB Device so that the SDL interaction VNC works more smoothly</li>
	<li>Provide a watchdog hardware device</li>
	<li>Provide 1024MiB of memory</li>
	<li>Start a VNC Server on display one (port 5901)</li>
	<li>Use the balloon driver</li>
	<li>Tell KVM to create a PID file</li>
</ul>
When this is running just fire up a VNC Viewer and connect to the host

[sourcecode language="text"]
$ vncviewer 192.2.0.195:1
[/sourcecode]

If you have your Debian ISO image in the correct place you should be presented with the boot screen of the Debian ISO image. Just click thru and install. Since we used the netinst ISO image a successful installation means you have basic connectivity to the outside world.

In the next installment we'll further refine this to provide a DHCP and TFTP server thru the user mode networking so that we can automagically install our guests without further interaction.

This is our status as of now:

<ul>
	<li><del datetime="2010-05-20T11:11:42+00:00">Get Started! Do the basic setup, verify we have KVM working</del></li>
	<li>Automated Guest Installations from the direct physical host</li>
	<li>Offer IPv4 connectivity over public IPs to  guest machines</li>
	<li>Offer IPv6 and IPv4 connectivity to guest machines</li>
	<li>Offer IPv6 as the only connectivity to guest machines</li>
	<li>Automagically create new guests with a single command</li>
</ul>
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>739</wp:post_id>
  <wp:post_date>2010-05-20 12:00:40</wp:post_date>
  <wp:post_date_gmt>2010-05-20 12:00:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>virtualization-with-kvm-part-1</wp:post_name>
  <wp:status>pending</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Virtualization with KVM (Part 2)</title>
  <link>http://serverhorror.wordpress.com/?p=762</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=762</guid>
  <description/>
  <content:encoded><![CDATA[Continued from the <a href="http://blog.serverhorror.com/2010/05/20/virtualization-with-kvm-part-1/">last time</a>, let's see where we are:

<ul>
	<li><del datetime="2010-05-20T11:11:42+00:00"><a href="http://blog.serverhorror.com/2010/05/20/virtualization-with-kvm-part-1/">Get Started! Do the basic setup, verify we have KVM working</a></del></li>
	<li>Automated Guest Installations from the direct physical host</li>
	<li>Offer IPv4 connectivity over public IPs to  guest machines</li>
	<li>Offer IPv6 and IPv4 connectivity to guest machines</li>
	<li>Offer IPv6 as the only connectivity to guest machines</li>
	<li>Automagically create new guests with a single command</li>
</ul>


<hr />
<ol>
	<li>Use KVM</li>
	<li>Manual Configuration
<ol>
	<li>Configure Network Bridge</li>
	<li>Run Guest without Private IPv4</li>
	<li>Run Guest with Public IPv4</li>
	<li>Setup SIXXS</li>
	<li>Configure IPv6 Bridge/Gateway</li>
	<li>Run Guest with IPv6</li>
	<li>Install different Guest Systems
<ol>
	<li>ArchLinux</li>
	<li>CentOS</li>
	<li>Debian</li>
	<li>Fedora</li>
	<li>Gentoo Linux</li>
	<li>Ubuntu</li>
	<li>OpenSolaris!</li>
</ol>
</li>
</ol>
</li>
	<li>Automated Configuration
<ol>
	<li>Define available machine types
<ol>
	<li>Memory</li>
	<li>Disk Space</li>
	<li>Host Name</li>
	<li>CPU Scheduling?</li>
</ol>
</li>
	<li>Define available config options
<ol>
	<li>KVM Monitor Access</li>
	<li>Available Distros</li>
</ol>
</li>
	<li>Automate IP Distribution/Assignement
<ol>
	<li>IPv4</li>
	<li>IPv6</li>
</ol>
</li>
</ol>
</li>
	<li>a</li>
</ol>
﻿﻿﻿http://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine

﻿<a href="http://mediakey.dk/~cc/generate-random-mac-address-for-e-g-xen-guests/">http://mediakey.dk/~cc/generate-random-mac-address-for-e-g-xen-guests/</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>762</wp:post_id>
  <wp:post_date>2011-02-03 17:57:10</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>pending</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Being Interviewed by Google (Part 1)</title>
  <link>http://serverhorror.wordpress.com/?p=783</link>
  <pubDate>Thu, 03 Jun 2010 18:16:34 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=783</guid>
  <description/>
  <content:encoded><![CDATA[So <a href="http://www.google.com">Google</a> sent me an email wether I'd be interested in a job. For an overview of how tat works just have a look at <a href="http://www.google.co.uk/intl/en/jobs/joininggoogle/">Google's hiring process page</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>783</wp:post_id>
  <wp:post_date>2010-06-03 18:16:34</wp:post_date>
  <wp:post_date_gmt>2010-06-03 18:16:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Infinite Storage needed? - Go Ceph!</title>
  <link>http://serverhorror.wordpress.com/?p=785</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=785</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>785</wp:post_id>
  <wp:post_date>2011-02-03 17:55:11</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Offer IPv4 connectivity over public IPs to  guest machines - (Virtualization with KVM - Part 3)</title>
  <link>http://serverhorror.wordpress.com/?p=787</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=787</guid>
  <description/>
  <content:encoded><![CDATA[<ul>
	<li><del datetime="2010-05-20T11:11:42+00:00"><a href="http://blog.serverhorror.com/2010/05/20/virtualization-with-kvm-part-1/">Get Started! Do the basic setup, verify we have KVM working</a></del></li>
	<li><del datetime="2010-06-06T19:41:49+00:00"><a href="http://blog.serverhorror.com/2010/06/06/fully-automated-installations-with-debian-virtualization-with-kvm-part-2">Automated Guest Installations from the direct physical host</a></del></li>
	<li><strong>Offer IPv4 connectivity over public IPs to  guest machines</strong></li>
	<li>Offer IPv6 and IPv4 connectivity to guest machines</li>
	<li>Offer IPv6 as the only connectivity to guest machines</li>
	<li>Automagically create new guests with a single command</li>
</ul>
Did you follow closely <a href="http://blog.serverhorror.com/2010/05/20/virtualization-with-kvm-part-1/">the last</a> <a href="http://blog.serverhorror.com/2010/06/06/fully-automated-installations-with-debian-virtualization-with-kvm-part-2">two posts</a>?

If you did so, consider yourself lucky. All we need to do is add two files to our setup. OK I'll admit it I'm lying! Still in essence FAI provides us with the possibility of just creating a single template file and a really short script to deploy a shiny new host with a <del datetime="2010-06-15T20:39:21+00:00">public</del> globally routable IPv4 address

So here's the plan:
<ul>
	<li>fine tune the network setup to
<ul>
	<li>provide an internal (private) network interface to PXE boot from</li>
	<li>provide an external (<del datetime="2010-06-15T20:39:21+00:00">public</del> globally routable) network interface to provide a public IP</li>
</ul>
</li>
	<li>create the "template file" in the FAI config space</li>
	<li>redeploy</li>
	<li>enjoy the public IP</li>
</ul>
Let's fine tune!

First a bit of host network setup, add the following stanza to your <tt>/etc/network/interfaces</tt>:
<pre>auto pxebr0
iface pxebr0 inet static
    bridge_maxwait 2
    # up brctl addbr $IFACE
    address 172.16.0.1
    netmask 255.255.0.0</pre>
and modify the <tt>br0</tt> stanza:
<pre>## device: br0
auto br0
iface br0 inet static
    bridge_ports eth0
    bridge_maxwait 2
    address 192.0.2.2
    netmask 255.255.255.0
    gateway   192.0.2.1</pre>
Now for the only file we actually need to update
<strong><tt>/srv/fai/config/file/etc/network/interfaces/demohost</tt></strong>:
<pre># Loopback device:
auto lo
iface lo inet loopback

## device: eth1
auto  eth1
iface eth1 inet static
  address   192.0.2.3
  netmask   255.255.255.0
  gateway   192.0.2.1</pre>
And the script FAI will use during the installation process
<strong><tt>/srv/fai/config/scripts/demohost/30-interfaces</tt></strong>:
<pre>#! /bin/bash

fcopy -i /etc/resolv.conf
fcopy -iM /etc/network/interfaces /etc/networks
fcopy -iM /etc/network/interfaces</pre>
and <tt>sudo ifdown pxebr0; sudo ifdown br0; sudo ifup pxebr0; sudo ifup br0</tt>. Then expand our <tt>kvm</tt>-command to this:
<pre>NAME="demohost.serverhorror.com"
ETH0_MAC="06:00:06:62:d3:2d"
ETH1_MAC="06:00:06:5b:51:c1"
MEMORY="1024"
VDA="${HOME}/test.img"

sudo /usr/bin/kvm -k en-us \
    -name $NAME \
    -boot order=cn \
    -drive file=$VDA,if=virtio,format=raw,media=disk,boot=on \
    -net nic,macaddr=$ETH0_MAC,vlan=0 -net tap,vlan=0,name=eth0,ifname=pxetap0,script=no,downscript=no \
    -net nic,macaddr=$ETH1_MAC,vlan=1 -net tap,vlan=1,name=eth1,ifname=pubtap0,script=no,downscript=no \
    -usbdevice tablet -watchdog i6300esb \
    -m $MEMORY \
    -vnc none \
    -balloon virtio \
    -pidfile /var/run/$NAME.pid \
    -monitor stdio \
    -S</pre>
<strong>Also do not forget to update your host definitions in dhcpd.conf to use the new ethernet address for the fixed-host definition(s)</strong>
So what happens here?
<ul>
	<li>Define 2 Network interfaces
<ul>
	<li>pxetap0 to PXE boot from FAI (eth0 in the guest)</li>
	<li>pubtap0 to provide the <del datetime="2010-06-15T20:43:53+00:00">public</del> globally routable address (eth1 in the guest)</li>
</ul>
</li>
	<li>"boot" the guest in a stopped state (the <tt>-S</tt>) so we have enough time to set some things up before actually booting</li>
	<li>disable vnc by default</li>
</ul>
After you ran the command open up another terminal and bring the interfaces and routes up.
<pre>sudo brctl addif pxebr0 pxetap0
sudo ip link set dev pxetap0 up
sudo ip route add 172.16.0.0/16 dev pxebr0</pre>
<pre>sudo brctl addif br0 pubtap0
sudo ip link set dev pubtap0 up
sudo ip route add 192.0.2.3 dev br0</pre>
Let's set up the options to boot the way we intend to and actually continue the guest process (<strong><tt>c</tt></strong>)
<pre>QEMU 0.12.4 monitor - type 'help' for more information
(qemu) change vnc password
Password: ****
(qemu) change vnc :1
(qemu) boot_set n
boot device list now set to n
(qemu) c</pre>
Now sit back and relax. If you got everything right you should be able to
<ul>
	<li>PXE boot</li>
	<li>enjoy the FAI installation process</li>
	<li>spot the place where the <tt>demohost</tt> class copies the new <tt>/etc/network/interfaces</tt> file</li>
	<li>hit enter</li>
	<li>watch your guest reboot</li>
	<li>enjoy a <del datetime="2010-06-15T21:24:04+00:00">public</del> globally routable IPv4 address</li>
</ul>
So where are we now:
<ul>
	<li><del datetime="2010-05-20T11:11:42+00:00"><a href="http://blog.serverhorror.com/2010/05/20/virtualization-with-kvm-part-1/">Get Started! Do the basic setup, verify we have KVM working</a></del></li>
	<li><del datetime="2010-06-06T19:41:49+00:00"><a href="http://blog.serverhorror.com/2010/06/06/fully-automated-installations-with-debian-virtualization-with-kvm-part-2">Automated Guest Installations from the direct physical host</a></del></li>
	<li><del datetime="2010-06-15T21:27:11+00:00">Offer IPv4 connectivity over public IPs to  guest machines</del></li>
	<li>Offer IPv6 and IPv4 connectivity to guest machines</li>
	<li>Offer IPv6 as the only connectivity to guest machines</li>
	<li>Automagically create new guests with a single command</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>787</wp:post_id>
  <wp:post_date>2011-02-03 17:57:13</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>pending</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Fully Automated Installations with Debian - (Virtualization with KVM - Part 2)</title>
  <link>http://serverhorror.wordpress.com/?p=789</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=789</guid>
  <description/>
  <content:encoded><![CDATA[Continued from the <a href="http://blog.serverhorror.com/2010/05/20/virtualization-with-kvm-part-1/">last time</a>, let's see where we are:
<ul>
	<li><del datetime="2010-05-20T11:11:42+00:00"><a href="http://blog.serverhorror.com/2010/05/20/virtualization-with-kvm-part-1/">Get Started! Do the basic setup, verify we have KVM working</a></del></li>
	<li><strong>Automated Guest Installations from the direct physical host</strong></li>
	<li>Offer IPv4 connectivity over public IPs to  guest machines</li>
	<li>Offer IPv6 and IPv4 connectivity to guest machines</li>
	<li>Offer IPv6 as the only connectivity to guest machines</li>
	<li>Automagically create new guests with a single command</li>
</ul>
<hr />This really is just a quick copy and paste write up how to get a <a href="http://www.informatik.uni-koeln.de/fai/">Fully Automatic Installation (FAI)</a> Server up and running. It does not deal with further customizations.

First things first. In our <a href="http://blog.serverhorror.com/2010/05/20/virtualization-with-kvm-part-1/">last post I showed a very basic setup for a bridge</a> to get started with. Now is the time to use it.

Configure your DHCP Server (ISC DHCP3 in this case)
<pre>ddns-update-style none;
authoritative;
log-facility local7;
subnet 172.16.0.0 netmask 255.255.0.0 {
    range 172.16.1.10 172.16.1.254;
    option routers 172.16.0.1;
    next-server 172.16.0.1;
    option domain-name "serverhorror.com";
    option domain-name-servers 8.8.8.8;
    option broadcast-address 172.16.255.255;
    default-lease-time 60;
    max-lease-time 300;
    ### FAI START ###
    filename "/fai/pxelinux.0"; # needed for FAI to find it"s boot environment

    ### FAI Hosts ###
    host demohost {
      # find that by either tcpdumping, using 'info network' in the qemu monitor
      # or just trust me that it is the default MAC-address kvm uses
      hardware ethernet 52:54:00:12:34:56;
      fixed-address 172.16.2.1
    }

    ### FAI END ###
}</pre>
Enable Network Address Translation (NAT)
<pre>sudo iptables -t nat -A POSTROUTING -o br0 -j MASQUERADE</pre>
<pre>sysctl -w net.ipv4.conf.br0.forwarding=1</pre>
To make that stuff permanent add it as a <tt>pre-up</tt> to your <tt>/etc/network/interfaces</tt> file under the appropriate stanza
Get the Fully Automatic Installer (FAI):
<pre>sudo apt-get install fai-quickstart</pre>
This will install quite some stuff, it's OK. You'll appreciate all of it once you dive into FAI. We need to make sure a few things got set up properly. The defaults are pretty much OK to play around with. Check the following locations:
<ul>
	<li><tt>/etc/fai/fai.conf</tt> -</li>
	<li><tt>/etc/fai/make-fai-nfsroot.conf</tt></li>
</ul>
I usually keep with the defaults until I have the need to do more stuff. According to the FHS the /srv/ location is perfectly suited (As I don't take the notes from a fresh server you might want to note that i had <tt>/srv/tftpd</tt> already populated with some stuff. Still <tt>/srv/tftp/fai</tt> looks good to me as it kind of introduces a new namespace and doesn't clash with anything I had in there before.)
<strong>This will take time</strong>:
<pre>$ sudo fai-setup
Warning: The home dir /var/log/fai you specified already exists.
.
.
.
FAI setup finished.
Log file written to /var/log/fai/fai-setup.log</pre>
It populates <tt>/srv/fai/nfs</tt> and <tt>/srv/fai/config</tt> with some basic stuff which you can use to install clients right away (well nearly, we need to finish some steps to actually be able to install...)
Also check after running <tt>sudo fai-setup</tt> that the following is in your <tt>/etc/exports</tt>:
<pre># the FAI NFS root (Surprise!) used by clients during installation
/srv/fai/nfsroot (async,ro,no_subtree_check,no_root_squash)
# Mounted by clients during install so that they know what to do
/srv/fai/config (async,ro,no_subtree_check,no_root_squash)</pre>
OK - Installation time. Just don't do it now, read the next 3 pieces of code before continueing:
<pre>sudo /usr/bin/kvm -k de \
    -name test \
    -boot order=cn,once=n \
    -drive file=test.img,if=virtio,format=raw,media=disk,boot=on \
    -usbdevice tablet \
    -watchdog i6300esb \
    -m 1024 -vnc :1 -balloon virtio \
    -pidfile /var/run/kvm.test \
    -net nic,vlan=0 -net tap,vlan=0,name=eth0,ifname=tap0,script=no,downscript=no \
    -monitor stdio</pre>
To follow everything that happens immediately stop the machine:
<pre>QEMU 0.12.4 monitor - type 'help' for more information
(qemu) stop
(qemu)</pre>
Fire up your favorite VNC client software and connect to your host on display one (port 5901) - <strong>there's no authentication whatsoever. Everything is plaintext - you've been warned!</strong>
<pre>$ sudo netstat -tulpen|grep kvm
tcp        0      0 0.0.0.0:5901            0.0.0.0:*               LISTEN      0          3560102     28553/kvm</pre>
Should look something like this:
<a href="http://blog.serverhorror.com/wp-content/uploads/2010/06/KVM_FAI_Startup.png"><img class="alignnone size-full wp-image-831" title="KVM FAI Startup" src="http://blog.serverhorror.com/wp-content/uploads/2010/06/KVM_FAI_Startup.png" alt="KVM FAI Startup" width="760" height="462" /></a>

<hr />OK - Installation time. For real this time:
<pre>(qemu) c</pre>
And watch it installing. The installation will prompt you in this default showcase to hit return once it's finished. If you set up kvm properly it should then just reboot into the real operating system.

So where are we now?
<ul>
	<li><del datetime="2010-05-20T11:11:42+00:00"><a href="http://blog.serverhorror.com/2010/05/20/virtualization-with-kvm-part-1/">Get Started! Do the basic setup, verify we have KVM working</a></del></li>
	<li><del datetime="2010-06-06T19:41:49+00:00"><strong>Automated Guest Installations from the direct physical host</strong></del></li>
	<li>Offer IPv4 connectivity over public IPs to  guest machines</li>
	<li>Offer IPv6 and IPv4 connectivity to guest machines</li>
	<li>Offer IPv6 as the only connectivity to guest machines</li>
	<li>Automagically create new guests with a single command</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>789</wp:post_id>
  <wp:post_date>2010-09-22 08:05:29</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>pending</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>GnuTLS vs. OpenSSL</title>
  <link>http://serverhorror.wordpress.com/?p=793</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=793</guid>
  <description/>
  <content:encoded><![CDATA[#!/bin/sh
/usr/bin/openssl pkcs12 -in ./xid-scm01.in.inqnet.at.p12 -cacerts -nodes ## extract Trust Chain
/usr/bin/openssl pkcs12 -in ./xid-scm01.in.inqnet.at.p12 -nodes -nocerts ## extract Private Key
/usr/bin/openssl pkcs12 -in ./xid-scm01.in.inqnet.at.p12 -clcerts -nokeys ## extract Cert
/usr/bin/openssl rsa -in xid-scm01.in.iqnet.at.key ## extract Key usable for Daemon
/usr/bin/openssl x509 -in xid-scm01.in.iqnet.at.pem ## extract Cert usable for Daemon
extract key from pkcs12
exctract ca from pkcs12
configure apache for ssl
configure postgresql for ssl (f'up post)
http://technicalhitch.wordpress.com/2008/01/02/why-a-rsa-private-key-can-be-encrypted-with-a-password/
http://kahdev.wordpress.com/2008/06/21/an-intro-to-openssl/
http://sycure.wordpress.com/2008/03/31/psk-tls-and-tls-comparision-when-to-use-what/
http://sycure.wordpress.com/2008/05/15/tips-using-openssl-to-extract-private-key-pem-file-from-pfx-personal-information-exchange/]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>793</wp:post_id>
  <wp:post_date>2010-09-22 08:07:33</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Offer IPv6 and IPv4 connectivity to guest machines - (Virtualization with KVM Part 4)</title>
  <link>http://serverhorror.wordpress.com/?p=795</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=795</guid>
  <description/>
  <content:encoded><![CDATA[<ul>
	<li><del datetime="2010-05-20T11:11:42+00:00"><a href="http://blog.serverhorror.com/2010/05/20/virtualization-with-kvm-part-1/">Get Started! Do the basic setup, verify we have KVM working</a></del></li>
	<li><del datetime="2010-06-06T19:41:49+00:00"><a href="http://blog.serverhorror.com/2010/06/06/fully-automated-installations-with-debian-virtualization-with-kvm-part-2">Automated Guest Installations from the direct physical host</a></del></li>
	<li><del datetime="2010-06-15T21:27:11+00:00">Offer IPv4 connectivity over public IPs to  guest machines</del></li>
	<li><strong>Offer IPv6 and IPv4 connectivity to guest machines</strong></li>
	<li>Offer IPv6 as the only connectivity to guest machines</li>
	<li>Automagically create new guests with a single command</li>
</ul>
<ul>
	<li><del datetime="2010-05-20T11:11:42+00:00"><a href="http://blog.serverhorror.com/2010/05/20/virtualization-with-kvm-part-1/">Get Started! Do the basic setup, verify we have KVM working</a></del></li>
	<li><del datetime="2010-06-06T19:41:49+00:00"><a href="http://blog.serverhorror.com/2010/06/06/fully-automated-installations-with-debian-virtualization-with-kvm-part-2">Automated Guest Installations from the direct physical host</a></del></li>
	<li><del datetime="2010-06-15T21:27:11+00:00">Offer IPv4 connectivity over public IPs to  guest machines</del></li>
	<li>Offer IPv6 and IPv4 connectivity to guest machines</li>
	<li>Offer IPv6 as the only connectivity to guest machines</li>
	<li>Automagically create new guests with a single command</li>
</ul>
<hr />
<ol>
	<li>Use KVM</li>
	<li>Manual Configuration
<ol>
	<li>Configure Network Bridge</li>
	<li>Run Guest without Private IPv4</li>
	<li>Run Guest with Public IPv4</li>
	<li>Setup SIXXS</li>
	<li>Configure IPv6 Bridge/Gateway</li>
	<li>Run Guest with IPv6</li>
	<li>Install different Guest Systems
<ol>
	<li>ArchLinux</li>
	<li>CentOS</li>
	<li>Debian</li>
	<li>Fedora</li>
	<li>Gentoo Linux</li>
	<li>Ubuntu</li>
	<li>OpenSolaris!</li>
</ol>
</li>
</ol>
</li>
	<li>Automated Configuration
<ol>
	<li>Define available machine types
<ol>
	<li>Memory</li>
	<li>Disk Space</li>
	<li>Host Name</li>
	<li>CPU Scheduling?</li>
</ol>
</li>
	<li>Define available config options
<ol>
	<li>KVM Monitor Access</li>
	<li>Available Distros</li>
</ol>
</li>
	<li>Automate IP Distribution/Assignement
<ol>
	<li>IPv4</li>
	<li>IPv6</li>
</ol>
</li>
</ol>
</li>
	<li>a</li>
</ol>
﻿﻿﻿http://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine

﻿<a href="http://mediakey.dk/~cc/generate-random-mac-address-for-e-g-xen-guests/">http://mediakey.dk/~cc/generate-random-mac-address-for-e-g-xen-guests/</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>795</wp:post_id>
  <wp:post_date>2011-02-03 17:57:40</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>PHP_FAIL</title>
  <link>http://serverhorror.wordpress.com/2010/09/10/yes-its-php/php_fail/</link>
  <pubDate>Wed, 22 Sep 2010 08:13:07 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2010/09/php_fail.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>804</wp:post_id>
  <wp:post_date>2010-09-22 08:13:07</wp:post_date>
  <wp:post_date_gmt>2010-09-22 08:13:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>php_fail</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>803</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2010/09/php_fail.png</wp:attachment_url>
</item>
<item>
  <title>cropped-istock_broken_harddrive_-_000008559660xxlarge.jpg</title>
  <link>http://serverhorror.wordpress.com/?attachment_id=834</link>
  <pubDate>Thu, 23 Sep 2010 18:00:30 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2010/09/cropped-istock_broken_harddrive_-_000008559660xxlarge.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://serverhorror.files.wordpress.com/2010/09/cropped-istock_broken_harddrive_-_000008559660xxlarge.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>834</wp:post_id>
  <wp:post_date>2010-09-23 18:00:30</wp:post_date>
  <wp:post_date_gmt>2010-09-23 18:00:30</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cropped-istock_broken_harddrive_-_000008559660xxlarge-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2010/09/cropped-istock_broken_harddrive_-_000008559660xxlarge.jpg</wp:attachment_url>
</item>
<item>
  <title>2010 in review</title>
  <link>http://serverhorror.wordpress.com/?p=907</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=907</guid>
  <description/>
  <content:encoded><![CDATA[				
						<p>The stats helper monkeys at WordPress.com mulled over how this blog did in 2010, and here's a high level summary of its overall blog health:</p>
		
						<p align="center"><img style="border:1px solid #ddd;background:#f5f5f5;padding:20px;" src="http://s0.wp.com/i/annual-recap/meter-healthy3.gif" width="250" height="183" alt="Healthy blog!"/></p>
				<p align="center">The <em>Blog-Health-o-Meter™</em> reads Fresher than ever.</p>
				
				<h2>Crunchy numbers</h2>
		
		
					
					<div style="width:288px;float:right;border:1px solid #ddd;background:#fff;margin:0 0 1em 1em;padding:6px;">
			
				<img src="http://s0.wp.com/i/annual-recap/abstract-stats-2.png" alt="Featured image" />
				<br /><em>A helper monkey made this abstract painting, inspired by your stats.</em>
				
			</div>
		
		<p>A Boeing 747-400 passenger jet can hold 416 passengers.  This blog was viewed about <strong>3,600</strong> times in 2010.  That's about 9 full 747s.</p>

		<p></p><p>In 2010, there were <strong>19</strong> new posts, growing the total archive of this blog to 80 posts. There were <strong>8</strong> pictures uploaded, taking up a total of 3mb. </p>
				
				<p>The busiest day of the year was October 21st with <strong>132</strong> views. The most popular post that day was <a style="color:#08c;" href="http://blog.serverhorror.com/2010/04/27/child-pornography-is-great/">Child Pornography is great!</a>.</p>
				<br />

				<h2>Where did they come from?</h2>
		
							<p>The top referring sites in 2010 were <strong>initd.org</strong>, <strong>derstandard.at</strong>, <strong>twitter.com</strong>, <strong>jedi.be</strong>, and <strong>serverfault.com</strong>.</p>
								<p>Some visitors came searching, mostly for <strong>eclipse minimal</strong>, <strong>minimal eclipse</strong>, <strong>debian adm group</strong>, <strong>opensolaris create zone</strong>, and <strong>mirror rpool</strong>.</p>
				
<div style="clear:both;"><br /></div>

					
			<h2>Attractions in 2010</h2>
			<p>These are the posts and pages that got the most views in 2010.</p>

			
								<div style="clear:left;float:left;font-size:24pt;line-height:1em;margin:-5px 10px 20px 0;">1</div>
					<a style="margin-right:10px;" href="http://blog.serverhorror.com/2010/04/27/child-pornography-is-great/">Child Pornography is great!</a> <span style="color:#999;font-size:8pt;">April 2010</span>											
			
								<div style="clear:left;float:left;font-size:24pt;line-height:1em;margin:-5px 10px 20px 0;">2</div>
					<a style="margin-right:10px;" href="http://blog.serverhorror.com/2009/11/15/howto-mirror-the-zfs-rpool/">HowTo: Mirror the ZFS rpool</a> <span style="color:#999;font-size:8pt;">November 2009</span>											
			
								<div style="clear:left;float:left;font-size:24pt;line-height:1em;margin:-5px 10px 20px 0;">3</div>
					<a style="margin-right:10px;" href="http://blog.serverhorror.com/2010/04/28/python-psycopg2-postgresql84-and-mac-os-x-snow-leopard/">Python, psycopg2, postgresql84 and Mac OS X Snow Leopard</a> <span style="color:#999;font-size:8pt;">April 2010</span>											
			
								<div style="clear:left;float:left;font-size:24pt;line-height:1em;margin:-5px 10px 20px 0;">4</div>
					<a style="margin-right:10px;" href="http://blog.serverhorror.com/2009/11/24/howto-create-an-opensolaris-zone/">HowTo: Create an OpenSolaris Zone</a> <span style="color:#999;font-size:8pt;">November 2009</span>											
			
								<div style="clear:left;float:left;font-size:24pt;line-height:1em;margin:-5px 10px 20px 0;">5</div>
					<a style="margin-right:10px;" href="http://blog.serverhorror.com/2008/12/24/how-to-install-a-minimal-eclipse/">How to install a minimal eclipse</a> <span style="color:#999;font-size:8pt;">December 2008</span>											
			
			
		
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>907</wp:post_id>
  <wp:post_date>2011-01-02 11:13:28</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>wpcom_recap</wp:meta_key>
    <wp:meta_value><![CDATA[2010]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>AdobeReaderPrefs</title>
  <link>http://serverhorror.wordpress.com/2011/01/14/open-pdf-files-in-safari-with-preview-instead-of-adobe-reader/adobereaderprefs/</link>
  <pubDate>Fri, 14 Jan 2011 18:51:27 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2011/01/adobereaderprefs.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>910</wp:post_id>
  <wp:post_date>2011-01-14 18:51:27</wp:post_date>
  <wp:post_date_gmt>2011-01-14 18:51:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adobereaderprefs</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>909</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2011/01/adobereaderprefs.png</wp:attachment_url>
</item>
<item>
  <title>Wireless Installation Cable</title>
  <link>http://serverhorror.wordpress.com/2011/01/15/dear-lexmark-youre-doing-it-wrong/wireless-installation-cable/</link>
  <pubDate>Sat, 15 Jan 2011 20:15:17 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2011/01/wireless-installation-cable.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>916</wp:post_id>
  <wp:post_date>2011-01-15 20:15:17</wp:post_date>
  <wp:post_date_gmt>2011-01-15 20:15:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wireless-installation-cable</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>915</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2011/01/wireless-installation-cable.jpg</wp:attachment_url>
</item>
<item>
  <title>Blogging with OpenOffice!</title>
  <link>http://serverhorror.wordpress.com/?p=1002</link>
  <pubDate>Fri, 21 Jan 2011 16:36:25 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=1002</guid>
  <description/>
  <content:encoded><![CDATA[<div>
<p style="margin-top:.42cm;page-break-after:avoid;text-align:center;"><span style="font-family:Arial, sans-serif;"> </span><span style="font-size:large;"><strong>Blogging with OpenOffice!</strong></span></p>
<p style="margin-bottom:0;">&nbsp;</p>
<p style="margin-top:.42cm;page-break-after:avoid;"><span style="font-family:Arial, sans-serif;"> </span><span style="font-size:medium;">Just some test header!</span></p>
<p style="margin-bottom:0;">&nbsp;</p>
<p style="margin-bottom:0;">This is a test blog post from OpenOffice...</p>
&nbsp;

</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1002</wp:post_id>
  <wp:post_date>2011-01-21 16:36:25</wp:post_date>
  <wp:post_date_gmt>2011-01-21 16:36:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Contact Me</title>
  <link>http://serverhorror.wordpress.com/contact-me/</link>
  <pubDate>Sun, 20 Feb 2011 10:56:09 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?page_id=1149</guid>
  <description/>
  <content:encoded><![CDATA[[contact-form] 
[contact-field label="Email" type="email" required="true" /]
 [contact-field label="Name" type="name" /]
 [contact-field label="Subject" type="text" /]
 [contact-field label="Comment" type="textarea" required="true" /]
 [contact-field label="Website" type="url" /]
 [/contact-form] ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1149</wp:post_id>
  <wp:post_date>2011-02-20 10:56:09</wp:post_date>
  <wp:post_date_gmt>2011-02-20 10:56:09</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>contact-me</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>python - SQLAlchemy: How to group by two fields and filter by date - Stack Overflow</title>
  <link>http://serverhorror.wordpress.com/?p=1201</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1201</guid>
  <description/>
  <content:encoded><![CDATA[SQLAlchemy: How to group by two fields and filter by date

via <a href="http://stackoverflow.com/questions/3044455/sqlalchemy-how-to-group-by-two-fields-and-filter-by-date/3049352#3049352">python - SQLAlchemy: How to group by two fields and filter by date - Stack Overflow</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1201</wp:post_id>
  <wp:post_date>2011-12-31 01:37:53</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>“prettyPrint” for JavaScript – James Padolsey</title>
  <link>http://serverhorror.wordpress.com/?p=1203</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1203</guid>
  <description/>
  <content:encoded><![CDATA[“prettyPrint” for JavaScript

via <a href="http://james.padolsey.com/javascript/prettyprint-for-javascript/">“prettyPrint” for JavaScript – James Padolsey</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1203</wp:post_id>
  <wp:post_date>2011-12-31 01:37:51</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Re: [sqlalchemy] How to filter by date with SA 0.6?</title>
  <link>http://serverhorror.wordpress.com/?p=1205</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1205</guid>
  <description/>
  <content:encoded><![CDATA[<p>try this:</p>
<p>from sqlalchemy import func</p>
<p>session.query(MyObj).fitler(func.strftime('%Y',MyObj.date_field)=='2004').all()</p>
<p>On 08/16/2010 01:03 PM, Italo Maia wrote:</p>
<p>By the way, sqlite here!</p>
<p>2010/8/16 Italo Maia &lt;italo.m...@gmail.com &gt;</p>
<p>    How's the best way to filter a date field by year?</p>
<p>via <a href='http://www.mail-archive.com/sqlalchemy@googlegroups.com/msg20736.html'>Re: [sqlalchemy] How to filter by date with SA 0.6?</a>.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1205</wp:post_id>
  <wp:post_date>2011-12-31 01:37:49</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Until 2010-11</title>
  <link>http://serverhorror.wordpress.com/about/until-2010-11/</link>
  <pubDate>Sat, 21 May 2011 10:04:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?page_id=1248</guid>
  <description/>
  <content:encoded><![CDATA[There's not much to say about this blog or me. I'm a <a title="System Administrator [wikipedia.org]" href="http://en.wikipedia.org/wiki/System_Administrator">System Administrator </a>at a <a href="http://www.inqnet.at/">local company in Vienna</a>. I maintain some  <a href="http://en.wikipedia.org/wiki/List_of_operating_systems#Free.2FOpen_source_Unix-like">of this stuff</a> and <a href="http://www.microsoft.com/windows/">this</a> the latter of which isn't exactly my favourite. Most of the work is done on <a href="http://www.debian.org">Debian</a> Servers.

At the time of this writing I'm the head of 5 people - including myself and we maintain about a hundred hardware boxes and about 300 virtual servers. Most of which are<a href="http://en.wikipedia.org/wiki/OpenVZ">OpenVZ</a> instances with a small number of <a href="http://en.wikipedia.org/wiki/VMware_ESX">VMware ESX</a> Servers (2 physical, about 10 Virtual).

We stumble over a <a href="http://en.wikipedia.org/wiki/System_administration#Duties_of_a_system_administrator">couple of problems or requirements each day</a> that need to be dealt with. A lot of them are trivial to fix but there are also quite a few which require deeper inspection.

All of us are looking forward to the <a href="http://en.wikipedia.org/wiki/System_Administrator_Appreciation_Day">System Administrator Appreciation Day</a> - unfortunately nobody else seems to care about that day :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1248</wp:post_id>
  <wp:post_date>2011-05-21 10:04:00</wp:post_date>
  <wp:post_date_gmt>2011-05-21 10:04:00</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>until-2010-11</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>100</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>As of 2010-12</title>
  <link>http://serverhorror.wordpress.com/about/as-of-2010-12/</link>
  <pubDate>Sat, 21 May 2011 10:20:39 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?page_id=1253</guid>
  <description/>
  <content:encoded><![CDATA[Haha! Freedom!

As of December I'm no longer employed at <a href="http://wwww.inqnet.at">INQNET GmbH</a>. It was a great time there but it was time for me to leave. I had an itch to scratch and wanted to see larger environments. It's a great place to work, friendly  co-workers (hey, even friendly bosses)! They do a lot of bleeding edge tech-stuff for the web, so if you're at least awesome you may want to drop them a note and look for jobs there :)

For me I'll be spending some time with my son and then look for something new. Hopefully it won't take too long since I don't want to run out of money before I run out of life...]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1253</wp:post_id>
  <wp:post_date>2011-05-21 10:20:39</wp:post_date>
  <wp:post_date_gmt>2011-05-21 10:20:39</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>as-of-2010-12</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>99</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Keyboard Cruft ((tag: cruft, fail, apple)</title>
  <link>http://serverhorror.wordpress.com/?p=1286</link>
  <pubDate>Sat, 04 Jun 2011 15:25:05 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2011/06/04/keyboard-cruft-tag-cruft-fail-apple/</guid>
  <description/>
  <content:encoded><![CDATA[<div class="posterous_autopost">

It’s time to buy a new notebook when…

(yes these days you buy a new notebook whenever you need a new keyboard)

Original Post: http://serverhorror.eu/keyboard-cruft-tag-cruft-fail-apple New Blog Location: http://serverhorror.eu

</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1286</wp:post_id>
  <wp:post_date>2011-06-04 15:25:05</wp:post_date>
  <wp:post_date_gmt>2011-06-04 15:25:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>keyboard-cruft-tag-cruft-fail-apple</wp:post_name>
  <wp:status>pending</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="cruft"><![CDATA[Cruft]]></category>
  <category domain="post_tag" nicename="hardware"><![CDATA[Hardware]]></category>
  <category domain="post_tag" nicename="keyboards"><![CDATA[Keyboards]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1322875045";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Keyboard Cruft ((tag: cruft, fail, apple) http://wp.me/pxxjT-kK]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Abandoned!</title>
  <link>http://serverhorror.wordpress.com/?page_id=1288</link>
  <pubDate>Sat, 04 Jun 2011 22:14:59 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?page_id=1288</guid>
  <description/>
  <content:encoded><![CDATA[I will probably let this thing here die. I'll relocate the the blog address to my new provider as soon as I finished scanning thru the old imported posts.

During this phase I'll let the new blog hoster automagically forward posts here too.

<strong>Please refer to the intermediate site during this transition:</strong>
<blockquote><strong><a href="http://serverhorror.eu">http://serverhorror.eu</a></strong></blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1288</wp:post_id>
  <wp:post_date>2011-06-04 22:14:59</wp:post_date>
  <wp:post_date_gmt>2011-06-04 22:14:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>abandoned</wp:post_name>
  <wp:status>pending</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Dear Lazyweb: A Jenkins Plugin for lintian?</title>
  <link>http://serverhorror.wordpress.com/?p=1333</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1333</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1333</wp:post_id>
  <wp:post_date>2011-12-31 01:36:59</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>What are small files?</title>
  <link>http://serverhorror.wordpress.com/?p=1495</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=1495</guid>
  <description/>
  <content:encoded><![CDATA[<blockquote>Another simple statement!</blockquote>
You are dealing with small files if the majority of files are smaller than the block size of your file system.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1495</wp:post_id>
  <wp:post_date>2012-01-02 14:40:41</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>VIM-SEGV</title>
  <link>http://serverhorror.wordpress.com/2012/01/11/vim-segfaulting-i-dont-see-that-not-everyday/vim-segv/</link>
  <pubDate>Wed, 11 Jan 2012 20:14:51 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.files.wordpress.com/2012/01/vim-segv.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1517</wp:post_id>
  <wp:post_date>2012-01-11 20:14:51</wp:post_date>
  <wp:post_date_gmt>2012-01-11 20:14:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vim-segv</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1515</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://serverhorror.files.wordpress.com/2012/01/vim-segv.png</wp:attachment_url>
</item>
<item>
  <title>A Basic EC2 Image for Debian/Squeeze</title>
  <link>http://serverhorror.wordpress.com/?p=1527</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1527</guid>
  <description/>
  <content:encoded><![CDATA[[sourcecode]
dd if=/dev/zero of=ec2-debian-squeeze-x64.img bs=1 count=0 seek=10G
sudo mkfs.ext3 -F -Odir_index ec2-debian-squeeze-x64.img
mkdir ec2
sudo mount -oloop ec2-debian-squeeze-x64.img ec2
sudo debootstrap --include=sudo,vim,bzip2,rsync,mtr-tiny,openssh-server,git-core,bash-completion,curl,dnsutils,git,xz-utils,xz-lzma,curl,makedev,locales --exclude=nano --arch amd64 squeeze ec2/ http://ftp.de.debian.org/debian
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1527</wp:post_id>
  <wp:post_date>2012-02-06 12:34:59</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>https://plus.google.com/116219113821085292962/posts/VFeG5mhwBoN</title>
  <link>http://serverhorror.wordpress.com/?p=1544</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=1544</guid>
  <description/>
  <content:encoded><![CDATA[<p><a href="https://plus.google.com/116219113821085292962/posts/VFeG5mhwBoN" title="https://plus.google.com/116219113821085292962/posts/VFeG5mhwBoN">https://plus.google.com/116219113821085292962/posts/VFeG5mhwBoN</a></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1544</wp:post_id>
  <wp:post_date>2013-03-04 21:22:38</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>A useful Ticket System</title>
  <link>http://serverhorror.wordpress.com/2010/02/22/a-useful-ticket-system/</link>
  <pubDate>Mon, 22 Feb 2010 10:00:50 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=7</guid>
  <description/>
  <content:encoded><![CDATA[<div>

[digg=http://digg.com/programming/A_useful_Ticket_System_Server_Horror]

</div>
<div>This post has been in my queue since 2009-06-01 (¡wow - quite some time¡), now I finally found some time to further refine the draft - which actually consisted of only 2 items in a bulleted list, not that much.</div>
So here it goes I'm missing these things in a bugtracker…

<strong>Very very good documentation</strong> - without it everything else is lost. Of course the documentation should be excellent for all the points made below as well.

<strong>Lightweight</strong> - yes I know a lot of people don't consider a website served with Perl (<a href="http://bestpractical.com/rt/">Request Tracker</a>) or Python (<a href="http://roundup.sourceforge.net/">roundup</a>) lightweight. Well I don't! For me lightweight isn't about memory usage or the number of components a piece of software depends on. Lightweight is about how easy it is to manage the thing. This includes all aspects: <em>usage, updates, data manipulation, and everything I don't know about yet because I haven't run into it</em>.

<strong>Ticket tracker in the first place</strong> - Somehow my impression is that there are just a lot of web interfaces or mail interfaces that process a form (or somewhat customizable form) and place it in a database. I would like to see a description framework where I define what a ticket is. Define the grants and denials on tickets, or any other kind of information I'd like to track. That also include state transitions, actions that should be done and whatnot -- yes I can see how quite a bunch of people will now say "Easy, just use some RDBMS". That is however not what this paragraph means to me.

<strong>Well defined API</strong> - this is what makes it really useable. I need to interface with a ticket system every single day of work. I'd even say it is the most vital part of my work. This is the one single point where the information concentrates. It lists things my users find annoying, thiings my servers find annoying (if they can report it), things my monitoring system finds annoying. Just about everything I need (or better want) to know about is collected in the ticket system. That is why I prefer to have an easy to use API available, very easy for me would be something that I can script by using curl, I'd grab some CSV data and create some sheets I can print out and put on my desk (yes <strong>I like to use pen&amp;paper</strong> - just not when someone else has already written everything down), or carry with me when I need more information about a special case ticket.

<strong>Extensible API</strong> - This is not quite the same as the point above. By extensible I mean something like a namespace I can create to place my extensions. In a perfect world I wouldn't need to write extensions. I'd simply interface with the API and combine lower level functions to something I find more useful - but even in that case I'd like namespaces.

There are also some things I don't consider to be part of a ticketing system - at least not in the first place. There are mail gateways that try to provide the tickets in near real time to the ticketing system. Personally I don't care about that. I'd rather like to be able to feed tickets from any source in an easy way. Also a web interface isn't really part of issue tracking. That one may need some explanation, after all most customers consider a webpage the access point to something.

Why I don't consider a web interface part of a ticket system in the first place is because there shouldn't be only one web interface there should be several.
<ul>
	<li>An interface to submit tickets</li>
	<li>An interface to work on (single) tickets
<ul>
	<li>Bulk management of tickets</li>
</ul>
</li>
	<li>An interface to get reports out of the system (this one may actually be quite hard, different people want different reports)</li>
	<li>An interface to reuse solved tickets - where else could you get some F.A.Q in an easier way?</li>
</ul>
I'd really rather see some <em>really really simple</em> web interface. Mantis and roundup have the right direction. Still I'm quite confined in the system (Mantis with PHP, roundup with TAL/METAL). I don't know specifics about JIRA but I'd guess I need a J2EE developer to really customize stuff in it

<strong>Conclusion?</strong> Well I don't know which of the ticket systems to use in my eyes they all suck in one point or another. Also don't get me wrong I'm grateful for the systems that are available (Bugzilla, Trac, Redmine, JIRA…to name a few) but in some way or another they just suck…]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>7</wp:post_id>
  <wp:post_date>2010-02-22 10:00:50</wp:post_date>
  <wp:post_date_gmt>2010-02-22 10:00:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-useful-ticket-system</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1275723778";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1295290317";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>33</wp:comment_id>
    <wp:comment_author><![CDATA[Desk Pad Calendar]]></wp:comment_author>
    <wp:comment_author_email>Heinze@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>123.215.198.135</wp:comment_author_IP>
    <wp:comment_date>2010-02-22 17:59:51</wp:comment_date>
    <wp:comment_date_gmt>2010-02-22 17:59:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You have some really good posts on here, however it took me a while to find this blog, why dont you promote this blog more often?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>41</wp:comment_id>
    <wp:comment_author><![CDATA[Olivier]]></wp:comment_author>
    <wp:comment_author_email>autremonde75@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.lautre-monde.fr</wp:comment_author_url>
    <wp:comment_author_IP>212.198.133.183</wp:comment_author_IP>
    <wp:comment_date>2010-03-17 21:06:12</wp:comment_date>
    <wp:comment_date_gmt>2010-03-17 21:06:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[May I please suggest you to take a look at wordpress advanced ticket system? This one has been designed to take advantage of Wordpress API. Hope you'll like it ;)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>42</wp:comment_id>
    <wp:comment_author><![CDATA[serverhorror]]></wp:comment_author>
    <wp:comment_author_email>martin@marcher.name</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>78.142.172.145</wp:comment_author_IP>
    <wp:comment_date>2010-03-18 09:55:06</wp:comment_date>
    <wp:comment_date_gmt>2010-03-18 09:55:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[If you are talking about this: http://wordpress.org/extend/plugins/wats/ (http://www.lautre-monde.fr/wats-going-on/) - I miss the following:

(1) Documentation
(2) Ticket Tracker in the first place (WP is a blog after all)
(3) API?

At least I couldn't easily find anything that points me to readable documentation which leads to none of my points being fullfilled...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>41</wp:comment_parent>
    <wp:comment_user_id>5284979</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>38</wp:comment_id>
    <wp:comment_author><![CDATA[Erwin Okoronkwo]]></wp:comment_author>
    <wp:comment_author_email>Mcelhone110@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>173.234.28.152</wp:comment_author_IP>
    <wp:comment_date>2010-03-10 00:11:34</wp:comment_date>
    <wp:comment_date_gmt>2010-03-10 00:11:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You made numerous nice ideas there. I done a search on the issue and learnt nearly all peoples will agree with your blog.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>39</wp:comment_id>
    <wp:comment_author><![CDATA[Andreas Schamanek]]></wp:comment_author>
    <wp:comment_author_email>schamane@fam.tuwien.ac.at</wp:comment_author_email>
    <wp:comment_author_url>http://wox.at/as</wp:comment_author_url>
    <wp:comment_author_IP>128.130.51.101</wp:comment_author_IP>
    <wp:comment_date>2010-03-10 16:10:31</wp:comment_date>
    <wp:comment_date_gmt>2010-03-10 16:10:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[We were using Request Tracker for more than 10 years but each customization and every upgrade was a major pain i.t.a.. Looking for alternatives, I quickly gave up on OTRS2. Then I decided to try Roundup but when I actually wanted to switch I hesitated ... one moment too long, and after another intensive search I mostly gave up.
Many ticket systems are missing critical features (like e-mail interfaces). These are at least easier to spot. But even the major players -- as you say -- "suck in one point or another". I couldn't but agree more.
One critical comment though: I think most of what you ask for is not specific to ticket systems. It's features every (larger) software package should offer, isn't it?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>40</wp:comment_id>
    <wp:comment_author><![CDATA[serverhorror]]></wp:comment_author>
    <wp:comment_author_email>martin@marcher.name</wp:comment_author_email>
    <wp:comment_author_url>http://serverhorror.wordpress.com/2010/02/22/a-useful-ticket-system/</wp:comment_author_url>
    <wp:comment_author_IP>78.142.172.145</wp:comment_author_IP>
    <wp:comment_date>2010-03-11 09:06:05</wp:comment_date>
    <wp:comment_date_gmt>2010-03-11 09:06:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[About the last point: You are absolutely right that these points apply to most if not all software packages. *But* I haven't found *any of these requirements* in a bug racker/issue tracker. So (to me) having a system that fulfills the above requirements would be a first step.

Building a somewhat usable web interface around this shouldn't be too hard...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>39</wp:comment_parent>
    <wp:comment_user_id>5284979</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Happy SysAdmin Day!</title>
  <link>http://serverhorror.wordpress.com/2009/07/31/happy-sysadmin-day/</link>
  <pubDate>Fri, 31 Jul 2009 00:01:13 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=184</guid>
  <description/>
  <content:encoded><![CDATA[Today is <a href="http://www.sysadminday.com/"><span style="font-family:Verdana,Arial,Helvetica,sans-serif;"><span><strong>System Administrator Appreciation Day</strong></span></span></a>.

Be nice to your friendly SysAdmin neighborhood, we work all year hard to give you good service and help you solve problems. We might seem grumpy at times but take that with a sense of humor, after all we are the ones who have to get up at 0300h AM to fix the servers.

BTW: <strong>System Administrators aren't mainly there to fix things, we are here to make sure things don't break</strong>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>184</wp:post_id>
  <wp:post_date>2009-07-31 00:01:13</wp:post_date>
  <wp:post_date_gmt>2009-07-31 00:01:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>happy-sysadmin-day</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1264008272";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1264008272";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Python Class Methods</title>
  <link>http://serverhorror.wordpress.com/2010/03/22/python-class-methods/</link>
  <pubDate>Mon, 22 Mar 2010 12:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2008/11/28/python-class-methods/</guid>
  <description/>
  <content:encoded><![CDATA[<!-- YZVNG8ZM3F8R  -->
Just a short reminder how to easily create class methods in python. Useful for creating factory methods that return the instance of a certain class.

[sourcecode language="python"]user@localhost:~$ python
Python 2.4.4 (#2, Apr 15 2008, 23:43:20)
[GCC 4.1.2 20061115 (prerelease) (Debian 4.1.1-21)] on linux2
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.

&gt;&gt;&gt; class foo(object):
...     def __init__(self, s):
...             self.s = s
...     @classmethod
...     def from_string(cls, in_):
...             return cls(in_)
...     @classmethod
...     def from_int(cls, in_):
...             return cls(int(in_))
...
&gt;&gt;&gt; s = foo.from_string(&quot;foo&quot;)
&gt;&gt;&gt; s = foo.from_int(&quot;foo&quot;)
Traceback (most recent call last):
File &quot;&quot;, line 1, in ?
File &quot;&quot;, line 9, in from_int
ValueError: invalid literal for int(): foo
&gt;&gt;&gt; s = foo.from_int(&quot;2&quot;)
&gt;&gt;&gt; s = foo.from_int(&quot;0x2&quot;)
Traceback (most recent call last):
File &quot;&quot;, line 1, in ?
File &quot;&quot;, line 9, in from_int
ValueError: invalid literal for int(): 0x2
&gt;&gt;&gt; s = foo.from_int(0xe)
&gt;&gt;&gt; s.s
14
[/sourcecode]


This in fact works quite fine except for one thing:

Python method are first class objects, if you have die above in a module named foo.py you will need the following code:

[sourcecode langauage="python"]
Python 2.6.4 (r264:77598, Jan 18 2010, 11:44:15)
[GCC 4.3.4] on linux2
&gt;&gt;&gt; import foo
&gt;&gt;&gt; o = foo.foo.from_string(&quot;1&quot;)
&gt;&gt;&gt; o.s
'1'
[/sourcecode]


Quite a lot of typing, you may want to consider the following:

[sourcecode langauage="python"]
Python 2.6.4 (r264:77598, Jan 18 2010, 11:44:15)
[GCC 4.3.4] on linux2
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&gt;&gt;&gt; import foo
&gt;&gt;&gt; foo.from_string(&quot;a&quot;)
&lt;foo.foo object at 0x7f0c78d94350&gt;
&gt;&gt;&gt; o = foo.from_string(&quot;a&quot;)
&gt;&gt;&gt; o.s
'a'
[/sourcecode]


A lot less to type isn't it?

To get that working just create a module that looks like this:

[sourcecode langauage="python"]
def from_string(value):
    return foo(value)

def from_int(value):
    return foo(int(value))

class foo(object):
    def __init__(self, s):
            self.s = s
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>235</wp:post_id>
  <wp:post_date>2010-03-22 12:00:00</wp:post_date>
  <wp:post_date_gmt>2010-03-22 12:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-class-methods</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2008/11/python-class-methods.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1275723777";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1275723777";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>µ-awk</title>
  <link>http://serverhorror.wordpress.com/2009/10/05/%c2%b5-awk/</link>
  <pubDate>Mon, 05 Oct 2009 15:00:00 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2009/01/18/%c2%b5-awk/</guid>
  <description/>
  <content:encoded><![CDATA[My personal µ-awk tutorial, just some notes I like <strong>not to forget</strong>...

Print the average of a column:
[sourcecode langauage="text"]
# grep daemon_with_interesting_column_eight daemon.log | awk '{sum+=$8} END { print &quot;Average = &quot;,sum/NR}'
[/sourcecode]
Print the average of a column fullfilling a constraint:
[sourcecode langauage="text"]
# awk '/$8&gt;=0.02/  {sum+=$8} END { print &quot;Average = &quot;,sum/NR}'
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>248</wp:post_id>
  <wp:post_date>2009-10-05 15:00:00</wp:post_date>
  <wp:post_date_gmt>2009-10-05 15:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>%c2%b5-awk</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[ctrl.alt.delete.co.at]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[MartinMarchernoreply@blogger.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[/2009/01/awk.html]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1270743950";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1270743940";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>26</wp:comment_id>
    <wp:comment_author><![CDATA[Andreas Schamanek]]></wp:comment_author>
    <wp:comment_author_email>schamane@fam.tuwien.ac.at</wp:comment_author_email>
    <wp:comment_author_url>http://wox.at/as/_/</wp:comment_author_url>
    <wp:comment_author_IP>62.178.30.209</wp:comment_author_IP>
    <wp:comment_date>2009-10-17 18:27:48</wp:comment_date>
    <wp:comment_date_gmt>2009-10-17 18:27:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I know it's just sample code and grep does come in handy quite often, nevertheless, more often I see code which uses grep + awk where it is not needed because awk has grep built-in, of course. The following does the 1st example in 1 go:

awk '/daemon_with.../ {sum+=$8} END { print "Average = ",sum/NR}' daemon.log

Your 2nd example, I think, is faulty. Together with the grep included it correctly should be

awk '/daemon_with.../ &amp;&amp; ($8&gt;=0.02)  {sum+=$8} END { print "Average = ",sum/NR}' daemon.log]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Adventures in CentOS-Land (Part 3)</title>
  <link>http://serverhorror.wordpress.com/2009/07/21/adventures-in-centos-land-part-3/</link>
  <pubDate>Tue, 21 Jul 2009 12:00:56 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=392</guid>
  <description/>
  <content:encoded><![CDATA[Let's get to work with CentOS5 now that we have set up the yum repositories and are able to install all the software we need. As a short reminder our requirements listing again. So let's <a href="http://serverhorror.wordpress.com/2009/07/20/adventures-in-centos-land-part-2/">continue from last time...</a>

Our requirements are the following:
<ul>
	<li>nagios for monitoring of
<ul>
	<li>disk space</li>
	<li>system load</li>
	<li>service availability</li>
	<li>...</li>
</ul>
</li>
	<li>openLDAP (v3 only and TLS only)</li>
	<li>SMTP with Sender Authentication over TLS only</li>
	<li>IMAPs (only, and only over TLS)</li>
	<li>a webmail interface for easy access from anywhere - also TLS only</li>
</ul>
Since I know <a href="http://www.postfix.org/">Postfix</a> best I decided to go with it, also <a href="http://www.dovecot.org/">Dovecot</a> is a nice (and fast) IMAP server (as I learned on the way). User Information for the mail users should come from <a href="http://www.openldap.org">LDAP</a> - that also makes it easy to set up some password changing webform (did I mention: TLS only).

But first the basic setup. This is where the problems started:
<ul>
	<li>no nagios in the official repositories - rpmforge has them
<ul>
	<li>it seems Dag Wieers is an official package maintainer taking part in this repo so it seems trustworthy according to some Google research</li>
</ul>
</li>
	<li>postfix seems to be in the CentOsPlus repository</li>
</ul>
Let's see, yum is the package manager and seems to work quite well, no sign of RPM-dependency hell any more.

O.K. - so much for a basic running service. Of course that doesn't do that much that is useful for us. Let's first configure slapd and a basic LDAP tree. The config of slapd is rather simple, we don't really have any users except one so we don't exactly need any groups. Why bother with LDAP then? Well, once you get used to having LDAP and a nice GUI tool is actually a lot <del>easier</del> more convenient to deal with than with the good unix passwords. <strong>Note: I recommend to NEVER EVER put system users required to start daemons/applications in LDAP, don't even think about it!</strong>

Now here comes the slapd.conf:
[sourcecode language="text"]
# egrep -v '^ *#|^$' /etc/openldap/slapd.conf
include        /etc/openldap/schema/core.schema
include        /etc/openldap/schema/cosine.schema
include        /etc/openldap/schema/inetorgperson.schema
include        /etc/openldap/schema/nis.schema
include        /etc/openldap/schema/misc.schema
pidfile        /var/run/openldap/slapd.pid
argsfile    /var/run/openldap/slapd.args
TLSCACertificateFile /etc/pki/tls/certs/ca-bundle.crt
TLSCertificateFile /etc/pki/tls/certs/slapd.pem
TLSCertificateKeyFile /etc/pki/tls/certs/slapd.pem
access to dn.base=&quot;&quot; by * read
access to dn.base=&quot;cn=Subschema&quot; by * read
access to *
 by self write
 by users read
 by anonymous auth
database    bdb
suffix &quot;dc=example,dc=org&quot;
rootdn &quot;cn=System Maintenance Account,ou=System,dc=example,dc=org&quot;
rootpw changeme
directory    /var/lib/ldap
index objectClass                       eq,pres
index ou,cn,mail,surname,givenname      eq,pres,sub
index uidNumber,gidNumber,loginShell    eq,pres
index uid,memberUid                     eq,pres,sub
index nisMapName,nisMapEntry            eq,pres,sub
[/sourcecode]
And this is our LDIF (already with the user we want to use for mailing):
[sourcecode language="text"]
dn: dc=example,dc=org
objectClass: dcObject
objectClass: top
objectClass: organization
dc: dc=example,dc=org
o: Example Corp.

dn: ou=People,dc=example,dc=org
objectClass: organizationalUnit
objectClass: top
ou: People

dn: cn=Alice  Squarepants,ou=People,dc=example,dc=org
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: person
objectClass: top
objectClass: inetLocalMailRecipient
cn: Alice  Squarepants
mail: asquarepants@example.org
mailLocalAddress: alice@example.org
sn: Doe
userPassword: changeme

dn: ou=System,dc=example,dc=org
objectClass: organizationalUnit
objectClass: top
ou: System

dn: cn=System Maintenance Account,ou=System,dc=example,dc=org
objectClass: organizationalRole
objectClass: top
objectClass: simpleSecurityObject
cn: System Maintenance Account
userPassword: changeme

dn: cn=postfix,ou=System,dc=example,dc=org
objectClass: organizationalRole
objectClass: top
objectClass: simpleSecurityObject
cn: postfix
userPassword: changeme

dn: cn=dovecot,ou=System,dc=example,dc=org
objectClass: organizationalRole
objectClass: top
objectClass: simpleSecurityObject
cn: dovecot
userPassword: changeme

dn: cn=Bob,ou=People,dc=example,dc=org
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: person
objectClass: top
objectClass: inetLocalMailRecipient
cn: Bob  Squarepants
mail: bob@example.org
sn: Bob Squarepants
userPassword: changeme

dn: cn=Postmaster,ou=People,dc=example,dc=org
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: person
objectClass: top
objectClass: inetLocalMailRecipient
cn: Postmaster
mail: postmaster@example.org
mailLocalAddress: hostmaster@example.org
mailLocalAddress: abuse@example.org
sn: Postmaster
userPassword: changeme
[/sourcecode]
Let's see now what we have.
<ul>
	<li>Non-System users ready to use in LDAP - <span style="color:#ff0000;">check</span></li>
	<li>Aliases that can be used easily - <span style="color:#ff0000;">check</span></li>
	<li>a container for "real people" vs. a container for "role objects" - <span style="color:#ff0000;">check</span></li>
	<li><span style="color:#ff0000;"><span style="color:#000000;">Hopefully no typos since I made some modifications like changing the passwors (of course) the Root DSE and some DNs</span></span></li>
</ul>
Next time we'll see how to configure Dovecot to use this information and automagically create the correct mailbox with the information provided from our LDAP tree.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>392</wp:post_id>
  <wp:post_date>2009-07-21 12:00:56</wp:post_date>
  <wp:post_date_gmt>2009-07-21 12:00:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adventures-in-centos-land-part-3</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1259053358";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1259053358";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Adventures in CentOS-Land (Part 1)</title>
  <link>http://serverhorror.wordpress.com/2009/07/19/adventures-in-centos-land-part-1/</link>
  <pubDate>Sun, 19 Jul 2009 18:00:26 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=410</guid>
  <description/>
  <content:encoded><![CDATA[So I have to set up a dedicated mail server for my boss' private use. Since we wanted to completely seperate this private use server from our infrastructure "we" (actually our billing department) decided to get a GoDaddy server (a dedicated one). The account was set up and the details were forwarded to us - as happy admins of mostly debian we don't have to deal with non-debian system too often so we were not exactly happy to find only <a href="http://www.fedoraproject.org/">Fedora</a>, <a href="http://www.redhat.com/rhel/">RHEL</a> or <a href="http://www.centos.org/">CentOS</a> as available <a href="http://www.kernel.org/">Linux</a> options. Anyway the account had already been paid for so we went to set it up.

Here are the requirements:
<ul>
	<li>nagios for monitoring of
<ul>
	<li>disk space</li>
	<li>system load</li>
	<li>service availability</li>
	<li>...</li>
</ul>
</li>
	<li>openLDAP (v3 only and TLS only)</li>
	<li>SMTP with Sender Authentication over TLS only</li>
	<li>IMAPs (only, and only over TLS)</li>
	<li>an HTTPs (only) interface to the outside world for our user(s)
<ul>
	<li>the Nagios Webinterface for the Administrator(s)</li>
	<li>a webmail interface for easy access from anywhere - also TLS only</li>
</ul>
</li>
</ul>
Let's see if your required software is available:
[sourcecode language="text"]
# yum search nagios
Excluding Packages from CentOS-5 - Base
Finished
Excluding Packages from CentOS-5 - Updates
Finished
Excluding Packages from CentOS-5 - Plus
Finished
Reducing CentOS-5 - Plus to included packages only
Finished
Excluding Packages from CentOS-5 - Addons
Finished
Excluding Packages from CentOS-5 - Extras
Finished
No Matches found
[/sourcecode]
Shoot nothing here..., let's see where we can find the repo. The <a href="http://wiki.centos.org/AdditionalResources/Repositories">CentOS Wiki Page on Repositories</a> is the first hint. It leads us to the description on <a href="http://wiki.centos.org/AdditionalResources/Repositories/RPMForge">how to enable the rpmforge repository</a>. Let's see what happens after the setup process:
[sourcecode language="text"]
# yum check-update
rpmforge                  100% |=========================| 1.1 kB    00:00
Excluding Packages from CentOS-5 - Base
Finished
Excluding Packages from CentOS-5 - Updates
Finished
Excluding Packages from CentOS-5 - Plus
Finished
Reducing CentOS-5 - Plus to included packages only
Finished
Excluding Packages from CentOS-5 - Addons
Finished
Excluding Packages from CentOS-5 - Extras
Finished

lftp.i386                                3.7.14-1.el5.rf        rpmforge
mtr.i386                                 2:0.75-1.el5.rf        rpmforge
pdns.i386                                2.9.21.1-1.el5.rf      rpmforge
perl-BSD-Resource.i386                   1.2901-1.el5.rf        rpmforge
perl-Compress-Zlib.noarch                2.015-1.el5.rf         rpmforge
perl-Convert-ASN1.noarch                 0.22-1.el5.rf          rpmforge
perl-Crypt-SSLeay.i386                   0.57-1.el5.rf          rpmforge
perl-DBI.i386                            1.609-1.el5.rf         rpmforge
perl-Digest-SHA1.i386                    2.12-1.el5.rf          rpmforge
perl-HTML-Parser.i386                    3.61-1.el5.rf          rpmforge
perl-HTML-Tagset.noarch                  3.20-1.el5.rf          rpmforge
perl-IO-Socket-SSL.noarch                1.26-1.el5.rf          rpmforge
perl-Net-DNS.i386                        0.65-1.el5.rf          rpmforge
perl-Net-SSLeay.i386                     1.35-1.el5.rf          rpmforge
perl-XML-NamespaceSupport.noarch         1.10-1.el5.rf          rpmforge
perl-XML-Parser.i386                     2.36-1.el5.rf          rpmforge
perl-XML-SAX.noarch                      0.96-1.el5.rf          rpmforge
perl-XML-Twig.noarch                     3.32-1.el5.rf          rpmforge
rsync.i386                               3.0.6-1.el5.rf         rpmforge
subversion.i386                          1.6.3-0.1.el5.rf       rpmforge
syslinux.i386                            3.82-1.el5.rf          rpmforge
[/sourcecode]
Ouch again, quite a few packages to update. Where did the priority stuff go described in the setup process? After some Googling I found that the Priority Plugin itself is indeed enabled, but the plugin infrastructure that yum has is not there: Doh!

Let's enable the plugin infrastructure..
[sourcecode language="text"]
# vim /etc/yum.conf
[/sourcecode]
and let's check the contents:
[sourcecode language="text"]
[main]
cachedir=/var/cache/yum
debuglevel=2
logfile=/var/log/yum.log
pkgpolicy=newest
distroverpkg=redhat-release
tolerant=1
exactarch=1
retries=20
obsoletes=1
gpgcheck=1
metadata_expire=1800
#plugins=1

# PUT YOUR REPOS HERE OR IN separate files named file.repo
# in /etc/yum.repos.d
[/sourcecode]
Aha! The <em>plugins=1</em> line was missing. Check again that it is indeed working:
[sourcecode language="text"]
# yum check-update
Loading &quot;priorities&quot; plugin
Loading &quot;fastestmirror&quot; plugin
Loading mirror speeds from cached hostfile
 * rpmforge: apt.sw.be
 * base: p3mirror01.prod.phx3.secureserver.net
 * updates: p3mirror01.prod.phx3.secureserver.net
 * contrib: pubmirrors.reflected.net
 * centosplus: p3mirror01.prod.phx3.secureserver.net
 * addons: p3mirror01.prod.phx3.secureserver.net
 * extras: p3mirror01.prod.phx3.secureserver.net
rpmforge                  100% |=========================| 1.1 kB    00:00     
base                      100% |=========================| 1.1 kB    00:00     
updates                   100% |=========================|  951 B    00:00     
contrib                   100% |=========================|  951 B    00:00     
centosplus                100% |=========================|  951 B    00:00     
addons                    100% |=========================|  951 B    00:00     
extras                    100% |=========================| 1.1 kB    00:00     
Excluding Packages from CentOS-5 - Base
Finished
Excluding Packages from CentOS-5 - Updates
Finished
Excluding Packages from CentOS-5 - Plus
Finished
Reducing CentOS-5 - Plus to included packages only
Finished
Excluding Packages from CentOS-5 - Addons
Finished
Excluding Packages from CentOS-5 - Extras
Finished
416 packages excluded due to repository priority protections
[/sourcecode]
Success! No updates available from the rpmforge repository. Now let's check wether we got something like nagios (and nrpe for that matter):
[sourcecode language="text"]
# yum list nagios nrpe dovecot postfix openldap-servers openldap-clients openldap
Loading &quot;priorities&quot; plugin
Loading &quot;fastestmirror&quot; plugin
Loading mirror speeds from cached hostfile
 * rpmforge: apt.sw.be
 * base: p3mirror01.prod.phx3.secureserver.net
 * updates: p3mirror01.prod.phx3.secureserver.net
 * contrib: pubmirrors.reflected.net
 * centosplus: p3mirror01.prod.phx3.secureserver.net
 * addons: p3mirror01.prod.phx3.secureserver.net
 * extras: p3mirror01.prod.phx3.secureserver.net
Excluding Packages from CentOS-5 - Base
Finished
Excluding Packages from CentOS-5 - Updates
Finished
Excluding Packages from CentOS-5 - Plus
Finished
Reducing CentOS-5 - Plus to included packages only
Finished
Excluding Packages from CentOS-5 - Addons
Finished
Excluding Packages from CentOS-5 - Extras
Finished
416 packages excluded due to repository priority protections
Installed Packages
dovecot.i386                             1.0.7-2.el5            installed
openldap.i386                            2.3.27-8.el5_2.4       installed
openldap-clients.i386                    2.3.27-8.el5_2.4       installed
openldap-servers.i386                    2.3.27-8.el5_2.4       installed
postfix.i386                             2:2.3.3-2.el5.centos.m installed
Available Packages
nagios.i386                              3.0.6-1.el5.rf         rpmforge
postfix.i386                             2:2.3.3-2              base
[/sourcecode]
Success (again)! Tons of nagios and nrpe packages available. Yes I already installed some packages because I thought all I need was available, CentOS is a RHEL clone after all and claims to be Enterprise. How much enterprise can you be if the standard monitoring tool isn't available in the official repositories?

So much for basic package availability in CentOS...see you next time dear CentOS (or rather RHEL)
[sourcecode language="text"]
yum install nagios
Loading &quot;priorities&quot; plugin
Loading &quot;fastestmirror&quot; plugin
Loading mirror speeds from cached hostfile
* rpmforge: ftp-stud.fht-esslingen.de
* base: p3mirror01.prod.phx3.secureserver.net
* updates: p3mirror01.prod.phx3.secureserver.net
* contrib: pubmirrors.reflected.net
* centosplus: p3mirror01.prod.phx3.secureserver.net
* addons: p3mirror01.prod.phx3.secureserver.net
* extras: p3mirror01.prod.phx3.secureserver.net
Excluding Packages from CentOS-5 - Base
Finished
Excluding Packages from CentOS-5 - Updates
Finished
Excluding Packages from CentOS-5 - Plus
Finished
Reducing CentOS-5 - Plus to included packages only
Finished
Excluding Packages from CentOS-5 - Addons
Finished
Excluding Packages from CentOS-5 - Extras
Finished
416 packages excluded due to repository priority protections
Setting up Install Process
Parsing package install arguments
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package nagios.i386 0:3.0.6-1.el5.rf set to be updated
--&gt; Finished Dependency Resolution

Dependencies Resolved

=============================================================================
Package                 Arch       Version          Repository        Size
=============================================================================
Installing:
nagios                  i386       3.0.6-1.el5.rf   rpmforge          3.6 M

Transaction Summary
=============================================================================
Install      1 Package(s)
Update       0 Package(s)
Remove       0 Package(s)

Total download size: 3.6 M
Is this ok [y/N]: N
Exiting on user Command
Complete!
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>410</wp:post_id>
  <wp:post_date>2009-07-19 18:00:26</wp:post_date>
  <wp:post_date_gmt>2009-07-19 18:00:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adventures-in-centos-land-part-1</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1259053359";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1259053360";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>18</wp:comment_id>
    <wp:comment_author><![CDATA[Adventures in CentOS-Land (Part 2) &laquo; Server Horror]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://serverhorror.wordpress.com/2009/07/20/adventures-in-centos-land-part-2/</wp:comment_author_url>
    <wp:comment_author_IP>74.200.244.97</wp:comment_author_IP>
    <wp:comment_date>2009-07-20 12:05:21</wp:comment_date>
    <wp:comment_date_gmt>2009-07-20 12:05:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] } OK let&#8217;s see what&#8217;s going on with our CentOS mail host from last time. First let&#8217;s check that we don&#8217;t have too much listening on public interfaces after all [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Adventures in CentOS-Land (Part 2)</title>
  <link>http://serverhorror.wordpress.com/2009/07/20/adventures-in-centos-land-part-2/</link>
  <pubDate>Mon, 20 Jul 2009 12:00:07 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=422</guid>
  <description/>
  <content:encoded><![CDATA[OK let's see what's going on with our <a href="http://serverhorror.wordpress.com/2009/07/19/adventures-in-centos-land-part-1/">CentOS mail host from last time</a>. First let's check that we don't have too much listening on public interfaces after all we only need SSH, SMTPs, IMAPs and HTTPs when everything is set up...
[sourcecode language="text"]
# netstat -tulpen
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address     Foreign Address   State   User  Inode  PID/Program name   
tcp        0      0 0.0.0.0:111       0.0.0.0:*         LISTEN  0     54126  19649/portmap       
tcp        0      0 0.0.0.0:818       0.0.0.0:*         LISTEN  0     54249  19716/rpc.statd     
tcp        0      0 127.0.0.1:631     0.0.0.0:*         LISTEN  0     54161  19672/cupsd         
tcp        0      0 127.0.0.1:25      0.0.0.0:*         LISTEN  0     54687  19798/sendmail: acc
tcp        0      0 :::22             :::*              LISTEN  0     4961   1917/sshd           
tcp        0      0 ::1:631           :::*              LISTEN  0     54162  19672/cupsd         
udp        0      0 0.0.0.0:812       0.0.0.0:*                 0     54233  19716/rpc.statd     
udp        0      0 0.0.0.0:815       0.0.0.0:*                 0     54242  19716/rpc.statd     
udp        0      0 0.0.0.0:32825     0.0.0.0:*                 70    54204  19689/avahi-daemon:
udp        0      0 0.0.0.0:5353      0.0.0.0:*                 70    54202  19689/avahi-daemon:
udp        0      0 0.0.0.0:111       0.0.0.0:*                 0     54125  19649/portmap       
udp        0      0 0.0.0.0:631       0.0.0.0:*                 0     54165  19672/cupsd         
udp        0      0 :::32826          :::*                      70    54205  19689/avahi-daemon:
udp        0      0 :::5353           :::*                      70    54203  19689/avahi-daemon:
[/sourcecode]
Quite a lot listening there for a server that is freshly installed. Let's turn of the nastiest stuff in the first place (NFS being public? WTF?).
[sourcecode language="text"]
# service portmap stop
Stopping portmap:                                          [  OK  ]
# service cups stop
Stopping cups:                                             [  OK  ]
# service avahi-daemon stop
Shutting down Avahi daemon:                                [  OK  ]
# service nfslock stop
Stopping NFS statd:                                        [  OK  ]
# service sendmail stop
Shutting down sm-client:                                   [  OK  ]
Shutting down sendmail:                                    [  OK  ]
# service postfix start
Starting postfix:                                          [  OK  ]
# netstat -tulpen
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address     Foreign Address  State   User  Inode  PID/Program name
tcp        0      0 0.0.0.0:25        0.0.0.0:*        LISTEN  0     55050  20006/master
tcp        0      0 :::22             :::*             LISTEN  0     4961   1917/sshd
[/sourcecode]
Much better isn't it? Now let's take care of reboots:
[sourcecode language="text"]
# chkconfig --level 345 portmap off
# chkconfig --level 345 cups off
# chkconfig --level 345 avahi-daemon off
# chkconfig --level 345 nfslock off
# chkconfig --level 235 sendmail off
# chkconfig --level 2345 postfix on
# chkconfig --level 2345 sshd on
[/sourcecode]
Just to be on the safe side let's double check that ssh will come up on reboots:
[sourcecode language="text"]
# chkconfig --list sshd
sshd               0:off    1:off    2:on    3:on    4:on    5:on    6:off
[/sourcecode]
Looks all nice. Now <em>shutdown -r now</em> and see if it stays that way...(This is left as an exercise for the reader)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>422</wp:post_id>
  <wp:post_date>2009-07-20 12:00:07</wp:post_date>
  <wp:post_date_gmt>2009-07-20 12:00:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adventures-in-centos-land-part-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1259053359";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1259053359";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>19</wp:comment_id>
    <wp:comment_author><![CDATA[Adventures in CentOS-Land (Part 3) « Server Horror]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://serverhorror.wordpress.com/2009/07/21/adventures-in-centos-land-part-3/</wp:comment_author_url>
    <wp:comment_author_IP>76.74.254.67</wp:comment_author_IP>
    <wp:comment_date>2009-07-24 10:01:28</wp:comment_date>
    <wp:comment_date_gmt>2009-07-24 10:01:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...]Let&#8217;s get to work with CentOS5 now that we have set up the yum repositories and are able to install all the software we need. As a short reminder our requirements listing again. So let&#8217;s continue from last time&#8230; [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Numerical Keypad not Working? - Here's a Solution(TM)</title>
  <link>http://serverhorror.wordpress.com/2009/08/12/numerical-keypad-not-working-heres-a-solutiontm/</link>
  <pubDate>Wed, 12 Aug 2009 13:00:27 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=439</guid>
  <description/>
  <content:encoded><![CDATA[So i run Debian/Unstable on my workstation. It works fine 99% percent of the time but recently the numerical keypad stopped working. I have no idea what caused it but somehow the keyboard settings from Gnome have been modified.

The problem was that under "<em>System</em>" -&gt; "<em>Preferences</em>" - &gt; "<em>Keyboard</em>" under the "<em>Mouse Keys</em>" tab there's an option "<em>Pointer can be controlled using the keypad</em>". This option was checked.

Took me quite a while to figure this out but now I can happily type my numbers on the keypad again.

Here's the screenshot (mostly for my own reference) where to find the option:

[caption id="attachment_441" align="aligncenter" width="514" caption="Screenshot-Keyboard Preferences"]<img class="size-full wp-image-441" title="Screenshot-Keyboard Preferences" src="http://serverhorror.files.wordpress.com/2009/08/screenshot-keyboard-preferences.png" alt="Screenshot-Keyboard Preferences" width="514" height="532" />[/caption]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>439</wp:post_id>
  <wp:post_date>2009-08-12 13:00:27</wp:post_date>
  <wp:post_date_gmt>2009-08-12 13:00:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>numerical-keypad-not-working-heres-a-solutiontm</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1259053348";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1259053348";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>I need a Wiki (or two, or three) - Quick!</title>
  <link>http://serverhorror.wordpress.com/2009/08/17/i-need-a-wiki-or-two-or-three-quick/</link>
  <pubDate>Mon, 17 Aug 2009 15:00:04 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=445</guid>
  <description/>
  <content:encoded><![CDATA[OK so you need a <a href="http://en.wikipedia.org/wiki/Wiki">Wiki</a> in your company? - Not much of a problem just grab a copy of some wiki and there you go. Now that is fine for very small companies. You may need to have a Wiki for each project or departement and have some user rights within those Wikis. What are you gonna do? Create a whole new instance all the way thru everytime? I recommend a <a href="http://en.wikipedia.org/wiki/WikiFarm">Wiki-Farm</a>!

Let's have some requirements:
<ul>
	<li>ACL or any kind of permissions for pages</li>
	<li>Shared User Base (mentioned below as an exercise to the reader...)</li>
	<li>Quick Setup of new Wikis</li>
</ul>
Personally I like <a href="http://www.python.org">Python</a> and so I naturally prefer a Wiki implemented in Python - <a href="http://moinmo.in">MoinMoin</a> is such a Wiki. Also since <a href="http://www.modwsgi.org">modwsgi</a> came up a setup with some webserver in front of it is not only quite easy but also fast.

It's not that much to set up a nice little <a href="http://en.wikipedia.org/wiki/WikiFarm">Wiki-Farm</a>.

Get a copy of the source code and create a nice directory structure to hold your new Wiki-Farm, I'm on <a href="http://www.debian.org">Debian</a> and this is my test box, so I simply installed <a href="http://packages.debian.org/libapache2-mod-wsgi">modwsgi</a> to get a nice setup resembling at least some kind of production layout.
[sourcecode langauage="text"]
$ # create a nice directory structure
$ sudo cd /srv
$ sudo mkdir -p /srv/moin/code/
$ sudo mkdir -p /srv/moin/wikis/wsgi
$ sudo mkdir -p /srv/moin/wikis/data
$ # grab the source from the mercurial repository
$ sudo hg clone http://hg.moinmo.in/moin/1.8 /srv/moin/code/1.8
$ sudo apt-get install libapache2-mod-wsgi
[/sourcecode]

Ok now we have a nice little setup to get things started, let's configure <a href="http://http.apache.org">Apache</a> to get some error messages so that we know Python is actually handling our request...
[sourcecode langauage="text"]
$ # copy the configuration from upstream to a place that is maintainable
$ # we'll need this later on
$ sudo cp -i /srv/moin/code/1.8/wiki/server/moin.wsgi /srv/moin/wikis/wsgi/moin18.wsgi
$ sudo cp -i /srv/moin/code/1.8/wiki/config/wikifarm/farmconfig.py /srv/moin/wikis/wsgi/
$ sudo vim /etc/apache2/sites-enabled/000-default
[/sourcecode]
We actually only need 3 lines (4 actually but this is just simple Apache stuff) of additional configuration for Apache HTTP Server, I personally like a bit overview so I split the lines up to provide a better human readable format.
[sourcecode langauage="text"]
alias /moin_static184/ &amp;quot;/srv/moin/code/1.8/wiki/htdocs/&amp;quot;
WSGIScriptAlias /wikis/moin18.wsgi /srv/moin/wikis/wsgi/moin18.wsgi
WSGIDaemonProcess moin18 \
   user=moin18 \
   group=moin18 \
   home=/srv/moin/wikis/18 \
   processes=5 \
   threads=15 \
   maximum-requests=1000 \
   umask=0007 \
   display-name=moin18
WSGIProcessGroup moin18
[/sourcecode]
Let's see what we did wrong:
[sourcecode langauage="text"]
$ sudo apache2ctl -t
apache2: bad user name moin18
[/sourcecode]
Uh oh! Let's now add the user (and group)
[sourcecode langauage="text"]
$ sudo adduser --no-create-home --disabled-login --shell /bin/false moin18
[/sourcecode]
Debian will ask a few questions and create a user and group appropriate for our requirements. Another time checking the Apache config tells us everyting is fine.
[sourcecode langauage="text"]
$ sudo apache2ctl -t
Syntax OK
$ sudo /etc/init.d/apache2 restart
Restarting web server: apache2 ... waiting .
[/sourcecode]
Ok so let's try the configured URL - <a href="http://localhost/wikis/moin18.wsgi">http://localhost/wikis/moin18.wsgi</a>. Gives us an internal server error and that is <em>a good thing(TM)</em> because we know Apache HTTP is trying to serve something that is configured the wrong way.

So let's fix our <a href="http://en.wikipedia.org/wiki/Wsgi">WSGI</a> Script. At the top level add the path to the <a href="http://moinmo.in">MoinMoin</a> package and then add the path to where your WSGI script is located:
[sourcecode langauage="python"]
sys.path.insert(0, '/srv/moin/code/1.8/')
sys.path.insert(0, '/srv/moin/wikis/wsgi/')
[/sourcecode]
Calling <a href="http://localhost/wikis/moin18.wsgi">http://localhost/wikis/moin18.wsgi</a> again should now show you a nice little error message that looks a bit more like python.

Let's edit the aforementiond <em>farmconfig.py</em> file, we don't need to do that much,  actually I changed only 3 settings:
[sourcecode langauage="python"]
# data_dir = &amp;quot;./data&amp;quot; # comment this out to explicitely set the data dir for a single Wiki
data_underlay_dir = '/srv/moin/code/1.8/wiki/underlay/'
superuser = [u&amp;quot;MartinMarcher&amp;quot;, ]
acl_rights_before = u&amp;quot;MartinMarcher:read,write,delete,revert,admin&amp;quot;
[/sourcecode]
We'll configure the underlay dir, and make sure that there is a user that can do everyting (myself in that case). Now there's the wiki variable at the top of the <em>farmconfig.py</em> file, it has a wiki preconfigured "mywiki". Now the interesting part is to create a simple config that uses everything that
[sourcecode langauage="python"]
import farmconfig
class Config(farmconfig.FarmConfig):
    sitename = u&amp;quot;MyWiki&amp;quot;
    data_dir = '/srv/moin/wikis/data/mywiki/'
    page_front_page = u&amp;quot;FrontPage&amp;quot;
[/sourcecode]
All you need to do is actually tell MoinMoin where it should place the data and what the start page of your Wiki is (the last one is actually a lie but I like the implicit mentioning of the configuration parameter more that having it in the <em>farmconfig.py</em>).

Nearly finished, let's set up the underlay_dir which holds the help pages provided by MoinMoin upstream and also fix the permissions:
[sourcecode langauage="text"]
$ sudo tar -C /srv/moin/code/1.8/wiki -tf /srv/moin/code/1.8/wiki/underlay.tar
$ sudo chown -R moin18:moin18 /srv/moin/code/1.8/wiki/underlay
[/sourcecode]
Also we need the data_dir set up correctly for our shiny new wiki:
[sourcecode langauage="text"]
$ sudo cp -a /srv/moin/code/1.8/wiki/data/ /srv/moin/wikis/data/mywiki/
$ sudo chown -R moin18:moin18 /srv/moin/wikis/data/mywiki/
[/sourcecode]
That's about it. You now have a nice Wiki in place you can send as a gift to your customers. Actually that was not quite as short as one might think but the effort pays of with a second wiki.

Wiki-Farms in MoinMoin work by matching the request URI. go to your <em>farmconfig.py</em> (<em>/srv/moin/wikis/wsgi/farmconfig.py</em>) and edit the list variable called wikis. By default it looks like this:
[sourcecode langauage="python"]
wikis = [
    # Standalone server needs the port e.g. localhost:8000
    # Twisted server can now use the port, too.                         

    # wikiname,     url regular expression (no protocol)
    # ---------------------------------------------------------------
    (&amp;quot;mywiki&amp;quot;, r&amp;quot;.*&amp;quot;),   # this is ok for a single wiki

    # for multiple wikis, do something like this:
    #(&amp;quot;moinmoin&amp;quot;,    r&amp;quot;^moinmo.in/.*$&amp;quot;),
    #(&amp;quot;moinmaster&amp;quot;,  r&amp;quot;^master.moinmo.in/.*$&amp;quot;),
]
[/sourcecode]
Now make it look like this and there's just one more step to do for a second wiki:
[sourcecode langauage="python"]
wikis = [
    # wikiname,     url regular expression (no protocol)
    # ---------------------------------------------------------------
    (&amp;quot;mywiki&amp;quot;, r&amp;quot;^localhost/wikis/moin18.wsgi/mywiki/.*&amp;quot;),
    (&amp;quot;anotherwiki&amp;quot;, r&amp;quot;^localhost/wikis/moin18.wsgi/anotherwiki/.*&amp;quot;),
]
[/sourcecode]
Now create a new python module in /srv/moin/wikis/wsgi/ and edit the sitename variable accordingly.
[sourcecode langauage="python"]
class Config(farmconfig.FarmConfig):
    siteid = u&amp;quot;AnotherWiki&amp;quot;
    sitename = u&amp;quot;AnotherWiki&amp;quot;
    data_dir = '/srv/moin/wikis/data/anotherwiki/'
    page_front_page = u&amp;quot;FrontPage&amp;quot;
[/sourcecode]
All there's left to do is to create another data dir for your shiny new (second) Wiki and apply the correct permissions:
[sourcecode langauage="text"]
$ sudo cp -a /srv/moin/code/1.8/wiki/data/ /srv/moin/wikis/data/anotherwiki/
$ sudo chown -R moin18:moin18 /srv/moin/wikis/data/anotherwiki/
[/sourcecode]
What we did, in this las step, was:
<ul>
	<li>create another "data" directory for our new wiki</li>
	<li>give it to the moin18 user and group so that modwsgi can write to it</li>
	<li>tell the <em>farmconfig.py</em> file that we have a second Wiki. This is done by URI matching</li>
</ul>
The URI matching probably needs a bit of explanation it matches everything except the protocoll part (http:// or https://). Construct it this way:
<ul>
	<li>&lt;servername&gt; + "/"</li>
	<li>&lt;path to wsgi file + "/"</li>
	<li>&lt;wikiname&gt; + "/"</li>
	<li>".*$"</li>
</ul>
To read it in a single line:
<ul>
	<li>&lt;servername&gt;/&lt;path to wsgi file&gt;/&lt;wikiname&gt;/.*$</li>
</ul>
Personally there's only one thing that bugs me, the servername, luckily this is Python code and you can easily write some nice code that spits out the right string you need to match the URI in question.

Because it's so much fun, let's create another wiki. Add a third line to the wikis-Variable:
[sourcecode langauage="python"]
(&amp;quot;yetanotherwiki&amp;quot;, r&amp;quot;^localhost/wikis/moin18.wsgi/yetanotherwiki/.*&amp;quot;),
[/sourcecode]
Create the data directory and give it correct permissions:
[sourcecode langauage="text"]
$ sudo cp -a /srv/moin/code/1.8/wiki/data/ /srv/moin/wikis/data/yetanotherwiki/
$ sudo chown -R moin18:moin18 /srv/moin/wikis/data/yetanotherwiki/
[/sourcecode]
One last step left. Copy /srv/moin/wikis/wsgi/mywiki.py to /srv/moin/wikis/wsgi/yetanotherwiki.py and edit the sitename variable. There you go, 3 shiny new wikis.

While the initial setup may seem a bit complicated, once the Wiki-Farm is set up you'll have just as many Wikis as you like in no time afterwards - and they are manageable also.

I recommend you have a look at <a href="http://moinmo.in/HelpOnConfiguration#paths">HelpOnConfiguration#Paths</a> especially the user_dir variable so that you can have a single userbase for all your Wikis. This is very convenient for multiple Wikis inside a company where everybody "needs" to have the same name thruout all Wiki instances.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>445</wp:post_id>
  <wp:post_date>2009-08-17 15:00:04</wp:post_date>
  <wp:post_date_gmt>2009-08-17 15:00:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>i-need-a-wiki-or-two-or-three-quick</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1270743942";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1270743952";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_bdbabac7ed8ad88b9924e84017eed55a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>20</wp:comment_id>
    <wp:comment_author><![CDATA[Graham Dumpleton]]></wp:comment_author>
    <wp:comment_author_email>Graham.Dumpleton@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://blog.dscpl.com.au</wp:comment_author_url>
    <wp:comment_author_IP>121.44.108.121</wp:comment_author_IP>
    <wp:comment_date>2009-08-19 11:47:04</wp:comment_date>
    <wp:comment_date_gmt>2009-08-19 11:47:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I am not sure you need 'umask' option to WSGIDaemonProcess. That was I think only needed for certain pre release versions of mod_wsgi where there was a bug. The moin documentation mentioned it as a work around at the time. Not sure why it has now persisted in documentation even though possibly no longer relevant. Also, using 100 threads per process is ridiculously over the top and is only going to serve to increase memory requirements of processes. You could leave out the threads option and would default to 15 threads per process and for 5 processes even that would likely be much more than you need. Either drop threads option and reduce the number of processes at same time, or drop threads down to 5 per process, and you will still likely find it performs more than adequately.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>21</wp:comment_id>
    <wp:comment_author><![CDATA[Martin]]></wp:comment_author>
    <wp:comment_author_email>martin@marcher.name</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>78.142.172.145</wp:comment_author_IP>
    <wp:comment_date>2009-08-19 12:22:59</wp:comment_date>
    <wp:comment_date_gmt>2009-08-19 12:22:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for the hint. http://code.google.com/p/modwsgi/wiki/ConfigurationDirectives#WSGIDaemonProcess still mentions the `umask` switch from a quick scan, I like the option very much since it adds a bit of separation between multpile WSGI Applications.

I corrected the settings a bit down. I'm leaving the options there so people can at least see the config options.

And yes I simply copy/pasted them from the various sites at the moinmoin HelpPages :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5284979</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>22</wp:comment_id>
    <wp:comment_author><![CDATA[Graham Dumpleton]]></wp:comment_author>
    <wp:comment_author_email>Graham.Dumpleton@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://blog.dscpl.com.au</wp:comment_author_url>
    <wp:comment_author_IP>121.44.108.121</wp:comment_author_IP>
    <wp:comment_date>2009-08-19 21:34:24</wp:comment_date>
    <wp:comment_date_gmt>2009-08-19 21:34:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The umask option is still in mod_wsgi because it may indeed be required in some cases. The issue was that moin was saying to use it to override a mod_wsgi bug at the time when it wasn't being used. Ie., the default value in C code was wrong as was missing leading 0 for octal number. The default though is 0077, so why you still may want to override it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>25</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Renner]]></wp:comment_author>
    <wp:comment_author_email>robe@amd.co.at</wp:comment_author_email>
    <wp:comment_author_url>http://amd.co.at/</wp:comment_author_url>
    <wp:comment_author_IP>213.229.14.38</wp:comment_author_IP>
    <wp:comment_date>2009-09-30 12:37:31</wp:comment_date>
    <wp:comment_date_gmt>2009-09-30 12:37:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Sooo... since when did moinmoin become usable? And I mean in the "I, as an user, like and want to use it"-usable :&gt;

Nice writeup nevertheless.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>RE: Is there a best distro? (LinuxJournal)</title>
  <link>http://serverhorror.wordpress.com/2009/10/19/re-is-there-a-best-distro-linuxjournal/</link>
  <pubDate>Mon, 19 Oct 2009 14:00:45 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=473</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://www.linuxjournal.com/content/there-best-distro">LinuxJournal is asking for the best Linux Distro</a>, first I thought

It's actually quite easy to answer (especially to someone who will understand the implications):
<h2>There is no "best Linux"</h2>
Just asko what's the best commercial Unix out there. One could
say: "They all start at the same point" it's a kernel and some
toolset you can then use and (re)script to your needs.

The best ist actually the one that meets your requirements best.
<ul>
	<li><strong>Cheap?</strong>
<ul>
	<li><span style="background-color:#ffffff;"><a href="http://www.debian.org">Debian</a></span></li>
	<li><span style="background-color:#ffffff;"><a href="http://www.ubuntu.com">Ubuntu</a></span></li>
	<li><span style="background-color:#ffffff;"><a href="http://www.gentoo.org">Gentoo</a></span></li>
	<li><span style="background-color:#ffffff;">(any "*non-enterprise distro*")/...</span></li>
</ul>
</li>
	<li><strong>Supported?</strong>
<ul>
	<li><span style="background-color:#ffffff;"><a href="http://www.redhat.com">RHEL</a></span></li>
	<li><span style="background-color:#ffffff;"><a href="http://www.novell.com/linux/">SuSE</a> (hehe, I had to look that one up)</span></li>
	<li><span style="background-color:#ffffff;">...</span></li>
</ul>
</li>
	<li><strong>Small?</strong>
<ul>
	<li><span style="background-color:#ffffff;"><a href="http://grml.org/">Grml</a></span></li>
	<li><span style="background-color:#ffffff;"><a href="http://www.damnsmalllinux.org/">DSL</a></span></li>
	<li><span style="background-color:#ffffff;">...</span></li>
</ul>
</li>
</ul>
<h2>"All of the distributions start from the same point"</h2>
I think that's just plain wrong. Yes they do have the same kernel (do they really? - <a href="http://www.debian.org/ports/kfreebsd-gnu/">Debian GNU/kFreeBSD</a>). <span style="background-color:#ffffff;">But even switching from Ubuntu to Debian or vice versa has a lot of hurdles to take ("/etc/inittab" on Ubuntu?) - Upstart in Debian/Stable?</span>

I'd rather suggest <em><a href="http://www.freebsd.org">FreeBSD</a></em><em> or </em><em><a href="http://www.openbsd.org">OpenBSD</a> </em>(4.6 is just out, I suggest everyone to give it a try) - <strong>or is crucial</strong> because choosing between the 2 is (IMHO) even wider apart than choosing between RHEL and Debian. <em>Note: I suggest this <strong><a href="http://en.wikipedia.org/wiki/If_and_only_if">iff</a></strong>[sic] you want to stay in an enviroment that stays mostly the same thruought all servers and desktops</em>

FreeBSD is FreeBSD is FreeBSD - on every box.

Linux is not "just Linux" from that point there's just too much diversity among the distros. Even with a single Distro you can have large differences, of course you can take any BSD apart so that it won't look like the original distribution anymore, but staying within the universe of best practices you won't have as much diversity between FreeBSD installations as between Linux installations within a single distribution.
<h2><span style="background-color:#ffffff;">Selection of rich applications</span></h2>
<span style="background-color:#ffffff;">The key word here is <strong>Selection</strong>. Compare RHELs selection to Debians selection. You wouldn't think that an enterprise grade distro doesn't even have Nagios in the repositories - aren't the enterprise people monitoring their servers too?</span>
<h2><span style="background-color:#ffffff;">My choice?</span></h2>
<span style="background-color:#ffffff;">Simple, give me the problem description and I'll have a look which of the distributions (or even non-Linux - read BSDs, or even non-FOSS) solutions will suit best. It doesn't help to get RHEL if they don't support the software you need, but it's neither helpful to stay with Debian if you need proven Enterprise grade support contrancts with 4 hours of maximum time to react. (Btw: <a href="http://opensolaris.org">OpenSolaris</a> does have the <a href="http://www.opensolaris.com/learn/subscriptions/#opensolaris"><strong>option</strong> to buy support from Sun</a>)</span>

<span style="background-color:#ffffff;">Of course that would be only the start of a discussion with someone who already knows enough about *NIX to discuss on such a Level. As you said dear LinuxJournal:</span>
<blockquote><span style="background-color:#ffffff;">This was not someone who is unfamiliar with technology, or UNIX for that matter, but someone who is <em>one of us</em></span></blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>473</wp:post_id>
  <wp:post_date>2009-10-19 14:00:45</wp:post_date>
  <wp:post_date_gmt>2009-10-19 14:00:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>re-is-there-a-best-distro-linuxjournal</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1270743943";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1270743930";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>28</wp:comment_id>
    <wp:comment_author><![CDATA[ircguru]]></wp:comment_author>
    <wp:comment_author_email>ircguru2009@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://maillistarchives.com</wp:comment_author_url>
    <wp:comment_author_IP>200.188.178.38</wp:comment_author_IP>
    <wp:comment_date>2009-11-08 10:50:06</wp:comment_date>
    <wp:comment_date_gmt>2009-11-08 10:50:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice Post, btw do you know any good <a href="http://maillistarchives.com" rel="nofollow">usenet archives and or mailing list archives</a> site for unix / linux / bsd]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Where are the BSD Licensed "Enterprise Filesystems"?</title>
  <link>http://serverhorror.wordpress.com/2009/10/25/where-are-the-bsd-licensed-enterprise-filesystems/</link>
  <pubDate>Sun, 25 Oct 2009 17:28:51 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=479</guid>
  <description/>
  <content:encoded><![CDATA[[digg=http://digg.com/linux_unix/Where_are_the_BSD_Licensed_Enterprise_Filesystems]

A very simple question.
<blockquote>Where is the "Enterprise Filesystem" licensed in a pure BSD way?</blockquote>
I know <a href="http://en.wikipedia.org/wiki/Zfs">ZFS</a> has been implemented by OpenSolaris (well yeah...that's the origin of ZFS) as well as <a href="http://www.freebsd.org">FreeBSD</a> but the <a href="http://en.wikipedia.org/wiki/Common_Development_and_Distribution_License">CDDL</a> is not without critique in the BSD community. The <a href="http://www.openbsd.org">OpenBSD</a> <a href="http://marc.info/?l=openbsd-tech&amp;m=110806948606417&amp;w=2">people consider the CDDL even more restrivtive than GNU/GPL</a>.

So a question to all the guys and girls who are able to create a filesystem (I can't my coding skills are nowhere near to be able to create one), where is the BSD licensed filesystem with all the new features that make a hype?

I'm thinking about stuff like this (thou maybe not complete, somebody may have an absolutely usefull new idea that obsoletes all these features
<ul>
	<li><a href="http://en.wikipedia.org/wiki/Snapshot_(computer_storage)">Snapshots</a> (<a href="http://en.wikipedia.org/wiki/Btrfs">BTRFS</a>, ZFS)
<ul>
	<li><a href="http://en.wikipedia.org/wiki/Versioning_file_system">Continous Snapshots (Versioning File System)</a> (<a href="http://en.wikipedia.org/wiki/Nilfs">NILFS</a>)</li>
</ul>
</li>
	<li><a href="http://en.wikipedia.org/wiki/Copy_on_write">COW (Copy on Write)</a> (BTRFS, ZFS)</li>
	<li><a href="http://en.wikipedia.org/wiki/Logical_volume_management">Volume Management built-in</a> (BTRFS, ZFS)</li>
	<li><a href="http://en.wikipedia.org/wiki/RAID">RAID (like) features built-in the filesystem</a> (BTRFS, ZFS)</li>
	<li>Really large maximum filesizes and<sup>*</sup></li>
	<li>Really large maximum filesystem sizes<sup>*</sup></li>
</ul>
<sup><strong>*</strong></sup>This may not be a Problem now, but I do get why Sun chose to make ZFS a 128-bit filesystem]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>479</wp:post_id>
  <wp:post_date>2009-10-25 17:28:51</wp:post_date>
  <wp:post_date_gmt>2009-10-25 17:28:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>where-are-the-bsd-licensed-enterprise-filesystems</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1270743930";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1270743940";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>27</wp:comment_id>
    <wp:comment_author><![CDATA[uberVU - social comments]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.ubervu.com/conversations/serverhorror.wordpress.com/2009/10/25/where-are-the-bsd-licensed-enterprise-filesystems/</wp:comment_author_url>
    <wp:comment_author_IP>174.129.104.191</wp:comment_author_IP>
    <wp:comment_date>2009-10-26 11:06:15</wp:comment_date>
    <wp:comment_date_gmt>2009-10-26 11:06:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[<strong>Social comments and analytics for this post...</strong>

This post was mentioned on Twitter by serverhorror: Where are the BSD Licensed "Enterprise Filesystems"?: http://wp.me/pxxjT-7J...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>trackback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>32</wp:comment_id>
    <wp:comment_author><![CDATA[GetStothefurf]]></wp:comment_author>
    <wp:comment_author_email>FeniGrani@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://marksblog.iiabblog.com/</wp:comment_author_url>
    <wp:comment_author_IP>114.127.246.36</wp:comment_author_IP>
    <wp:comment_date>2009-11-26 16:16:02</wp:comment_date>
    <wp:comment_date_gmt>2009-11-26 16:16:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I really enjoyed reading this post, keep on posting such interesting posts!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Running OpenSolaris now (for better or worse)! - Yay?</title>
  <link>http://serverhorror.wordpress.com/2009/11/23/running-opensolaris-now-for-better-or-worse-yay/</link>
  <pubDate>Mon, 23 Nov 2009 14:18:50 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=493</guid>
  <description/>
  <content:encoded><![CDATA[So, I just switched to <a href="http://www.opensolaris.org">OpenSolaris</a> on my workstation. In the sense of "<a href="http://en.wikipedia.org/wiki/Eating_one%27s_own_dog_food">Eating one's own dog food</a>" I may have a better argumentation on wether I should like it or not. So far everything seems to work althoug I don't quite have a mirrored ZFS root pool in case one disk dies.

I also nearly immediately switched to the "<a href="http://pkg.opensolaris.org/dev/en/index.shtml">OpenSolaris Development Release Packaging Repository</a>" - actually that's a lie. I'm switching to it right at this very moment....
[sourcecode langauage="text"]
$ pfexec pkg set-publisher -O http://pkg.opensolaris.org/dev opensolaris.org
$ pfexec pkg image-update
Creating Plan /
[/sourcecode]
Maybe, just maybe I'll stick to it....]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>493</wp:post_id>
  <wp:post_date>2009-11-23 14:18:50</wp:post_date>
  <wp:post_date_gmt>2009-11-23 14:18:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>running-opensolaris-now-for-better-or-worse-yay</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1270743927";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1270743937";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>29</wp:comment_id>
    <wp:comment_author><![CDATA[Easy Installation of VirtualBox on OpenSolaris (and maybe other stuff) &laquo; Server Horror]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://serverhorror.wordpress.com/2009/11/24/easy-installation-of-virtualbox-on-opensolaris-and-maybe-other-stuff/</wp:comment_author_url>
    <wp:comment_author_IP>76.74.255.69</wp:comment_author_IP>
    <wp:comment_date>2009-11-24 15:01:34</wp:comment_date>
    <wp:comment_date_gmt>2009-11-24 15:01:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] the newest and best features to be available but I like it when things are easy to manage &#8211; no really! Here&#8217;s how to get VirtualBox by simply using pkg with an official IPS [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>OpenSolaris Release Repository</title>
  <link>http://serverhorror.wordpress.com/2009/11/23/opensolaris-release-repository/</link>
  <pubDate>Mon, 23 Nov 2009 14:43:09 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=496</guid>
  <description/>
  <content:encoded><![CDATA[Should I ever want to switch between release and dev repositories this is just a quick note to the corresponding links:
<ul>
	<li><a href="http://pkg.opensolaris.org/dev/en/index.shtml">OpenSolaris Development Release Packaging Repository</a></li>
	<li><a href="http://pkg.opensolaris.org/release/en/index.shtml">OpenSolaris Packaging Repository</a></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>496</wp:post_id>
  <wp:post_date>2009-11-23 14:43:09</wp:post_date>
  <wp:post_date_gmt>2009-11-23 14:43:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>opensolaris-release-repository</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1270743936";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1270743925";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>HowTo: Mirror the ZFS rpool</title>
  <link>http://serverhorror.wordpress.com/2009/11/15/howto-mirror-the-zfs-rpool/</link>
  <pubDate>Sun, 15 Nov 2009 12:00:06 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=499</guid>
  <description/>
  <content:encoded><![CDATA[[digg=http://digg.com/linux_unix/HowTo_Mirror_the_ZFS_rpool_ServerHorror]

Let's use the shiny ZFS to have a mirrored pool which we can use to boot in case one of the hard disks fails. This involves several steps :
<ol>
	<li>Install a second disk in your box :)</li>
	<li>format the disk so that we can actually use it</li>
	<li>make it the same layout as the disk we already run on</li>
	<li>attach it to the pool in question</li>
</ol>
Now point (3) and (4) need some explanation since I'm experimenting with the root pool (nothing better than a little thrill not being able to boot if things go wrong) and my computer uses the good old <a href="http://en.wikipedia.org/wiki/BIOS">BIOS</a> it cannot boot <a href="http://en.wikipedia.org/wiki/Extensible_Firmware_Interface">EFI</a> labeled disks. For this reason I have to use slices, I'll probably rip out some old storage box in the next weeks and see how much of this process is left when using whole disks.

I assume you are indeed capable of physically installing a second, third or n<sup>th</sup> disk in your computer so let's jump to point (2).
<h1>Formatting the disk(s)</h1>
Simply use "format" :)
[sourcecode langauage="text"]
$ pfexec format
Searching for disks...done

AVAILABLE DISK SELECTIONS:
 0. c8t0d0 &lt;DEFAULT cyl 30398 alt 2 hd 255 sec 63&gt;
 /pci@0,0/pci103c,3035@1f,2/disk@0,0
 1. c8t2d0 &lt;ATA-ST3250310AS-C cyl 30398 alt 2 hd 255 sec 63&gt;
 /pci@0,0/pci103c,3035@1f,2/disk@2,0
Specify disk (enter its number): 1
selecting c8t2d0
[disk formatted]

FORMAT MENU:
 disk       - select a disk
 type       - select (define) a disk type
 partition  - select (define) a partition table
 current    - describe the current disk
 format     - format and analyze the disk
 fdisk      - run the fdisk program
 repair     - repair a defective sector
 label      - write label to the disk
 analyze    - surface analysis
 defect     - defect list management
 backup     - search for backup labels
 verify     - read and display labels
 save       - save new disk/partition definitions
 inquiry    - show vendor, product and revision
 volname    - set 8-character volume name
 !&lt;cmd&gt;     - execute &lt;cmd&gt;, then return
 quit
[/sourcecode]
No go "fdisk" it and delete all the partitions on the disk. Then create a new partition, make it a Solaris partition and be done with that part.
[sourcecode langauage="text"]
format&gt; fdisk
Total disk size is 30401 cylinders
 Cylinder size is 16065 (512 byte) blocks

 Cylinders
 Partition   Status    Type          Start   End   Length    %
 =========   ======    ============  =====   ===   ======   ===
 1       Active    Solaris2          1  30400    30400    100

SELECT ONE OF THE FOLLOWING:
 1. Create a partition
 2. Specify the active partition
 3. Delete a partition
 4. Change between Solaris and Solaris2 Partition IDs
 5. Exit (update disk configuration and exit)
 6. Cancel (exit without updating disk configuration)
Enter Selection: 3
Specify the partition number to delete (or enter 0 to exit): 1
Are you sure you want to delete partition 1? This will make all files and
programs in this partition inaccessible (type &quot;y&quot; or &quot;n&quot;).
y
Partition 1 has been deleted. This was the active partition.
Enter Selection: 1
Select the partition type to create:
 1=SOLARIS2  2=UNIX        3=PCIXOS     4=Other
 5=DOS12     6=DOS16       7=DOSEXT     8=DOSBIG
 9=DOS16LBA  A=x86 Boot    B=Diagnostic C=FAT32
 D=FAT32LBA  E=DOSEXTLBA   F=EFI        0=Exit? 1
Specify the percentage of disk to use for this partition
(or type &quot;c&quot; to specify the size in cylinders). 100
Should this become the active partition? If yes, it  will be activated
each time the computer is reset or turned on.
Please type &quot;y&quot; or &quot;n&quot;. y
Partition 1 is now the active partition.
Enter Selection: 5
[/sourcecode]
<h1>Duplicate the disk layout on both disks</h1>
Now OpenSolaris provides us with 2 nice tools to make one disk have exactly the same layout as another disk. Use them like below:
[sourcecode langauage="text"]
$ pfexec prtvtoc /dev/rdsk/c8t0d0s2 # first disk
$ pfexec prtvtoc /dev/rdsk/c8t2d0s2 # second disk
$ pfexec prtvtoc /dev/rdsk/c8t0d0s2 | pfexec fmthard -s - /dev/rdsk/c8t2d0s2 # make the 1st disk the same as the 2nd
[/sourcecode]
<h1>Attach it to the pool in question</h1>
Let's have a quick look at the existing pool:
[sourcecode langauage="text"]
$ zpool status
 pool: rpool
 state: ONLINE
 scrub: scrub completed after 0h26m with 0 errors on Wed Nov 25 10:52:26 2009
config:

 NAME        STATE     READ WRITE CKSUM
 rpool       ONLINE       0     0     0
 c8t0d0s0    ONLINE       0     0     0

errors: No known data errors
[/sourcecode]
Nice we now see what our original device name is and what our pool name is, we need both for the next command. Remember in my example the new disk slice (the BIOS vs. EFI thing) is  <em>c8t2d0s0</em>. We should be all fine to attach the slice to the pool and see it start recovering.<em></em>
[sourcecode langauage="text"]
$ pfexec zpool attach rpool c8t0d0s0 c8t2d0s0
invalid vdev specification
use '-f' to override the following errors:
/dev/dsk/c8t2d0s0 overlaps with /dev/dsk/c8t2d0s2
[/sourcecode]
Ouch, didn't quite work, so let's do as instructed, and right thereafter let's investigate the staus of the pool:
[sourcecode langauage="text"]
$ pfexec zpool attach -f rpool c8t0d0s0 c8t2d0s0
Please be sure to invoke installgrub(1M) to make 'c8t2d0s0' bootable.
$ zpool status
 pool: rpool
 state: ONLINE
status: One or more devices is currently being resilvered.  The pool will
 continue to function, possibly in a degraded state.
action: Wait for the resilver to complete.
 scrub: resilver in progress for 0h0m, 0.18% done, 3h28m to go
config:

 NAME          STATE     READ WRITE CKSUM
 rpool         ONLINE       0     0     0
 mirror        ONLINE       0     0     0
 c8t0d0s0      ONLINE       0     0     0
 c8t2d0s0      ONLINE       0     0     0  113M resilvered

errors: No known data errors
[/sourcecode]
Looks all nice, now let's do the grub stuff so that we can boot from both disks:
[sourcecode langauage="text"]
$ pfexec installgrub /boot/grub/stage1 /boot/grub/stage2 /dev/rdsk/c8t2d0s0
stage1 written to partition 0 sector 0 (abs 16065)
stage2 written to partition 0, 271 sectors starting at 50 (abs 16115)
[/sourcecode]
A last check on the status of our pool:
[sourcecode langauage="text"]
$ zpool status
 pool: rpool
 state: ONLINE
status: One or more devices is currently being resilvered.  The pool will
 continue to function, possibly in a degraded state.
action: Wait for the resilver to complete.
 scrub: resilver in progress for 0h2m, 4.89% done, 0h53m to go
config:

 NAME          STATE     READ WRITE CKSUM
 rpool         ONLINE       0     0     0
 mirror        ONLINE       0     0     0
 c8t0d0s0      ONLINE       0     0     0
 c8t2d0s0      ONLINE       0     0     0  2.95G resilvered

errors: No known data errors
[/sourcecode]
To my untrained OpenSolaris eye this looks all nice and shiny now.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>499</wp:post_id>
  <wp:post_date>2009-11-15 12:00:06</wp:post_date>
  <wp:post_date_gmt>2009-11-15 12:00:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>howto-mirror-the-zfs-rpool</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1270743928";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1270743938";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Easy Installation of VirtualBox on OpenSolaris (and maybe other stuff)</title>
  <link>http://serverhorror.wordpress.com/2009/11/24/easy-installation-of-virtualbox-on-opensolaris-and-maybe-other-stuff/</link>
  <pubDate>Tue, 24 Nov 2009 15:00:09 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=502</guid>
  <description/>
  <content:encoded><![CDATA[So I was looking how to install <a href="http://www.virtualbox.org/">VirtualBox</a> under <a href="http://www.opensolaris.org">OpenSolaris</a>. My first thought was a simple

[sourcecode langauage="text"]
pkg install virtualbox
[/sourcecode]


or similiar would be enough. It isn't :).

Looking around I found that the nice people from Sun provide an easy way to install VirtualBox. Note: I don't really care about the newest and best features to be available but I like it when things are easy to manage - <a href="http://serverhorror.wordpress.com/2009/11/23/running-opensolaris-now-for-better-or-worse-yay/">no really!</a> Here's how to get VirtualBox by simply using pkg with an official IPS repository.
<ol>
	<li>Go to <a href="https://pkg.sun.com">https://pkg.sun.com</a></li>
	<li>Login with your Sun Account (yes unfortunately you need one) - If you don't have an account register it</li>
	<li>You'll be presented with a "Certificate Requests" page, simply choose the OpenSolaris extras repository and request your certificate</li>
	<li>Follow the instructions (copy stuff to /var/pkg/ssl, pkg set-authority)</li>
	<li>pkg install virtualbox</li>
	<li>wait</li>
	<li>Be happy with a shiny new VirtualBox installation...</li>
</ol>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>502</wp:post_id>
  <wp:post_date>2009-11-24 15:00:09</wp:post_date>
  <wp:post_date_gmt>2009-11-24 15:00:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>easy-installation-of-virtualbox-on-opensolaris-and-maybe-other-stuff</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1270824424";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1270824435";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_01636b13d81cb237d801f2f814e2a19a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>30</wp:comment_id>
    <wp:comment_author><![CDATA[Alexandre Dumont]]></wp:comment_author>
    <wp:comment_author_email>adumont@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://adumont.serveblog.net/</wp:comment_author_url>
    <wp:comment_author_IP>80.25.30.18</wp:comment_author_IP>
    <wp:comment_date>2009-11-24 15:04:43</wp:comment_date>
    <wp:comment_date_gmt>2009-11-24 15:04:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You may be interested by this post: Start Virtualbox VMs at boot time with SMF http://adumont.serveblog.net/2009/09/01/virtualbox-smf-2/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>HowTo: Create an OpenSolaris Zone</title>
  <link>http://serverhorror.wordpress.com/2009/11/24/howto-create-an-opensolaris-zone/</link>
  <pubDate>Tue, 24 Nov 2009 15:50:48 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=509</guid>
  <description/>
  <content:encoded><![CDATA[[digg=http://digg.com/linux_unix/HowTo_Create_an_OpenSolaris_Zone_ServerHorror]

OK this is my first encounter with OpenSolaris Zones, so take all off the following with a grain of salt.

To make it (hopefully) easy to destroy the zone we create a ZFS Filesystem which will hold all of our zones:

[sourcecode langauage="bash"]
pfexec zfs create rpool/zones
pfexec umount /rpool/zones/
pfexec zfs set mountpoint=/zones rpool/zones
pfexec zfs mount rpool/zones
pfexec chmod 0700 /zones/ # Necessary so that a later &amp;quot;verify&amp;quot; doesn't complain...
[/sourcecode]


Great we have a file system to hold our zones, now let's configure a new zone:

[sourcecode langauage="text"]
pfexec zonecfg -z testzone
zonecfg:testzone&amp;gt; create
zonecfg:testzone&amp;gt; commit
zonepath cannot be empty.
Zone testzone failed to verify
testzone: Required resource missing
[sourcecode]
Uh Oh, we failed miserably. So let's set a path where the zone will be living:
[sourcecode langauage=&amp;quot;text&amp;quot;]
zonecfg:testzone&amp;gt; set zonepath=/zones/testzone
zonecfg:testzone&amp;gt; commit
zonecfg:testzone&amp;gt; verify
zonecfg:testzone&amp;gt; end
The end command only makes sense in the resource scope.
zonecfg:testzone&amp;gt;
[/sourcecode]


Looks all nice and fine, let's verify again:

[sourcecode langauage="text"]
$ pfexec zoneadm -z testzone verify
WARNING: /zones/testzone does not exist, so it could not be verified.
When 'zoneadm install' is run, 'install' will try to create
/zones/testzone, and 'verify' will be tried again,
but the 'verify' may fail if:
the parent directory of /zones/testzone is group- or other-writable
or
/zones/testzone overlaps with any other installed zones.
[/sourcecode]


Still some things to do.

[sourcecode langauage="text"]
$pfexec mkdir -p /zones/testzone
$ pfexec zoneadm -z testzone verify
/zones/testzone must not be group readable.
/zones/testzone must not be group executable.
/zones/testzone must not be world readable.
/zones/testzone must not be world executable.
could not verify zonepath /zones/testzone because of the above errors.
zoneadm: zone testzone failed to verify
$ pfexec chmod 0700 /zones/testzone
[/sourcecode]


This looks a lot better now let's install the zone. <strong>Note: We just configured the zone, we didn't yet install it</strong>. So let's start the installation:

[sourcecode langauage="text"]
$ pfexec zoneadm -z testzone  install
A ZFS file system has been created for this zone.
 Publisher: Using opensolaris.org (http://pkg.opensolaris.org/release/).
 Image: Preparing at /zones/testzone/root.
 Cache: Using /var/pkg/download.
Sanity Check: Looking for 'entire' incorporation.
 Installing: Core System (output follows)
DOWNLOAD                                    PKGS       FILES     XFER (MB)
Completed                                  20/20   3021/3021   42.55/42.55

PHASE                                        ACTIONS
Install Phase                              5747/5747
 Installing: Additional Packages (output follows)
DOWNLOAD                                    PKGS       FILES     XFER (MB)
Completed                                  37/37   5598/5598   32.52/32.52

PHASE                                        ACTIONS
Install Phase                              7329/7329

 Note: Man pages can be obtained by installing SUNWman
 Postinstall: Copying SMF seed repository ... done.
 Postinstall: Applying workarounds.
 Done: Installation completed in 2879.333 seconds.

 Next Steps: Boot the zone, then log into the zone console
 (zlogin -C) to complete the configuration process
[/sourcecode]


Looks nice. Even some more instructions. So let's boot the zone:

[sourcecode langauage="text"]
$ pfexec zoneadm -z testzone  boot
[/sourcecode]

All nice and fine, let's try to use the zone (You can escape from this by using "~." - that's a tilde and a dot - just hit "ENTER~."):

[sourcecode langauage="text"]
$ pfexec zlogin -C testzone
[Connected to zone 'testzone' console]
You did not enter a selection.
What type of terminal are you using?
 1) ANSI Standard CRT
2) DEC VT100
3) PC Console
4) Sun Command Tool
5) Sun Workstation
6) X Terminal Emulator (xterms)
7) Other
Type the number of your choice and press Return: 6

Creating new rsa public/private host key pair
Creating new dsa public/private host key pair
[/sourcecode]


Shock! There's some curses (or whatever OpenSolaris uses) interface popping up! It will ask about hostname, time zone and root password. Enter the gritty details and try ESC-2 if it doesn't continue with F2 (I chose "X Terminal Emulator (xterms)" - seems to be a bad choice).

[sourcecode langauage="text"]
Configuring network interface addresses:.
System identification is completed.

testzone.local console login: root
Password:
Nov 24 07:40:41 testzone.local login: ROOT LOGIN /dev/console
Sun Microsystems Inc.   SunOS 5.11      snv_111b        November 2008
root@testzone.local:~# uptime
 7:40am  up 5 min(s),  1 user,  load average: 0.17, 0.18, 0.18
root@testzone.local:~# ifconfig -a
lo0:1: flags=2001000849&amp;lt;UP,LOOPBACK,RUNNING,MULTICAST,IPv4,VIRTUAL&amp;gt; mtu 8232 index 1
 inet 127.0.0.1 netmask ff000000
lo0:1: flags=2002000849&amp;lt;UP,LOOPBACK,RUNNING,MULTICAST,IPv6,VIRTUAL&amp;gt; mtu 8252 index 1
 inet6 ::1/128
root@testzone.local:~# netstat -f tcp -an
tcp: unknown address family.
root@testzone.local:~# netstat -f inet -an

UDP: IPv4
 Local Address        Remote Address      State
-------------------- -------------------- ----------
 *.111                               Idle
 *.*                                 Unbound
 *.64049                             Idle
 *.111                               Idle
 *.*                                 Unbound
 *.38336                             Idle

TCP: IPv4
 Local Address        Remote Address    Swind Send-Q Rwind Recv-Q    State
-------------------- -------------------- ----- ------ ----- ------ -----------
 *.111                *.*                0      0 49152      0 LISTEN
 *.*                  *.*                0      0 49152      0 IDLE
 *.111                *.*                0      0 49152      0 LISTEN
 *.*                  *.*                0      0 49152      0 IDLE
 *.22                 *.*                0      0 49152      0 LISTEN
root@testzone.local:~# pkg search telnet
pkg: Some servers failed to respond appropriately:
 http://pkg.opensolaris.org/release/: node name or service name not known
[/sourcecode]


Again to escape from the zlogin stuff hit: "ENTER~." - that's ENTER, tide, dot.

Very nice so far. We have uptime, a hostname and an IP Address, well kind of :). Stay tuned for when I try to get network connectivity, which will hopefully be in the not too distant future.

A few minor notes on other tools that could be usefull:

Installing took quite a while on my system, since I could do some work in parallel I didn't investigate. But I found the following command nice to see the status:

[sourcecode langauage="text"]
$ zoneadm -z testzone list -v
 ID NAME             STATUS     PATH                           BRAND    IP
 - testzone         incomplete /zones/testzone                ipkg     shared
[/sourcecode]


So let's set up a nice terminal that watches the STATUS of our zone (the incomplete will go away as soon as the installation is finished). Of course we could watch the original terminal simply returning, but that would be kind of boring - wouldn't it?

[sourcecode langauage="text"]
$ while true; do clear;zoneadm -z testzone list -v; zoneadm list -iv;sleep .8; done
[/sourcecode]


Also the state of the zone after booting it:

[sourcecode langauage="text"]
$ zoneadm -z testzone list -v
ID NAME             STATUS     PATH                           BRAND    IP
1 testzone         running    /zones/testzone                ipkg     shared
[/sourcecode]


Shutting the zone down cleanly:

[sourcecode langauage="text"]
$ pfexec zlogin testzone shutdown # from the outside
# shutdown -y -i 0 # from inside the zone
[/sourcecode]


Then looks like this:

[sourcecode langauage="text"]
$ zoneadm -z testzone list -v
ID NAME             STATUS     PATH                           BRAND    IP
- testzone         installed  /zones/testzone                ipkg     shared
[/sourcecode]


Happy working with your zone.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>509</wp:post_id>
  <wp:post_date>2009-11-24 15:50:48</wp:post_date>
  <wp:post_date_gmt>2009-11-24 15:50:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>howto-create-an-opensolaris-zone</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1270824422";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1295290319";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>HowTo: OpenSolaris with Nagios (The contrib pkg repo)</title>
  <link>http://serverhorror.wordpress.com/2009/11/26/howto-opensolaris-with-nagios-the-contrib-pkg-repo/</link>
  <pubDate>Thu, 26 Nov 2009 15:00:10 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=531</guid>
  <description/>
  <content:encoded><![CDATA[I wanted to get Nagios running on OpenSolaris, honoring the pkg System I tried:

[sourcecode langauage="text"]

pkg search nagios

[/sourcecode]

No dice, but I hadn't added the contrib repo yet and didn't know about it up until that point :)

Just add
<ul>
	<li><a href="http://pkg.opensolaris.org/contrib">http://pkg.opensolaris.org/contrib</a></li>
</ul>
as a pkg source and then install Nagios. Very nice!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>531</wp:post_id>
  <wp:post_date>2009-11-26 15:00:10</wp:post_date>
  <wp:post_date_gmt>2009-11-26 15:00:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>howto-opensolaris-with-nagios-the-contrib-pkg-repo</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1295290318";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1275723779";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_15dbb68ab1388bb4cebb7a88403e2ed7</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>31</wp:comment_id>
    <wp:comment_author><![CDATA[Tweets that mention HowTo: OpenSolaris with Nagios (The contrib pkg repo) « Server Horror -- Topsy.com]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://topsy.com/tb/bit.ly/4NXQSJ</wp:comment_author_url>
    <wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
    <wp:comment_date>2009-11-26 15:38:52</wp:comment_date>
    <wp:comment_date_gmt>2009-11-26 15:38:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Martin Marcher, Martin Marcher. Martin Marcher said: HowTo: OpenSolaris with Nagios (The contrib pkg repo): http://wp.me/pxxjT-8z [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Postfix – A Complete Failure!</title>
  <link>http://serverhorror.wordpress.com/2010/03/11/postfix-a-complete-failure/</link>
  <pubDate>Thu, 11 Mar 2010 18:44:53 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=570</guid>
  <description/>
  <content:encoded><![CDATA[Yes this is a rant.
<ul>
	<li>I used to like postfix</li>
	<li>Until now I never had the need to do deeper analysis of the postfix logs</li>
	<li>I always thought exim was way too complicated</li>
</ul>
2 of the 3 points above changed right now at this very moment. I still think exim is way to complicated but that's probably because I never had to care about configuring it. However we need to analyze the log data of email deliveries, receptions, failures and whatnot.

"<em>How hard can it be?</em>" - at least that was my first thought. <strong>It can be very hard.</strong>

Just compare:
<ul>
	<li>the <strong>documentation of postfix' log format</strong>: <a title="Re: Postfix log format: formal syntax defined?" href="http://readlist.com/lists/postfix.org/postfix-users/2/12192.html">here</a> and <a title="Re: Format of smtpd reject: log line" href="http://archives.neohapsis.com/archives/postfix/2004-05/1196.html">here</a></li>
	<li>the <strong>documentation of exim's log format</strong>: <a title="49. Log files" href="http://exim.org/exim-html-current/doc/html/spec_html/ch49.html">here</a></li>
</ul>
Postfix just died for me from this very moment....]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>570</wp:post_id>
  <wp:post_date>2010-03-11 18:44:53</wp:post_date>
  <wp:post_date_gmt>2010-03-11 18:44:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>postfix-a-complete-failure</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1275723777";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1275723778";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Microsoft did it right! (Making a case for DNS SRV records)</title>
  <link>http://serverhorror.wordpress.com/2010/03/31/microsoft-did-it-right-making-a-case-for-dns-srv-records/</link>
  <pubDate>Wed, 31 Mar 2010 19:35:10 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=581</guid>
  <description/>
  <content:encoded><![CDATA[Yes the people over at Microsoft do (quite?) some stuff <a href="http://technet.microsoft.com/en-us/library/cc961719.aspx">the correct way</a>. Among those things is the excessive usage of <a href="http://en.wikipedia.org/wiki/SRV_record">DNS SRV records</a>.

I'm saying this because I think  a some tools will benefit from the usage, namely:
<ul>
	<li>Firefox (that even benefits end users not only IT people) and</li>
	<li>Configuration Management Tools</li>
</ul>
Consider the following use cases:
<ul>
	<li>Mass hosting SSL enabled websites</li>
	<li>Discovering where get information or where to put it for automated tools</li>
	<li>Automagically discover where a login service is</li>
	<li>...</li>
</ul>
The tool that comes to my mind first is <a href="http://puppet.reductivelabs.com">puppet</a>. We use the tool quite extensively in our infrastructure and now deploying a new host is actually just the work of a few minutes. Thanks to my colleagues who invested vast amounts of time into setting up all the modules we need puppet will nearly automatically configure a host and even set up tests in Nagios to make sure service availability.

However the main "<em>problem</em>" remaining (although solved by using a packages tailored to our needs) is the conventions a default puppet installation makes. Namely it expects the master host to be reachable by DNS on a host named "<em>puppet</em>". That isn't consistent with the <a href="http://serverhorror.wordpress.com/2009/06/15/naming-schemas-that-work-or-not/">naming scheme we made up for our hosts</a>. So why not use a perfectly available standard to discover where the correct endpoint is (yes Microsoft keeps to a standard - at least in some way)?

Staying with the example of puppet I'd like to see that puppet tries to find the master node by doing a DNS query that asks for the <tt>_x-puppet._tcp.example.com</tt> SRV record. So in accordance to our naming schema we could simply answer with <tt>its-devl-puppet01.example.com</tt> or any other suitable host.

So what about the rest of the above examples?

Consider SSL mass hosting with a single IP and say you give each VHost another port starting at 8441.

[sourcecode langauage="text"]
_https._tcp.example.com. 3600 IN SRV 0 10 8441 www.example.com.
_https._tcp.example.net. 3600 IN SRV 0 10 8442 www.example.net.
_https._tcp.example.org. 3600 IN SRV 0 10 8443 www.example.org.
[/sourcecode]


Granted with <a href="http://en.wikipedia.org/wiki/Server_Name_Indication">Server Name Indication</a> that problem is already solved, but I know  a few setups that for certain reasons won't be able to upgrade to packages that are able to use that technique. And personally I think that this approach is nicer especially since it solves this problem for every service. Take Thunderbird 3, it <em>tries autodiscovery</em> but quite often fails. If there was a <tt>_pop3._tcp.example.com</tt> SRV entry it would just work.

Also granted, there are quite a few protocols that already benefit from this, Kerberos clients, should do, (or rather "<a href="http://www.rfc-editor.org/rfc/rfc4120.txt">RFC4120</a> compliant clients" should do) autodiscovery in the way I described it.

So actually this is a plea to the developers out there. If you create services that expect some endpoint reachable over TCP or UDP don't just juse a "This is the default hostname convention". Nothing wrong with that as a fallback, but please (please, please) also allow us SysAdmins who have to deal with compliance rules to use existing ways to specify where to connect to that automagically work, and don't have to edit a file on every box or instance we have to take care of.

Especially for cases like configuration management, once tested we like to roll stuff out on quite a few boxes, and to keep maintenance low we also love it if we can use the default upstream sources (be it from the favorite distribution or the original upstream). And that is the case I'm making here. We have to be compliant with some rules and probably have (or have to) access more boxes than a single developer, so we may encounter cases you haven't thought of.

We are happy to send you accurate bug reports but please listen to us sometimes.

Enough begging for today...]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>581</wp:post_id>
  <wp:post_date>2010-03-31 19:35:10</wp:post_date>
  <wp:post_date_gmt>2010-03-31 19:35:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>microsoft-did-it-right-making-a-case-for-dns-srv-records</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1275723776";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1295290317";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Microsoft did it right! (Making a case for DNS SRV records): http://wp.me/pxxjT-9n]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>45</wp:comment_id>
    <wp:comment_author><![CDATA[serverhorror]]></wp:comment_author>
    <wp:comment_author_email>martin@marcher.name</wp:comment_author_email>
    <wp:comment_author_url>http://serverhorror.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>78.142.172.145</wp:comment_author_IP>
    <wp:comment_date>2010-04-01 11:36:20</wp:comment_date>
    <wp:comment_date_gmt>2010-04-01 11:36:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Just learnt from the autogenerated links that I'm not the only one who'd really like to see more SRV record usage: http://blesseddlo.wordpress.com/2010/03/26/dns-srv-records/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5284979</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>70</wp:comment_id>
    <wp:comment_author><![CDATA[sts]]></wp:comment_author>
    <wp:comment_author_email>sts@ono.at</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>78.142.182.218</wp:comment_author_IP>
    <wp:comment_date>2010-04-24 14:00:35</wp:comment_date>
    <wp:comment_date_gmt>2010-04-24 14:00:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice article. I especially like the idea of adding support for SRV records to puppet. Did you already file a feature request?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>74</wp:comment_id>
    <wp:comment_author><![CDATA[serverhorror]]></wp:comment_author>
    <wp:comment_author_email>martin+serverhorror@marcher.name</wp:comment_author_email>
    <wp:comment_author_url>http://serverhorror.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>80.121.45.161</wp:comment_author_IP>
    <wp:comment_date>2010-04-25 18:14:08</wp:comment_date>
    <wp:comment_date_gmt>2010-04-25 18:14:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I hadn't but did as of *now*: http://projects.puppetlabs.com/issues/3669]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>70</wp:comment_parent>
    <wp:comment_user_id>5284979</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Technorati Fail</title>
  <link>http://serverhorror.wordpress.com/2010/04/02/technorati-fail-a4et8rmv5f4d/</link>
  <pubDate>Fri, 02 Apr 2010 13:38:58 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=610</guid>
  <description/>
  <content:encoded><![CDATA[So I'm trying to claim this blog on technorati, this is about the 50st try to do it:
<ul>
	<li>http://technorati.com/account/claim/2513581/</li>
	<li>A4ET8RMV5F4D</li>
	<li><a href="http://technorati.com/account/claim/2513581/">Claim It!</a></li>
	<li>Just Freaking do it!</li>
	<li>And in the comments<!-- A4ET8RMV5F4D --> too....</li>
	<li><a title="Technorati Profile" rel="me" href="http://technorati.com/claim/A4ET8RMV5F4D">Technorati Profile</a></li>
</ul>
﻿
[sourcecode langauage="bash"]
$ curl --silent http://blog.serverhorror.com/feed/ |grep -c -i A4ET8RMV5F4D
23
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>610</wp:post_id>
  <wp:post_date>2010-04-02 13:38:58</wp:post_date>
  <wp:post_date_gmt>2010-04-02 13:38:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>technorati-fail-a4et8rmv5f4d</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[:]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1275723776";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1275723776";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Openx has PostgreSQL support – NOT!</title>
  <link>http://serverhorror.wordpress.com/2010/04/15/openx-has-postgresql-support-not/</link>
  <pubDate>Thu, 15 Apr 2010 13:31:07 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=693</guid>
  <description/>
  <content:encoded><![CDATA[This is what you get from <a href="http://www.openx.org/">OpenX</a> if you want to use a <a href="http://www.postgresql.org">PostgreSQL</a> database (which is supported!):
[sourcecode language="text"]
PEAR Error 

MDB2 Error: unknown error 

_doQuery: [Error message: Could not execute statement]
[Last executed query: SELECT m.clientid AS advertiser_id,d.campaignid AS placement_id,s.ad_id AS ad_id,SUM(s.impressions) AS sum_views,SUM(s.clicks) AS sum_clicks,SUM(s.revenue) AS sum_revenue, m.campaignid || IF( LENGTH(market_advertiser_id) &gt; 0, ('_' || market_advertiser_id || '_'),  '_') || ad_width || ' x ' || ad_height  AS ad_id,( m.campaignid || IF( LENGTH(market_advertiser_id) &gt; 0, ('_' || market_advertiser_id || '_'),  '_') || ad_width || ' x ' || ad_height ) AS pkey FROM &quot;ext_market_stats&quot; AS s INNER JOIN &quot;banners&quot; AS d ON (d.bannerid=s.ad_id) INNER JOIN &quot;campaigns&quot; AS m ON (m.campaignid=d.campaignid) INNER JOIN &quot;clients&quot; AS a ON (a.clientid=m.clientid) WHERE a.type = 1 AND s.zone_id &lt;&gt; 0 AND s.date_time&gt;='2010-04-15 00:00:00' AND s.date_time&lt;='2010-04-15 23:59:59' GROUP BY advertiser_id,placement_id,pkey]
[Native message: ERROR:  column &quot;s.ad_id&quot; must appear in the GROUP BY clause or be used in an aggregate function]

PEAR Error

MDB2 Error: unknown error

_doQuery: [Error message: Could not execute statement]
[Last executed query: SELECT m.clientid AS advertiser_id,d.campaignid AS placement_id,s.ad_id AS ad_id,SUM(s.impressions) AS sum_views,SUM(s.clicks) AS sum_clicks,SUM(s.revenue) AS sum_revenue, m.campaignid || IF( LENGTH(market_advertiser_id) &gt; 0, ('_' || market_advertiser_id || '_'),  '_') || ad_width || ' x ' || ad_height  AS ad_id,( m.campaignid || IF( LENGTH(market_advertiser_id) &gt; 0, ('_' || market_advertiser_id || '_'),  '_') || ad_width || ' x ' || ad_height ) AS pkey FROM &quot;ext_market_stats&quot; AS s INNER JOIN &quot;banners&quot; AS d ON (d.bannerid=s.ad_id) INNER JOIN &quot;campaigns&quot; AS m ON (m.campaignid=d.campaignid) INNER JOIN &quot;clients&quot; AS a ON (a.clientid=m.clientid) WHERE s.zone_id = 0 AND a.type = 1 AND s.date_time&gt;='2010-04-15 00:00:00' AND s.date_time&lt;='2010-04-15 23:59:59' AND s.zone_id = 0 GROUP BY advertiser_id,placement_id,pkey]
[Native message: ERROR:  column &quot;s.ad_id&quot; must appear in the GROUP BY clause or be used in an aggregate function]

Fatal error: Unsupported operand types in .../www/admin/market/stats.php on line 164
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>693</wp:post_id>
  <wp:post_date>2010-04-15 13:31:07</wp:post_date>
  <wp:post_date_gmt>2010-04-15 13:31:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>openx-has-postgresql-support-not</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1275723775";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1295290316";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Child Pornography is great!</title>
  <link>http://serverhorror.wordpress.com/2010/04/27/child-pornography-is-great/</link>
  <pubDate>Tue, 27 Apr 2010 18:28:10 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=703</guid>
  <description/>
  <content:encoded><![CDATA[I'm not quite sure wether to cry or laugh about this:
<blockquote>”Child pornography is great,” the speaker at the podium declared enthusiastically. ”It is great because politicians understand child pornography. By playing that card, we can get them to act, and start blocking sites. And once they have done that, we can get them to start blocking file sharing sites”. [...] ”One day we will have a giant filter that we develop in close cooperation with IFPI and MPA. We continuously monitor the child porn on the net, to show the politicians that filtering works. Child porn is an issue they understand,” Johan Schlüter said with a grin, his whole being radiating pride and enthusiasm from the podium.</blockquote>
<ul>
	<li><a href="http://www.netzpolitik.org/2010/die-rechteindustrie-mag-kinderpornographie/">Source where I found this</a> - sorry people, the blog is mostly german..</li>
	<li><a href="http://christianengstrom.wordpress.com/2010/04/27/ifpis-child-porn-strategy/">Possibly original Source</a> - this is english</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>703</wp:post_id>
  <wp:post_date>2010-04-27 18:28:10</wp:post_date>
  <wp:post_date_gmt>2010-04-27 18:28:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>child-pornography-is-great</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1275723775";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1275723775";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Python, psycopg2, postgresql84 and Mac OS X Snow Leopard</title>
  <link>http://serverhorror.wordpress.com/2010/04/28/python-psycopg2-postgresql84-and-mac-os-x-snow-leopard/</link>
  <pubDate>Wed, 28 Apr 2010 19:57:53 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=710</guid>
  <description/>
  <content:encoded><![CDATA[<ul>
	<li>You do some coding in <a href="http://www.pyton.org">Python</a>?</li>
	<li>You do want to use an <a href="http://www.postgresql.org">advanced RDBMS</a>?</li>
	<li>You like <a href="http://www.apple.com/macosx/">Mac OS X</a>?</li>
</ul>
Look no further here's the simple solution to getting <a href="http://initd.org">psycopg2</a> to work without placing to much trash on your system.
[sourcecode language="shell"]
virtualenv --no-site-packages .
. bin/activate
easy_install  -U setuptools
easy_install pip
PATH=$PATH:/opt/local/lib/postgresql84/bin/ pip install psycopg2 sqlalchemy
#...lots of compile stuff...
[/sourcecode]
You are done. Go into your python shell and import the <a href="http://initd.org/psycopg/">psycopg2</a> module...
[sourcecode language="shell"]
$ python
Python 2.6.1 (r261:67515, Feb 11 2010, 00:51:29) 
[GCC 4.2.1 (Apple Inc. build 5646)] on darwin
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&gt;&gt;&gt; import psycopg2
&gt;&gt;&gt; psycopg2.__version__
'2.2.0 (dt dec release-candidate-1 ext pq3)'
&gt;&gt;&gt; 
[/sourcecode]

 The solution here is this: [sourcecode language="shell"]
PATH=$PATH:/opt/local/lib/postgresql84/bin/ pip install psycopg2 sqlalchemy
[/sourcecode]

The path shown here is if you installed postgresql84-server from <a href="http://macports.org">macports</a>. It might differ if you used the <a href="http://www.postgresql.org/download/macosx">native installer for Mac OS X</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>710</wp:post_id>
  <wp:post_date>2010-04-28 19:57:53</wp:post_date>
  <wp:post_date_gmt>2010-04-28 19:57:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-psycopg2-postgresql84-and-mac-os-x-snow-leopard</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Python, psycopg2, postgresql84 and Mac OS X Snow Leopard: http://wp.me/pxxjT-bs]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1275723774";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1275723775";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>If only I had the time...</title>
  <link>http://serverhorror.wordpress.com/2010/06/01/if-only-i-had-the-time/</link>
  <pubDate>Tue, 01 Jun 2010 14:00:43 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=773</guid>
  <description/>
  <content:encoded><![CDATA[<blockquote>﻿Many people with jobs have a fantasy about all the amazing things they would do if they didn’t need to work. In reality, if they had the drive and commitment to do actually do those things, they wouldn’t let a job get in the way.</blockquote>
<address>-- Paul Buchheit of Gmail fame on <a href="http://paulbuchheit.blogspot.com/2010/05/what-to-do-with-your-millions.html">What to do with your millions</a></address>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>773</wp:post_id>
  <wp:post_date>2010-06-01 14:00:43</wp:post_date>
  <wp:post_date_gmt>2010-06-01 14:00:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>if-only-i-had-the-time</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1295290315";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>delicious</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:5:"count";s:1:"0";s:9:"post_tags";s:0:"";s:4:"time";s:10:"1275723774";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[If only I had the time...: http://wp.me/pxxjT-ct]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Getting HP Smart Array information</title>
  <link>http://serverhorror.wordpress.com/2010/06/06/getting-hp-smart-array-information/</link>
  <pubDate>Sun, 06 Jun 2010 08:05:39 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=791</guid>
  <description/>
  <content:encoded><![CDATA[Just a small note for myself on our hardware.

I tend to forget this everytime I indeed need it. Maybe writing all that down helps

[sourcecode language="shell"]
hpacucli ctrl all show detail
hpacucli ctrl slot=0 show config
hpacucli ctrl slot=0 array all show
hpacucli ctrl slot=0 array A show
hpacucli ctrl slot=0 physicaldrive all show
hpacucli ctrl slot=0 physicaldrive 1I:1:1 show
hpacucli ctrl slot=0 logicaldrive all show
hpacucli ctrl slot=0 logicaldrive 1 show
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>791</wp:post_id>
  <wp:post_date>2010-06-06 08:05:39</wp:post_date>
  <wp:post_date_gmt>2010-06-06 08:05:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>getting-hp-smart-array-information</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Getting HP Smart Array information:]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1295290337";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Oh My! Somebody actually uses my code</title>
  <link>http://serverhorror.wordpress.com/2010/06/29/oh-my-somebody-actually-uses-my-code/</link>
  <pubDate>Tue, 29 Jun 2010 08:08:14 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=797</guid>
  <description/>
  <content:encoded><![CDATA[The nice people over at wordnik actually used <a href="http://github.com/serverhorror/python-wordnik">my code</a> for <a href="http://blog.wordnik.com/ruby-and-python-libraries-rails-and-django-demo-apps">their example libraries</a>. A nice thing to hear, never occured to me that my random scripting I put on <a href="http://github.com">GitHub</a> is actually really useful to other people. I guess that is what Open Source is actually about :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>797</wp:post_id>
  <wp:post_date>2010-06-29 08:08:14</wp:post_date>
  <wp:post_date_gmt>2010-06-29 08:08:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>oh-my-somebody-actually-uses-my-code</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1298811298";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Python and "Interfaces" (Abstract Base Classes)</title>
  <link>http://serverhorror.wordpress.com/2010/08/18/python-and-interfaces-abstract-base-classes/</link>
  <pubDate>Wed, 18 Aug 2010 08:09:06 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=799</guid>
  <description/>
  <content:encoded><![CDATA[[sourcecode language="python"]
import sys
import os

from abc import ABCMeta
from abc import abstractmethod

class MetaClass:
    __metaclass__ = ABCMeta

    @abstractmethod
    def needs_implementation(self):
        pass

class ImplementationClassOK(MetaClass):
    def random_method(self):
        pass
    def needs_implementation(self):
        pass

class ImplementationClassFail(MetaClass):
    def random_method(self):
        pass

if __name__ == u'__main__':

    print u'Type OK: ', type(ImplementationClassOK)
    ok = ImplementationClassOK()
    print u'Type Instance OK: ', type(ok)
    print ok

    print type(ImplementationClassFail)

    try:
        print u'Type FAIL: ', type(ImplementationClassFail)
        fail = ImplementationClassFail()
        print u'Type Instance FAIL: ', type(fail)
        print fail
    except (TypeError, ) as error:
        print error
        raise
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>799</wp:post_id>
  <wp:post_date>2010-08-18 08:09:06</wp:post_date>
  <wp:post_date_gmt>2010-08-18 08:09:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-and-interfaces-abstract-base-classes</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>What's the difference between `pass` and `None`?</title>
  <link>http://serverhorror.wordpress.com/2010/08/19/whats-the-difference-between-pass-and-none/</link>
  <pubDate>Thu, 19 Aug 2010 08:11:13 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=801</guid>
  <description/>
  <content:encoded><![CDATA[[sourcecode language="python"]
class N(object):
    None

class P(object):
    pass

[/sourcecode]
Could someone please explain that to me?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>801</wp:post_id>
  <wp:post_date>2010-08-19 08:11:13</wp:post_date>
  <wp:post_date_gmt>2010-08-19 08:11:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>whats-the-difference-between-pass-and-none</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Yes, it's PHP!</title>
  <link>http://serverhorror.wordpress.com/2010/09/10/yes-its-php/</link>
  <pubDate>Fri, 10 Sep 2010 08:13:39 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=803</guid>
  <description/>
  <content:encoded><![CDATA[<img src="http://serverhorror.files.wordpress.com/2010/09/php_fail.png" alt="" title="PHP_FAIL" width="490" height="465" class="aligncenter size-full wp-image-804" />]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>803</wp:post_id>
  <wp:post_date>2010-09-10 08:13:39</wp:post_date>
  <wp:post_date_gmt>2010-09-10 08:13:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>yes-its-php</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Yes, it's PHP!: http://wp.me/pxxjT-cX]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>What's system administration like at Google?</title>
  <link>http://serverhorror.wordpress.com/2010/09/07/whats-system-administration-like-at-google/</link>
  <pubDate>Tue, 07 Sep 2010 08:15:23 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=808</guid>
  <description/>
  <content:encoded><![CDATA[<div class="document">
<div id="what-s-system-administration-like-at-google" class="section">


<blockquote cite="http://everythingsysadmin.com/2010/09/whats-system-administration-li.html" lang="en"><h1>What's system administration like at Google?</h1>
by <cite><a href="http://everythingsysadmin.com/2010/09/sysadmin-at-google.html">Tom Limoncelli</a></cite>

People often write to me for advice about submitting a resume to Google. They
always want to know what system administration is like here. I tend to write
something original each time, but I always say the same thing. Therefore, I'm
going to post it here and refer people to this post in the future.

What is system administration like at Google?

System administration at Google is quite different than at most companies.
Since we do all our computing on massive clusters we don't touch much hardware.
It is set up a rack at a time for us in data centers around the world. We don't
spend a lot of time setting up typical services like LDAP, Kerberos, and load
balancers because we have those things set up already, automated, and scaled.

So what /do/ we do? We keep the various web sites of google running, or keep
the systems that they rely on running. We have small teams for each product.
Members usually have 1 week of "on call" (pager) duty out of 6, and the other 5
weeks are spent making improvements to make the on call portion more optimized,
automated, and trouble-free. (Some groups are 1 out of 8, or 3.5 days out of
every 12, or whatever... some have zillions of pages per day, others 1 or two
per week).

When you aren't on duty, you are optimizing the system for better operational
efficiency. Suppose the last time you were oncall you noticed a certain problem
was happening a lot. You might take on a project to monitor all aspects of it,
find the problem, and either fix it or work with the developers to fix it. We
have large, complicated systems that requires deep Unix knowledge to maintain
properly.

A senior person takes on projects that have even larger impact. So, maybe you
notice that not only does your product have that particular problem, but other
projects do too. So you invent a new system that fixes the problem globally.
For example, rolling out software to thousands of machines is difficult. After
each upgrade the machine must be tested to make sure the software is working,
and begin rolling back the change if there are failures. We haven't done that
kind of thing manually in years, but maybe the current system can't tell the
difference between a bug that means you should roll-back all systems, or a
hardware failure that means one particular machine is down. You might refactor
the system so that the failure test is a plug-in module and now everyone can
write their own plug-ins.

This is why we call ourselves "Site Reliability Engineers" instead of of
Sysadmins. As a SRE, we are constantly optimizing the system. Some of us are
more focused on operational aspects (sysadmin skills) and others are focused on
writing tools (software engineering focused). However, we all do some kind of
software development, scripting, and so on. At our scale it isn't a question of
whether or not to automate, but how to automate.

We also have more traditional system administrators in our CorpEng group. They
are focused on internal systems (the printing system, deploying the newest Mac
OS release, etc.). This is also the group that employs our internal helpdesk.
Supporting 20k employees is a big job. Most companies don't have 10,000+ linux
desktops and 15,000+ Mac laptops, plus countless other systems.

A few more great things about working here:
<ul class="simple">
	<li>The relationship with the developers is collaborative.</li>
	<li>You can stay technical while going up the career ladder without having to move into management.</li>
</ul>
<ul class="simple">
	<li>My co-workers are so smart, I usually feel pretty stupid.</li>
	<li>The challenges are so huge, I think we're 2-10 years ahead of the industry. Working here is like having a crystal ball that lets you see the future of our industry</li>
</ul>
</blockquote>

</div>
</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>808</wp:post_id>
  <wp:post_date>2010-09-07 08:15:23</wp:post_date>
  <wp:post_date_gmt>2010-09-07 08:15:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>whats-system-administration-like-at-google</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[What's system administration like at Google?:]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1301480993";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Subversion (No Excuses!)</title>
  <link>http://serverhorror.wordpress.com/2010/09/23/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-subversion-no-excuses/</link>
  <pubDate>Thu, 23 Sep 2010 21:40:45 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=835</guid>
  <description/>
  <content:encoded><![CDATA[I was going to write about how to use subversion. Wile preparing the post I wanted to show some nice graphics. Tried to use the official subversion repo as a source. Failed miserably (in terms of getting bored because it's so damn slow and various tools choked on the repository) so here's the real information:

<strong>Use <a href="http://git-scm.com/">Git</a> (or at least <a href="http://mercurial.selenic.com/">some</a> <a href="http://bazaar.canonical.com/en/">other</a> DVCS).</strong>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>835</wp:post_id>
  <wp:post_date>2010-09-23 21:40:45</wp:post_date>
  <wp:post_date_gmt>2010-09-23 21:40:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-subversion-no-excuses</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="cvs"><![CDATA[cvs]]></category>
  <category domain="post_tag" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="scm"><![CDATA[scm]]></category>
  <category domain="post_tag" nicename="subversion"><![CDATA[subversion]]></category>
  <category domain="post_tag" nicename="svn"><![CDATA[svn]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="vcs"><![CDATA[vcs]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1317831893";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Peter Norvig on Python</title>
  <link>http://serverhorror.wordpress.com/2010/10/19/peter-norvig-on-python/</link>
  <pubDate>Tue, 19 Oct 2010 12:41:19 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=883</guid>
  <description/>
  <content:encoded><![CDATA[<blockquote cite="Peter Norwig">I came to Python not because I thought it was a better/acceptable/pragmatic Lisp, but because it was better pseudocode. Several students claimed that they had a hard time mapping from the pseudocode in my AI textbook to the Lisp code that Russell and I had online. So I looked for the language that was most like our pseudocode, and found that Python was the best match. Then I had to teach myself enough Python to implement the examples from the textbook. I found that Python was very nice for certain types of small problems, and had the libraries I needed to integrate with lots of other stuff, at Google and elsewhere on the net.
I think Lisp still has an edge for larger projects and for applications where the speed of the compiled code is important. But Python has the edge (with a large number of students) when the main goal is communication, not programming per se.
In terms of programming-in-the-large, at Google and elsewhere, I think that language choice is not as important as all the other choices: if you have the right overall architecture, the right team of programmers, the right development process that allows for rapid development with continuous improvement, then many languages will work for you; if you don't have those things you're in trouble regardless of your language choice.</blockquote>

Author: <a href="http://norvig.com">Peter Norvig</a> via: <a href="http://third-bit.com/blog/archives/4052.html">http://third-bit.com/blog/archives/4052.html</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>883</wp:post_id>
  <wp:post_date>2010-10-19 12:41:19</wp:post_date>
  <wp:post_date_gmt>2010-10-19 12:41:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>peter-norvig-on-python</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="linkedin"><![CDATA[linkedin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1319850179";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a43a8d96c959eb0b855b5fa2aafbe7f5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Flash Free</title>
  <link>http://serverhorror.wordpress.com/2010/11/07/flash-free/</link>
  <pubDate>Sun, 07 Nov 2010 21:01:01 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=895</guid>
  <description/>
  <content:encoded><![CDATA[I have no idea whether this is a good idea or not. But as of this moment I'm Flash Free

[sourcecode]
cd /Library/Internet\ Plug-Ins/
rm -rf Flash\ Player.plugin/ NP-PPC-Dir-Shockwave flashplayer.xpt
[/sourcecode]
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>895</wp:post_id>
  <wp:post_date>2010-11-07 21:01:01</wp:post_date>
  <wp:post_date_gmt>2010-11-07 21:01:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>flash-free</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="flash"><![CDATA[flash]]></category>
  <category domain="post_tag" nicename="linkedin"><![CDATA[linkedin]]></category>
  <category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
  <category domain="post_tag" nicename="safari"><![CDATA[safari]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Flash Free #flash #adobe #osx #safari #mac: http://wp.me/pxxjT-er]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1317909152";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>A portable way to find the number of CPUs in Python</title>
  <link>http://serverhorror.wordpress.com/2010/12/22/a-portable-way-to-find-the-number-of-cpus-in-python/</link>
  <pubDate>Wed, 22 Dec 2010 19:14:15 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=901</guid>
  <description/>
  <content:encoded><![CDATA[This works in Python to get the number of CPUs in a system:

[sourcecode language="python"]
import os
print os.sysconf('SC_NPROCESSORS_CONF')
print os.sysconf('SC_NPROCESSORS_ONLN') # if different that the above this should be used
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>901</wp:post_id>
  <wp:post_date>2010-12-22 19:14:15</wp:post_date>
  <wp:post_date_gmt>2010-12-22 19:14:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-portable-way-to-find-the-number-of-cpus-in-python</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1320179097";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Open PDF files in Safari with Preview instead of Adobe Reader</title>
  <link>http://serverhorror.wordpress.com/2011/01/14/open-pdf-files-in-safari-with-preview-instead-of-adobe-reader/</link>
  <pubDate>Fri, 14 Jan 2011 18:57:37 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=909</guid>
  <description/>
  <content:encoded><![CDATA[I recently installed Adobe Reader to have it available on my OS X (Snow Leopard) installation.

From that point on Safari insisted on opening PDF files in the browser with Adobe Reader instead of Preview.app.
<ol>
	<li>Changing the way PDF files are opened in Finder didn't help</li>
	<li>Scanning Safari Preferences didn't help</li>
	<li>Scanning Adobe Prefences revealed an option but I wasn't able to uncheck it. ("Preferences" -&gt; "Internet" -&gt; "Display PDF in browser using:" - in case you are searching</li>
</ol>
To "switch back" delete (or move) the file "/Library/Internet Plug-Ins/AdobePDFViewer.plugin". The resulting preferences from Adobe Reader are shown below. Also now you have Preview.app back in Safari when opening PDF files.

<a href="http://serverhorror.files.wordpress.com/2011/01/adobereaderprefs.png"><img class="aligncenter size-full wp-image-910" title="AdobeReaderPrefs" src="http://serverhorror.files.wordpress.com/2011/01/adobereaderprefs.png" alt="" width="640" height="430" /></a>To be able to switch around easily I recommend you simply move the file to a convenient location. If you need Safari to open PDF files with Adobe Reader again just move "AdobePDFViewer.plugin" back to "/Library/Internet Plug-Ins/" and restart Safari. The same approach should work if you move it to "~/Library/Internet Plug-Ins/" - though I haven't tested that and right now I am too lazy to do that...]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>909</wp:post_id>
  <wp:post_date>2011-01-14 18:57:37</wp:post_date>
  <wp:post_date_gmt>2011-01-14 18:57:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>open-pdf-files-in-safari-with-preview-instead-of-adobe-reader</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="adobe"><![CDATA[adobe]]></category>
  <category domain="post_tag" nicename="browser"><![CDATA[browser]]></category>
  <category domain="post_tag" nicename="os-x"><![CDATA[os x]]></category>
  <category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
  <category domain="post_tag" nicename="pdf"><![CDATA[pdf]]></category>
  <category domain="post_tag" nicename="preview"><![CDATA[preview]]></category>
  <category domain="post_tag" nicename="safari"><![CDATA[safari]]></category>
  <category domain="post_tag" nicename="snow-leopard"><![CDATA[snow leopard]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1317817400";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>twitter_cards_summary_img_size</wp:meta_key>
    <wp:meta_value><![CDATA[a:6:{i:0;i:804;i:1;i:541;i:2;i:3;i:3;s:24:"width="804" height="541"";s:4:"bits";i:8;s:4:"mime";s:9:"image/png";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>921</wp:comment_id>
    <wp:comment_author><![CDATA[Rod]]></wp:comment_author>
    <wp:comment_author_email>roderick@ntu.edu.sg</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>155.69.203.3</wp:comment_author_IP>
    <wp:comment_date>2012-06-21 06:49:39</wp:comment_date>
    <wp:comment_date_gmt>2012-06-21 06:49:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This happened to me when I updated adobe acrobat. Moving the plugin and restarting safari fixed the problem. Thanks!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340261380.6337";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340486654</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340486655.2556";s:7:"message";s:52:"martinmarcher changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"martinmarcher";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Dear Lexmark, you're doing it wrong!</title>
  <link>http://serverhorror.wordpress.com/2011/01/15/dear-lexmark-youre-doing-it-wrong/</link>
  <pubDate>Sat, 15 Jan 2011 20:24:32 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=915</guid>
  <description/>
  <content:encoded><![CDATA[Today I got myself a cheap printer.

It's a Lexmark INTERPRET s405. I was looking for the following things:
<ol>
	<li>Wireless Printing</li>
	<li>Wireless Scanning</li>
	<li>Optionally Wireless Fax</li>
	<li>Cheap</li>
</ol>
The thing was EUR 99,--. That's probably the lower end of multi-function devices - price wise. But I don't see a reason why I can't just enter the ESSID and password from my wireless LAN to set it up. Instead I had to use this:

<a href="http://serverhorror.files.wordpress.com/2011/01/wireless-installation-cable.jpg"><img class="aligncenter size-medium wp-image-916" title="Wireless Installation Cable" src="http://serverhorror.files.wordpress.com/2011/01/wireless-installation-cable.jpg?w=300" alt="" width="300" height="200" /></a>
<blockquote>Dear people from Lexmark!

Please, please, please, just let me enter my ESSID and Password directly at the printer. Wouldn't that be so much easier? Wouldn't that save you a ton of money in the long run? You wouldn't have to add an USB cable to every printer.

Best regards,

A Customer</blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>915</wp:post_id>
  <wp:post_date>2011-01-15 20:24:32</wp:post_date>
  <wp:post_date_gmt>2011-01-15 20:24:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dear-lexmark-youre-doing-it-wrong</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="cable"><![CDATA[#cable]]></category>
  <category domain="post_tag" nicename="fail"><![CDATA[#fail]]></category>
  <category domain="post_tag" nicename="lexmark"><![CDATA[#lexmark]]></category>
  <category domain="post_tag" nicename="usb"><![CDATA[#usb]]></category>
  <category domain="post_tag" nicename="wireless"><![CDATA[#wireless]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1320297479";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>About the FHS not being right...</title>
  <link>http://serverhorror.wordpress.com/2011/01/16/about-the-fhs-not-being-right/</link>
  <pubDate>Sun, 16 Jan 2011 11:39:14 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=922</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://utcc.utoronto.ca/~cks/">Chris Siebenmann</a> wrote about the <a href="http://utcc.utoronto.ca/~cks/space/blog/linux/FHSNotAlwaysRight">FHS not being right</a>. Well I can't say I disagree completely but the points he makes aren't quite the points I dislike about the FHS.
<blockquote>Dear Chris,

Err...have you read about <tt>/srv</tt> (<a title="/srv : Data for services provided by this system" href="http://www.pathname.com/fhs/pub/fhs-2.3.html#SRVDATAFORSERVICESPROVIDEDBYSYSTEM">http://www.pathname.com/fhs/pub/fhs-2.3.html#SRVDATAFORSERVICESPROVIDEDBYSYSTEM</a>)?
Seems to me that it's not <tt>/var</tt> you should target with your comments but rather <tt>/srv</tt>. Then again I haven't seen any package management that does soemthing to <tt>/srv</tt> - which in my opinion whould make the critic pointless (correct me if I'm wrong). Actually <em>I never even considered putting site-local data into the <tt>/var</tt> hierarchy</em> exactly because I consider it to be the space where my distribution does it's things.

On a side note I just wish that there was a site alternative for <tt>/etc</tt>.</blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>922</wp:post_id>
  <wp:post_date>2011-01-16 11:39:14</wp:post_date>
  <wp:post_date_gmt>2011-01-16 11:39:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>about-the-fhs-not-being-right</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="fhs"><![CDATA[fhs]]></category>
  <category domain="post_tag" nicename="filesystem"><![CDATA[filesystem]]></category>
  <category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
  <category domain="post_tag" nicename="srv"><![CDATA[srv]]></category>
  <category domain="post_tag" nicename="standard"><![CDATA[standard]]></category>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="var"><![CDATA[var]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1319733773";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Giving your password away...</title>
  <link>http://serverhorror.wordpress.com/2011/01/17/giving-your-password-away/</link>
  <pubDate>Mon, 17 Jan 2011 15:36:05 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=929</guid>
  <description/>
  <content:encoded><![CDATA[Thank you dear <a href="http://www.upc.at">UPC</a>...
<blockquote><strong>Me</strong>: I need $INFORMATION for my account, my customer id is....

<strong>Customer Service</strong>: Ah...yeah...well. To give you that information <em>you need to tell me your customer password</em>.

<strong>Me</strong>: <em>Errr what? How am I sure you aren't misusing it after I give it to you?</em>

<strong>Customer Service</strong>: Oh, don't worry. I can't actually see the password. I have a<em> programm that only verifies wether the password you tell me is the same that is stored in our system. So I never actually know the password.</em>

<strong>Me</strong>: *facepalm*....you need my password!?

<strong>Customer Service</strong>: Yes, as I told you I will never know your password I can only compare wether it's correct or not.

<strong>Me</strong>: If I tell you the password you know it right?

<strong>Customer Service</strong>: well, no...yes...To give you the information you requested I need your customer password!

<strong>Me</strong>: *sigh* ....</blockquote>
I finally gave up. I changed my password in the web interface, told the guy this password, and then changed it again. <strong>This is so wrong on so many levels.</strong>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>929</wp:post_id>
  <wp:post_date>2011-01-17 15:36:05</wp:post_date>
  <wp:post_date_gmt>2011-01-17 15:36:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>giving-your-password-away</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="fail"><![CDATA[#fail]]></category>
  <category domain="post_tag" nicename="security"><![CDATA[security]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="upc"><![CDATA[upc]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1324727527";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:7:"5284979";s:7:"blog_id";s:7:"7992909";s:9:"mod_stamp";s:19:"2011-01-17 16:25:21";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Migrating RAID Levels in Linux with mdadm</title>
  <link>http://serverhorror.wordpress.com/2011/01/27/migrating-raid-levels-in-linux-with-mdadm/</link>
  <pubDate>Thu, 27 Jan 2011 15:20:27 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1003</guid>
  <description/>
  <content:encoded><![CDATA[This is a quick note. If you try the stuff here I suggest you do it in a virtualised guest machine. This does not resemble the whole truth you can use <tt>--backup-file</tt> to minimize the number of hot spares required...

Clear out any RAID information on the disks involved

[sourcecode]
$ sudo mdadm --zero-superblock /dev/sd[bcdefghijk]
[/sourcecode]

Keep Status overview running while we work on this:

[sourcecode]
$ while true;
    do
        clear
        cat /proc/mdstat
        /bin/echo -e '\nmdadm --detail'
        sudo mdadm --detail /dev/md/md0
        sleep 2
    done
[/sourcecode]

Create a RAID1 with a missing disk:

[sourcecode]
$ sudo mdadm --create md0 --raid-devices 2 --level 1 /dev/sdb missing
[/sourcecode]

Add a hot spare(s), mdadm will start a recovery process so that the degraded
array will gain a clean state:

[sourcecode]
$ sudo mdadm --manage /dev/md/md0 --add /dev/sdc
[/sourcecode]

Add a hot spare(s):

[sourcecode]
$ sudo mdadm --manage /dev/md/md0 --add /dev/sdd
[/sourcecode]

Check the hot spare is working and make sdc available again:

[sourcecode]
$ sudo mdadm --manage /dev/md/md0 --fail /dev/sdc --remove /dev/sdc --add /dev/sdc
[/sourcecode]

Convert into a RAID5 array:

[sourcecode]
$ sudo mdadm --grow /dev/md/md0 --level 5
[/sourcecode]

Add a disk to the array, to get a clean state for the array:

[sourcecode]
$ sudo mdadm --grow /dev/md/md0 --raid-devices 3
[/sourcecode]

Add a hot spare(s):

[sourcecode]
$ sudo mdadm --manage /dev/md/md0 --add /dev/sd[ef]
[/sourcecode]

Grow the RAID5 to have more space available:

[sourcecode]
$ sudo mdadm --grow /dev/md/md0 --raid-devices 4
[/sourcecode]

Add a second hot spare so that we can migrate from RAID5 to RAID6 (RAID5 to RAID6 needs to spares available):

[sourcecode]
$ sudo mdadm --manage /dev/md/md0 --add /dev/sdg
[/sourcecode]

Convert into a RAID6 array and make it rebuild to a clean state:

[sourcecode]
$ sudo mdadm --grow /dev/md/md0 --raid-devices 6 --level 6
[/sourcecode]

Add another hot-spare to be able to migrate from RAID6 to RAID5 (RAID6 to RAID5 needs one spare available):

[sourcecode]
$ sudo mdadm --manage /dev/md/md0 --add /dev/sdh
[/sourcecode]

Convert from RAID6 to RAID5:

[sourcecode]
$ sudo mdadm --grow /dev/md/md0 --level 5 --raid-devices 7
[/sourcecode]

Add 3 more spares (just in case):

[sourcecode]
sudo mdadm --manage /dev/md/md0 --add /dev/sd[ijk]
[/sourcecode]

Exercise left to the reader (in that order):
<ol>
	<li>Convert from RAID5 to RAID6</li>
	<li>Convert from RAID 6 to RAID5</li>
</ol>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1003</wp:post_id>
  <wp:post_date>2011-01-27 15:20:27</wp:post_date>
  <wp:post_date_gmt>2011-01-27 15:20:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>migrating-raid-levels-in-linux-with-mdadm</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1320179141";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>920</wp:comment_id>
    <wp:comment_author><![CDATA[serverhorror]]></wp:comment_author>
    <wp:comment_author_email>martin@marcher.name</wp:comment_author_email>
    <wp:comment_author_url>http://blog.serverhorror.com</wp:comment_author_url>
    <wp:comment_author_IP>212.227.35.93</wp:comment_author_IP>
    <wp:comment_date>2012-06-09 11:33:09</wp:comment_date>
    <wp:comment_date_gmt>2012-06-09 11:33:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[hehe....

s/BAD/BSD/g]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>919</wp:comment_parent>
    <wp:comment_user_id>5284979</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1339241590</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1339241590.5384";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"martinmarcher";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>918</wp:comment_id>
    <wp:comment_author><![CDATA[Daniel]]></wp:comment_author>
    <wp:comment_author_email>claw@pop3.ru</wp:comment_author_email>
    <wp:comment_author_url>http://claw.triple6.org</wp:comment_author_url>
    <wp:comment_author_IP>95.89.81.42</wp:comment_author_IP>
    <wp:comment_date>2012-05-25 20:34:12</wp:comment_date>
    <wp:comment_date_gmt>2012-05-25 20:34:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[1	$ while true;
2	    do
3	        clear
4	        cat /proc/mdstat
5	        /bin/echo -e '\nmdadm --detail'
6	        sudo mdadm --detail /dev/md/md0
7	        sleep 2
8	    done



what about :
watch 'cat /proc/mdstat ; /bin/echo -e '\nmdadm --detail' ; sudo mdadm --detail /dev/md/md0'

There is no script requiered doing this.

man watch]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337978052.4704";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1338577150</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>919</wp:comment_id>
    <wp:comment_author><![CDATA[serverhorror]]></wp:comment_author>
    <wp:comment_author_email>martin@marcher.name</wp:comment_author_email>
    <wp:comment_author_url>http://blog.serverhorror.com</wp:comment_author_url>
    <wp:comment_author_IP>91.89.14.49</wp:comment_author_IP>
    <wp:comment_date>2012-06-01 18:59:04</wp:comment_date>
    <wp:comment_date_gmt>2012-06-01 18:59:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[True I just don't like watch since its not available by default on BAD systems (yes I know it is "gnuwatch")]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>918</wp:comment_parent>
    <wp:comment_user_id>5284979</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1338577145</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338577145.4851";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"martinmarcher";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>835</wp:comment_id>
    <wp:comment_author><![CDATA[Convert linux software raid from raid5 to raid6 - Admins Goodies]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://adminsgoodies.com/convert-linux-software-raid-from-raid5-to-raid6/</wp:comment_author_url>
    <wp:comment_author_IP>64.90.55.54</wp:comment_author_IP>
    <wp:comment_date>2012-01-19 21:00:38</wp:comment_date>
    <wp:comment_date_gmt>2012-01-19 21:00:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] to this, it&#8217;s possible. I haven&#8217;t done it, but the procedure looks like you should add the new [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1327405061.5714";s:7:"message";s:52:"martinmarcher changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"martinmarcher";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1327405061</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Pengiuns, Inuit and Fast Food</title>
  <link>http://serverhorror.wordpress.com/2011/01/29/pengiuns-inuit-and-fast-food/</link>
  <pubDate>Sat, 29 Jan 2011 17:17:57 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1031</guid>
  <description/>
  <content:encoded><![CDATA[Dear Lazyweb:
<ul>
	<li>Do Iniut eat PenguinMcNuggetswhen they go to McDonalds?</li>
	<li>Do Iniut eat Inuit eat Penguin Wings when they go to Kentucky Fried Chicken?</li>
	<li>And why does Kentucky Fried Chicken even exist outside of Kentucky?</li>
</ul>
No pun intended, I just caught myself being reminded how McDonalds, KFC and alike "localize" their products. I wonder to what extend they really do it...]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1031</wp:post_id>
  <wp:post_date>2011-01-29 17:17:57</wp:post_date>
  <wp:post_date_gmt>2011-01-29 17:17:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pengiuns-inuit-and-fast-food</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1297891655";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Scripting VirtualBox with VBoxManage</title>
  <link>http://serverhorror.wordpress.com/2011/02/03/scripting-virtualbox-with-vboxmanage/</link>
  <pubDate>Thu, 03 Feb 2011 10:24:53 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1037</guid>
  <description/>
  <content:encoded><![CDATA[Well <strong>not really scripting</strong>. Merely a note on the basic usage of <code>VBoxManage</code> so that I can remember how to quickly create guest machines with lots of disks.
<h2>Get Basic Info About What We Need</h2>
[sourcecode]
VBoxManage list
VBoxManage list ostypes
[/sourcecode]
<h2>Create a Guest and Register it to be visible in the GUI</h2>
[sourcecode]
VBoxManage createvm --name clitest --ostype Linux26_64
VBoxManage registervm ~/VirtualBox\ VMs/clitest/clitest.vbox
VBoxManage list vms
[/sourcecode]
<h2>Adjust the settings</h2>
[sourcecode]
VBoxManage modifyvm clitest --vram 16
VBoxManage modifyvm clitest --memory 1024
VBoxManage modifyvm clitest --boot1 dvd --boot2 disk --boot3 none
VBoxManage modifyvm clitest --acpi on --ioapic on
VBoxManage modifyvm clitest --nictype1 virtio --nic1 bridged
# This is on Mac OS X so you might need to fiddle around with the name of --bridgeadapter1
VBoxManage modifyvm clitest --bridgeadapter1 en0:\ Ethernet --cableconnected1 on
VBoxManage modifyvm clitest --chipset ich9
VBoxManage modifyvm clitest --firmware bios
[/sourcecode]
<h2>Create a disk to boot from</h2>
[sourcecode]
VBoxManageo vbm createhd --filename ~/VirtualBox\ VMs/clitest/root.vdi --size $((2**10 * 5))
[/sourcecode]
<h2>Create a SATA Controller</h2>
[sourcecode]
VBoxManage storagectl clitest --name SATA\ Controller --add sata --sataportcount 2 --bootable on
[/sourcecode]
<h2>Attach an ISO image and disk to the Guest</h2>
[sourcecode]
VBoxManage storageattach clitest --storagectl SATA\ Controller --port 0 --device 0 --type dvddrive --medium ~/ISOs/Fedora-13-x86_64-netinst.iso
VBoxManage storageattach clitest --storagectl SATA\ Controller --port 1 --device 0 --type hdd --medium clitest/root.vdi
[/sourcecode]
<h2>Boot it</h2>
[sourcecode]
VBoxManage startvm clitest --type gui
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1037</wp:post_id>
  <wp:post_date>2011-02-03 10:24:53</wp:post_date>
  <wp:post_date_gmt>2011-02-03 10:24:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scripting-virtualbox-with-vboxmanage</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="automation"><![CDATA[automation]]></category>
  <category domain="post_tag" nicename="mac-os-x"><![CDATA[Mac OS X]]></category>
  <category domain="post_tag" nicename="operating-system"><![CDATA[Operating system]]></category>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="virtual-machine"><![CDATA[Virtual machine]]></category>
  <category domain="post_tag" nicename="virtualbox"><![CDATA[virtualbox]]></category>
  <category domain="post_tag" nicename="virtualization"><![CDATA[virtualization]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1319931925";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Create files with random sizes with only bash and dd</title>
  <link>http://serverhorror.wordpress.com/2011/02/04/create-files-with-random-sizes-with-only-bash-and-dd/</link>
  <pubDate>Fri, 04 Feb 2011 11:00:30 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1100</guid>
  <description/>
  <content:encoded><![CDATA[<h2>The Rules</h2>
So you need a bunch of files of random size. Say something between 1 MiB and 10 MiB. And you need 3 of them. <code>bash</code> to the rescue.
<ul>
	<li>The variable <code>$RANDOM</code> will return an integer between 0 a nd 32,767.</li>
	<li><code>$((...))</code> will do arithmetic expansion for the expression contained within</li>
	<li>The <code>%</code>-operator will do a modulo operation</li>
</ul>
Let me use those 3 simple rules to create
<ol>
	<li>3 files between 1 MiB and 10 MiB</li>
	<li>3 files between 15 MiB and 25 MiB</li>
</ol>
<strong>As a side note: I will be creating sparse files here. Look up <code>dd(1)</code> for the details. Your use case might be different anyway.</strong>
<h2>1 MiB -- 10 MiB files</h2>
[sourcecode language="bash"]$(( ($RANDOM % 10) + 1))[/sourcecode]
<h2>15 MiB -- 25 MiB files</h2>
[sourcecode language="bash"]$(( ($RANDOM % 10) + 15))[/sourcecode]
<h2>General Solution</h2>
[sourcecode language="bash"]
MINSIZE=&lt;number&gt;
MAXSIZE=&lt;number&gt;
$(( ($RANDOM % ($MAXSIZE-$MINSIZE)) + $MINSIZE))
[/sourcecode]

[sourcecode language="bash"]
MINSIZE=30
MAXSIZE=60
for i in {1..3}
do
    dd if=/dev/zero of=testdata.01-15.${i}.data bs=1m count=0 seek=$(( ($RANDOM % 10) + 1))
    dd if=/dev/zero of=testdata.15-25.${i}.data bs=1m count=0 seek=$(( ($RANDOM % 10) + 15))
    dd if=/dev/zero of=testdata.${MINSIZE}-${MAXSIZE}.${i}.data bs=1m count=0 seek=$(( ($RANDOM % ($MAXSIZE-$MINSIZE)) + $MINSIZE))

done 2&gt;/dev/null \
&amp;&amp; echo 'SUCCESS: Creating data files' \
|| echo 'FAILURE: Creating data files'
[/sourcecode]

The result looks quite good.

[sourcecode lang="bash"]
du -sm testdata.*
10	testdata.01-15.1.data
5	testdata.01-15.2.data
3	testdata.01-15.3.data
17	testdata.15-25.1.data
21	testdata.15-25.2.data
20	testdata.15-25.3.data
31	testdata.30-60.1.data
38	testdata.30-60.2.data
55	testdata.30-60.3.data
[/sourcecode]

Yes I know this is minor math at best. But still I tend to forget that problems like this are easily solveable, so I'll not it down here. And yes, there's probably a bunch of cases where bash isn't what you want to use. I needed lots of files to test mdadm behaviour so that I can use them as disks and create RAID arrays.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1100</wp:post_id>
  <wp:post_date>2011-02-04 11:00:30</wp:post_date>
  <wp:post_date_gmt>2011-02-04 11:00:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>create-files-with-random-sizes-with-only-bash-and-dd</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="bash"><![CDATA[bash]]></category>
  <category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
  <category domain="post_tag" nicename="randomness"><![CDATA[Randomness]]></category>
  <category domain="post_tag" nicename="shell"><![CDATA[Shell]]></category>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="unix"><![CDATA[Unix]]></category>
  <category domain="post_tag" nicename="useless-math"><![CDATA[useless math]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1319574128";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Create files with random sizes with only bash and dd: http://wp.me/pxxjT-hK]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Debian/Squeeze - The best part</title>
  <link>http://serverhorror.wordpress.com/2011/02/06/debiansqueeze-the-best-part/</link>
  <pubDate>Sun, 06 Feb 2011 16:54:05 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1119</guid>
  <description/>
  <content:encoded><![CDATA[[caption id="" align="aligncenter" width="200" caption="get debian squeeze"]<a href="http://www.debian.org/releases/squeeze/debian-installer/"><img title="get debian squeeze" src="http://news.debian.net/wp-content/uploads/2011/squeeze_countdown.png" alt="get debian squeeze" width="200" height="170" /></a>[/caption]
<p style="text-align:center;"><a title="Debian/Squeeze" href="http://www.debian.org/releases/squeeze/debian-installer/">Debian/Squeeze</a> has been released...yay!</p>
After countless blogposts about the all new and shiny release itself, I have another point to make. The <a title="New look for Debian's websites" href="http://www.debian.org/News/2011/20110205b">visual redesign of the whole web project</a>. This is what I like best about it. Finally the <a class="zem_slink" title="Linux distribution" rel="wikipedia" href="http://en.wikipedia.org/wiki/Linux_distribution">Linux distribution</a> I like best has a look that <strong><a title="Debian GNU/Linux -- The Universal Operating System" href="http://web.archive.org/web/19981212024258/http://www.debian.org/">doesn't look like 1998</a></strong>.

<strong>Kudos to the <a class="zem_slink" title="Debian" rel="homepage" href="http://www.debian.org/">Debian</a> website team! The new look is just awesome!</strong>

[caption id="" align="aligncenter" width="100" caption="Debian Logo"]<a href="http://www.debian.org"><img title="Debian Logo" src="http://www.debian.org/logos/openlogo-100.png" alt="Debian Logo with &quot;Debian&quot; Text" width="100" height="123" /></a>[/caption]

I for one welcome our our new <a href="http://en.wikipedia.org/wiki/List_of_Toy_Story_characters">wheezy</a> overlord]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1119</wp:post_id>
  <wp:post_date>2011-02-06 16:54:05</wp:post_date>
  <wp:post_date_gmt>2011-02-06 16:54:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>debiansqueeze-the-best-part</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="debian"><![CDATA[Debian]]></category>
  <category domain="post_tag" nicename="distributions"><![CDATA[Distributions]]></category>
  <category domain="post_tag" nicename="gnu-variants"><![CDATA[GNU variants]]></category>
  <category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
  <category domain="post_tag" nicename="linux-distribution"><![CDATA[Linux distribution]]></category>
  <category domain="post_tag" nicename="operating-system"><![CDATA[Operating system]]></category>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1317873338";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>MySQL tab completion (which sucks anyway)</title>
  <link>http://serverhorror.wordpress.com/2011/02/07/mysql-tab-completion/</link>
  <pubDate>Mon, 07 Feb 2011 00:01:38 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1129</guid>
  <description/>
  <content:encoded><![CDATA[Since the <a class="zem_slink" title="MySQL" rel="homepage" href="http://www.mysql.com">MySQL</a> tab completion sucks anyway, but I usually forget how to enable it here's how:

[sourcecode]
[mysql]
#no-auto-rehash # faster start of mysql but no tab completion
auto-rehash
[/sourcecode]

If you can't control the server and <a href="http://dev.mysql.com/doc/refman/5.1/en/mysql-command-options.html#option_mysql_auto-rehash"><code>auto-rehash</code></a> isn't enabled:

[sourcecode language="sql"]
rehash; -- rehash the database/table names for this session (from this point in time)
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1129</wp:post_id>
  <wp:post_date>2011-02-07 00:01:38</wp:post_date>
  <wp:post_date_gmt>2011-02-07 00:01:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>mysql-tab-completion</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
  <category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1319611942";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>volatile.debian.org deprecated - use squeeze-updates</title>
  <link>http://serverhorror.wordpress.com/2011/02/15/volatile-debian-org-deprecated-use-squeeze-updates/</link>
  <pubDate>Tue, 15 Feb 2011 12:03:50 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1139</guid>
  <description/>
  <content:encoded><![CDATA[As of today the <a title="The debian-volatile Project" href="http://www.debian.org/volatile/">volatile.debian.org</a> is discontinued. Just read <a title="[VUA 76-1] volatile replaced by new updates suite" href="http://lists.debian.org/debian-volatile-announce/2011/msg00000.html">the official announcement</a>.
<h1>Debian/Squeeze</h1>
The short version is to got to your <code style="display:inline-block;">/etc/apt/sources.list</code> and replace your volatile with

[sourcecode language="text"]
deb http://ftp.debian.org/debian squeeze-updates main
[/sourcecode]

Then run (with your usual procedures of testing that of course):

[sourcecode language="text"]
apt-get update
apt-get upgrade
[/sourcecode]

and you should be fine]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1139</wp:post_id>
  <wp:post_date>2011-02-15 12:03:50</wp:post_date>
  <wp:post_date_gmt>2011-02-15 12:03:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>volatile-debian-org-deprecated-use-squeeze-updates</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="debian"><![CDATA[Debian]]></category>
  <category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1319654451";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>&gt;180 Candidates to Write About</title>
  <link>http://serverhorror.wordpress.com/2011/02/16/180-candidates-to-write-about/</link>
  <pubDate>Wed, 16 Feb 2011 11:00:51 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1146</guid>
  <description/>
  <content:encoded><![CDATA[I just checked my Google Reader's starred items and found I have roughly 180 posts starred. Usually I do this when I have the feeling of (multiple choices possible):
<ul>
	<li>I should try that (as in invest 2-3 hours)</li>
	<li>Seems wrong</li>
	<li>Great stuff, interesting topic to investigate (as in a couple of days - weeks)</li>
</ul>
Even if I would indeed write about one item per day I'm full for half a year. I wonder if somebody already coined "blog bankrupcy".]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1146</wp:post_id>
  <wp:post_date>2011-02-16 11:00:51</wp:post_date>
  <wp:post_date_gmt>2011-02-16 11:00:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>180-candidates-to-write-about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306079077";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Create .dmg Images for OS X on Linux</title>
  <link>http://serverhorror.wordpress.com/2011/02/26/create-dmg-images-for-os-x-on-linux/</link>
  <pubDate>Sat, 26 Feb 2011 17:17:52 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1161</guid>
  <description/>
  <content:encoded><![CDATA[Those are the kinds of gems hidden in bugreports:
<blockquote>If you cant create the image on a mac because of the build process, here is how you can do it under linux:
<ol>
	<li>Create a image file, the size is fixed. (<code>dd if=/dev/zero of=/root/eclipse.dmg bs=1M count=130</code>)</li>
	<li>Get the <code>hfsutils</code> (for redhat or suse: <code>hfsutils-3.2.6-1.i386.rpm</code> from rpmfind.net) and install them.</li>
	<li>Format the image file: <code>hformat -l Eclipse /root/eclipse.dmg</code></li>
	<li>Mount the image: <code>mount -t hfs -o loop /root/eclipse.dmg /mnt/test</code></li>
	<li>Copy files into the volume</li>
	<li>Unmount the volume: <code>umount /mnt/test</code></li>
<li>Thats it.</li>
</ol>
</blockquote>
via <a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=106350#c0">Bug 106350 – Feature Request: distributing eclipse.dmg instead of .tar.gz for the mac platform</a>.

Applying these instructions to your distro is left as an exercise for the reader.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1161</wp:post_id>
  <wp:post_date>2011-02-26 17:17:52</wp:post_date>
  <wp:post_date_gmt>2011-02-26 17:17:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>create-dmg-images-for-os-x-on-linux</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="disk-image"><![CDATA[Disk image]]></category>
  <category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
  <category domain="post_tag" nicename="mac-os-x"><![CDATA[Mac OS X]]></category>
  <category domain="post_tag" nicename="os-x"><![CDATA[os x]]></category>
  <category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1319696121";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Running a TOR exit node</title>
  <link>http://serverhorror.wordpress.com/2011/02/28/running-a-tor-exit-node/</link>
  <pubDate>Mon, 28 Feb 2011 13:17:15 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1168</guid>
  <description/>
  <content:encoded><![CDATA[For better or worse I'm running a <a href="https://www.torproject.org/">TOR</a> exit node now on one of my publicly facing servers.

I'll see how it goes and wether it is indeed such a hassle to run something like this. If I find the time I'll probably publish a page with traffic stats and possibly even abuse complaints that come in - just for the fun of it.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1168</wp:post_id>
  <wp:post_date>2011-02-28 13:17:15</wp:post_date>
  <wp:post_date_gmt>2011-02-28 13:17:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>running-a-tor-exit-node</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="privacy"><![CDATA[privacy]]></category>
  <category domain="post_tag" nicename="tor"><![CDATA[Tor]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306444747";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>111</wp:comment_id>
    <wp:comment_author><![CDATA[Update: Running a TOR Exit Node &laquo; Server!/Horror!]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://blog.serverhorror.com/2011/03/01/update-running-a-tor-exit-node/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.104.32</wp:comment_author_IP>
    <wp:comment_date>2011-03-01 12:10:22</wp:comment_date>
    <wp:comment_date_gmt>2011-03-01 12:10:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] As said before: I run a TOR exit node. [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1298981422</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1298981422.6602";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>922</wp:comment_id>
    <wp:comment_author><![CDATA[tor]]></wp:comment_author>
    <wp:comment_author_email>tor@tor.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>66.183.16.222</wp:comment_author_IP>
    <wp:comment_date>2012-07-04 21:00:32</wp:comment_date>
    <wp:comment_date_gmt>2012-07-04 21:00:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Any update to this?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>111</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1345244896</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1345244896.6875889301300048828125;s:7:"message";s:52:"martinmarcher changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"martinmarcher";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1341435632.8346";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>HowTo: List open network connections for a certain user</title>
  <link>http://serverhorror.wordpress.com/2011/03/01/howto-list-open-network-connections-for-a-certain-user/</link>
  <pubDate>Tue, 01 Mar 2011 10:55:25 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1172</guid>
  <description/>
  <content:encoded><![CDATA[Since I always have to look it up in the <a title="LSOF(8) - manpages.debian.net" href="http://manpages.debian.net/cgi-bin/man.cgi?query=lsof">manpage of lsof(8)</a>:

[sourcecode language="bash"]
lsof -nP -a -i -u ${USER} # list all network connections for ${USER}
lsof -nP -a -i UDP -u ${USER} # list UDP connections for ${USER}
lsof -nP -a -i TCP -u ${USER} # list TCP connections for ${USER}
lsof -nP -a -i 6 -i TCP -u ${USER} # list IPv6 TCP connections for ${USER}
[/sourcecode]

<dl> <dt><code>-n</code></dt> <dd>don't translate IP addresses to host names</dd> <dt><code>-P</code></dt> <dd>don't translate port numbers to names</dd> <dt><code>-a</code></dt> <dd>make a logical AND for the following selections</dd> <dt><code>-i</code></dt> <dd>without options select EVERYTHING. Other options come in natural</dd> </dl>no more <code>grep</code>-ping with <code>lsof</code>

[caption id="" align="aligncenter" width="300" caption="Image via Wikipedia"]<a href="http://commons.wikipedia.org/wiki/File:Lsof.JPG"><img title="lsof help output" src="http://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Lsof.JPG/300px-Lsof.JPG" alt="lsof help output" width="300" height="251" /></a>[/caption]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1172</wp:post_id>
  <wp:post_date>2011-03-01 10:55:25</wp:post_date>
  <wp:post_date_gmt>2011-03-01 10:55:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>howto-list-open-network-connections-for-a-certain-user</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="lsof"><![CDATA[lsof]]></category>
  <category domain="post_tag" nicename="network"><![CDATA[network]]></category>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1319894126";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Update: Running a TOR Exit Node</title>
  <link>http://serverhorror.wordpress.com/2011/03/01/update-running-a-tor-exit-node/</link>
  <pubDate>Tue, 01 Mar 2011 12:05:08 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1187</guid>
  <description/>
  <content:encoded><![CDATA[As said before: <a title="Running a TOR exit node" href="http://blog.serverhorror.com/2011/02/28/running-a-tor-exit-node/">I run a TOR exit node</a>.

What's nice is that this gives me a box to play (privately) that has quite some traffic. Since I didn't use it before anyway and cancelled the server already - don't worry I intend to run it for the next couple of months so that I'll get a feeling for that - I figured it might be a nice thing to do for other people.

Anyway I started "monitoring" the traffic with vnstat. Here's the first day:
<pre><code># vnstat -i eth0
Database updated: Tue Mar  1 10:56:31 2011

   eth0 since 02/28/11

          rx:  191.93 GiB      tx:  205.07 GiB      total:  397.00 GiB

   monthly
                     rx      |     tx      |    total    |   avg. rate
     ------------------------+-------------+-------------+---------------
       Feb '11     37.29 GiB |   39.92 GiB |   77.21 GiB |  267.73 kbit/s
       Mar '11    154.64 GiB |  165.15 GiB |  319.79 GiB |   68.10 Mbit/s
     ------------------------+-------------+-------------+---------------
     estimated     10.27 TiB |   10.97 TiB |   21.23 TiB |   daily
                     rx      |     tx      |    total    |   avg. rate
     ------------------------+-------------+-------------+---------------
     yesterday     37.29 GiB |   39.92 GiB |   77.21 GiB |    7.50 Mbit/s
         today    154.64 GiB |  165.15 GiB |  319.79 GiB |   68.10 Mbit/s
     ------------------------+-------------+-------------+---------------
     estimated    339.45 GiB |  362.53 GiB |  701.98 GiB |
</code></pre>
Times are in UTC and I started on 02/28/11 ~11:30 with the monitoring. That was at a point where virtually no TOR traffic was coming in due to the low uptime of the TOR daemon.

My colocation says I used 30GB of outgoing traffic so that might be in line - with a little bit of fantasy applied :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1187</wp:post_id>
  <wp:post_date>2011-03-01 12:05:08</wp:post_date>
  <wp:post_date_gmt>2011-03-01 12:05:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>update-running-a-tor-exit-node</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="privacy"><![CDATA[privacy]]></category>
  <category domain="post_tag" nicename="tor"><![CDATA[Tor]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1307031869";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>132</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Renner]]></wp:comment_author>
    <wp:comment_author_email>michael.renner@amd.co.at</wp:comment_author_email>
    <wp:comment_author_url>http://amd.co.at/</wp:comment_author_url>
    <wp:comment_author_IP>84.114.195.3</wp:comment_author_IP>
    <wp:comment_date>2011-04-02 18:11:56</wp:comment_date>
    <wp:comment_date_gmt>2011-04-02 18:11:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks, vnstat looks nice! Didn't knew that one yet.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1301767917</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1301767918.6026";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>116</wp:comment_id>
    <wp:comment_author><![CDATA[TOR traffic &laquo; Server!/Horror!]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://blog.serverhorror.com/2011/03/02/tor-traffic/</wp:comment_author_url>
    <wp:comment_author_IP>74.200.247.228</wp:comment_author_IP>
    <wp:comment_date>2011-03-02 11:49:12</wp:comment_date>
    <wp:comment_date_gmt>2011-03-02 11:49:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Some more updates on my TOR exit node project. [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1299066790</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1299066791.1076";s:7:"message";s:52:"martinmarcher changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"martinmarcher";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_rechecking</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1299067955.3987";s:7:"message";s:55:"Akismet cleared this comment during an automatic retry.";s:5:"event";s:10:"cron-retry";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1299066552.1257";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>118</wp:comment_id>
    <wp:comment_author><![CDATA[Open up new spaces of consciousness &laquo; Zwadderneel]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://zwadderneel.wordpress.com/2011/03/04/open-up-new-spaces-of-consciousness/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.96.147</wp:comment_author_IP>
    <wp:comment_date>2011-03-04 17:26:06</wp:comment_date>
    <wp:comment_date_gmt>2011-03-04 17:26:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Update: Running a TOR Exit Node (serverhorror.com) [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1299259566</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1299259566.8827";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>TOR traffic</title>
  <link>http://serverhorror.wordpress.com/2011/03/02/tor-traffic/</link>
  <pubDate>Wed, 02 Mar 2011 11:48:47 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1196</guid>
  <description/>
  <content:encoded><![CDATA[Some more updates on my <a title="Update: Running a TOR Exit Node" href="http://blog.serverhorror.com/2011/03/01/update-running-a-tor-exit-node/">TOR exit node project</a>.
<pre><code> eth0  /  daily         day         rx      |     tx      |    total    |   avg. rate
     ------------------------+-------------+-------------+---------------
      02/28/11     37.29 GiB |   39.92 GiB |   77.21 GiB |    7.50 Mbit/s
      03/01/11    208.72 GiB |  222.94 GiB |  431.65 GiB |   41.91 Mbit/s
      03/02/11     44.96 GiB |   47.97 GiB |   92.93 GiB |   18.52 Mbit/s
     ------------------------+-------------+-------------+---------------
     estimated     92.35 GiB |   98.54 GiB |  190.88 GiB |
</code></pre>
Also I found <a href="http://torstatus.blutmagie.de/">torstatus.blutmagie.de</a> which lists exit node and displays traffic on the router.

<strong>UPDATE</strong>: Fixed the broken link to the torstatus site.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1196</wp:post_id>
  <wp:post_date>2011-03-02 11:48:47</wp:post_date>
  <wp:post_date_gmt>2011-03-02 11:48:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tor-traffic</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="privacy"><![CDATA[privacy]]></category>
  <category domain="post_tag" nicename="tor"><![CDATA[Tor]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306147465";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>VIM : JavaScript syntax : Better JavaScript syntax support</title>
  <link>http://serverhorror.wordpress.com/2011/03/10/vim-javascript-syntax-better-javascript-syntax-support/</link>
  <pubDate>Thu, 10 Mar 2011 17:00:35 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1207</guid>
  <description/>
  <content:encoded><![CDATA[I've been using the VIM Script <a href="http://www.vim.org/scripts/script.php?script_id=1491">JavaScript syntax : Better JavaScript syntax support</a> for quite a while now. Since I like the <a href="https://github.com/tpope/vim-pathogen">pathogen plugin</a> which enables you to use git submodules as vim plugins I decided to put the source on <a class="zem_slink" title="GitHub" rel="homepage" href="http://github.com">Github</a>.

Find it here: <a href="https://github.com/serverhorror/javascript.vim">https://github.com/serverhorror/javascript.vim</a>
<ul>
	<li>Fork it!</li>
	<li>Enhance It!</li>
</ul>
I couldn't find a license so I assume it's public domain. The <a href="https://github.com/serverhorror/javascript.vim/blob/master/README.md">README.md</a> contains information about the <strong><a title="Yi Zhao" href="http://linuxyz.blogspot.com/">original author</a></strong>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1207</wp:post_id>
  <wp:post_date>2011-03-10 17:00:35</wp:post_date>
  <wp:post_date_gmt>2011-03-10 17:00:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vim-javascript-syntax-better-javascript-syntax-support</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="github"><![CDATA[github]]></category>
  <category domain="post_tag" nicename="javascript"><![CDATA[JavaScript]]></category>
  <category domain="post_tag" nicename="javascript-syntax"><![CDATA[JavaScript syntax]]></category>
  <category domain="post_tag" nicename="syntax"><![CDATA[Syntax]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="vim"><![CDATA[vim]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1319816780";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>123</wp:comment_id>
    <wp:comment_author><![CDATA[what is vim in 6Kb.. -Learning - Amit Agarwal]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://blog.amit-agarwal.co.in/2011/03/16/what-is-vim-in-6kb/</wp:comment_author_url>
    <wp:comment_author_IP>184.168.193.160</wp:comment_author_IP>
    <wp:comment_date>2011-03-16 16:37:59</wp:comment_date>
    <wp:comment_date_gmt>2011-03-16 16:37:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] link to the vim in 6kb in English.Related articlesVim ! Vim ! Vim ! (mcknight0219.wordpress.com)VIM : JavaScript syntax : Better JavaScript syntax support (serverhorror.com)2010 VIm Guide Roundup (linux.com)Vim script  Share and [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1300295146.1947";s:7:"message";s:62:"Akismet caught this comment as spam during an automatic retry.";s:5:"event";s:10:"cron-retry";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1300293479.2801";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1300293693</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1300293693.5417";s:7:"message";s:52:"martinmarcher changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"martinmarcher";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_rechecking</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>true</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Notes on: Setting up a new Server</title>
  <link>http://serverhorror.wordpress.com/2011/03/30/notes-on-setting-up-a-new-server/</link>
  <pubDate>Wed, 30 Mar 2011 12:00:19 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1215</guid>
  <description/>
  <content:encoded><![CDATA[<h2>A typical Machine</h2>
<h3>Prepare Stuff as root</h3>
[sourcecode language="bash"]
passwd -l root
apt-get install sudo
adduser $SYSTEM_USER
adduser $SYSTEM_USER adm
adduser $SYSTEM_USER staff
adduser $SYSTEM_USER sudo
su - $SYSTEM_USER
[/sourcecode]
[sourcecode language="bash"]
sudo -l # verify $SYSTEM_USER can actually use sudo...
exit
[/sourcecode]
[sourcecode language="bash"]
exit
[/sourcecode]
<h3>Now work with <code>$SYSTEM_USER</code></h3>
[sourcecode language="bash"]
sudo apt-get update
sudo apt-get upgrade --yes
sudo apt-get install --yes vim
sudo apt-get remove --purge --yes nano
sudo update-alternatives --display editor|head -n2
sudo apt-get install procps lsof lsb-release bash-completion curl git-core -y
source ./etc/bash_completion
grep -q -i '^PermitRootLogin' /etc/ssh/sshd_config &amp;&amp; sudo sed -i.bak -e 's/^PermitRootLogin (.*)/PermitRootLogin no/' /etc/ssh/sshd_config
sudo pkill -SIGHUP -u root -f /usr/sbin/sshd
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1215</wp:post_id>
  <wp:post_date>2011-03-30 12:00:19</wp:post_date>
  <wp:post_date_gmt>2011-03-30 12:00:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>notes-on-setting-up-a-new-server</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="notes"><![CDATA[notes]]></category>
  <category domain="post_tag" nicename="operating-systems"><![CDATA[Operating Systems]]></category>
  <category domain="post_tag" nicename="sysadmin"><![CDATA[sysadmin]]></category>
  <category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="unix"><![CDATA[Unix]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1320179127";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rethinking Storage (again...)</title>
  <link>http://serverhorror.wordpress.com/2011/05/26/rethinking-storage-again/</link>
  <pubDate>Thu, 26 May 2011 09:00:54 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1260</guid>
  <description/>
  <content:encoded><![CDATA[Initially I started to write this down in the wordpress.com WYSIWYG editor. It was more like <em>What You See Is What You Deserve</em>. So I fired up a text editor and just wrote it down in markdown.

If anyone knows about a nice hosted blog where I can just throw markdown at it I'll be grateful...
<pre>Today I was once again on the hunt for a storage solution. Having the naive
idea of a one size fits all and wading thru piles of old bookmarks I had a
genius moment...

* There's no one size fits all! (*Can you believe it? -- No shit, Sherlock!*)

So which sizes (categories) would you need? Of course that's just generally
speaking and kind of a no-brainer, if you really think about it, but given the
amount of bookmarks and thoughts I had filed under storage I need to write
this down so that I can reference this in the future.

Ok let's get started.

# Persistence

OK, so persistence means to me a lot of things. There's a local filesystem (as
in Maildir, mbox, local files, whatever floats your boat) all kinds of SQL
databases, all kinds of NoSQL databases.

Then there are *distributed filesystems*, *distributed fault tolerant
filesystems* and a whole stack of other categories. That would then be storage
APIs like Amazon S3, Cleversafe, Google has something too...

## So why is persistence something that's actually important?

Simple reason, power down a server (or for that matter a whole datacenter) and
boot it again. There's gotta be someway to restore state. That's the most
basic reason why I need persistence.

Of course I can go and get GlusterFS, Lustre maybe even Ceph. But all I
essentially care about is that I can somehow just throw nodes at it and there
will be more storage, available under a nice namespace.

Not a single name that when failed renders the whole persistence thing useless
(that would be NFS). By namespace I mean something like I can talk to any
endpoint in the system and it will give me essentially the same thing back --
take care I specifically do not mean Atomicity here. Just that I want to be
able to talk to any server that is in the system

Also there'll be a bunch of different projects that all want to use the
service that our *persistence thingie* provides. So what I need is some kind
of security (broadly speeking).

I want to be able to *let Project A access Namespace A (and only A)* and I want
*Project B to be able to access Namespace A and B*. So that needs to be
configurable.

Right now I don't see a need for a super secure storage. **Something where every
client needs it's own X509 certificate** and the server will verify the
chain of trust. That's just overkill. It's nice to have this as an option, but
definitely **do not make it the only option available**!

## Extracted Requirements

All of the following requirements must be doable while the "persistence thing" is online

* **Scale Up**, or Out or whatever the word of month is for that -- just throw
  more hardware at it and there will be more persistent storage
* Handle Node Failure.

  It's not a disaster if I have 10 nodes and 2 fail. It should just tell me
  about it. A perfect thing would be if it would just say something like:

  &gt; OK, I just found out that 2 of my 10 nodes are missing so I'll simply make
  &gt; sure I have enough copies of the data and tell everyone that now there's
  &gt; less overall storage available!

* A nice API for applications to use the storage. That means:
  * Authentication, Authorization
  * Reading
  * Writing

Requirements that are allowed to be available only as what I'll call offline
operations. It would still be nice if that could be done online:

* Scale Down -- I want to have a way to remove hardware as well

  What if I want to take the system out of service in a couple of years from
  now. Do I really have to set up another complete storage area. I'd think it
  would be nice if I don't have to do that but could simply unprovision parts
  of the system.

  The requirement isn't quite that hard because I guess if I buid up a new
  system then there has to be bugdet for it. And if the the average box in my
  storage system is 2 years old, each box in the new system probably has a lot
  more storage than each box in the old system.

# Caching

There's another kind of storage. Caching! This has mostly *non-requirements*
(lacking a better term; these are the things I wouldn't expect from a cache
layer - but I wouldn't get mad if it had those features)

* Persistence -- Yes, really! I don't expect data in a caching layer to
  survive reboots
* Scale Up/Down
* **Add and Remove** nodes on the fly
* **Handle unexpected failure** of nodes
* Essentially all the things scalaris provides
* A nice API for applications!

# Logging

That may be a strange requirement for storage. But, personally, I need to know
what's going on. Do log structured data. That means (honestly stolen from the
[Logstash style
guide](https://github.com/logstash/logstash/blob/master/STYLE.md))

Rather than this:

    "Some error occured in request #{request} on input #{input} from client #{ip}"

Do this:

    ["Some error occured in this request", { :request =&gt; request, :input =&gt; input, :client =&gt; ip}]

I have yet to find server software that does this in a way where I don't want
to run away and cry. Please, please anyone who writes daemon software either
use JSON or something else that is easy to parse and still somewhat
human-readable or read
[RFC5424#Section-6.3](http://tools.ietf.org/html/rfc5424#section-6.3) (at
least, better read the whole thing).

# Monitoring

Yes, apart from that I want to be able to read what's going on I want to be
able to ask the daemon (and preferrably the system as a whole) about the
things that are going on. Sure I can just ICMP ping all the servers, sure I
can test wether a port accepts TCP connections. And if that goes wrong I know:

&gt; Hey, another one of the 10 servers is down

But what I really want to know is:

&gt; Geeh! It's 3.42AM, do I really have to care about that or can I just get
&gt; back to sleep and fix that tomorrow?</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1260</wp:post_id>
  <wp:post_date>2011-05-26 09:00:54</wp:post_date>
  <wp:post_date_gmt>2011-05-26 09:00:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rethinking-storage-again</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Rethinking Storage (again...): http://wp.me/pxxjT-kk]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306442938";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rethinking Compliance</title>
  <link>http://serverhorror.wordpress.com/2011/06/02/rethinking-compliance/</link>
  <pubDate>Thu, 02 Jun 2011 13:25:07 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2011/06/02/rethinking-compliance/</guid>
  <description/>
  <content:encoded><![CDATA[<div class='posterous_autopost'><p><strong>BIG FAT WARNING</strong><br /> This is not about legal compliance; it&rsquo;s about basic compliance and actually it&rsquo;s even more about talking to each other before doing something like this. You do not want to end up with some ueber-cool system that nobody wants to use. You want that people accept the system, hell they shouldn&rsquo;t just accept it &mdash; it should be natural to them to use the whatever <strong>compliant services</strong> are provided. Because the are easy to use and because they do the job <em>at least well</em>.<br /> If you want to have compliance and you do it in a way that users don&rsquo;t like they will find ways around it.</p>  <p>I&rsquo;ve had some thoughts about what compliance actually is. Basically compliance is nothing more than trying to save money by agreeing to a standard. Therefore everyone just can work with the same set of tools.</p>  <p>What this means: Say I want to serve static content, common sense tells me that I&rsquo;d like to agree to some software and probably some kind of directory structure where everyone just puts files and they will be publicly available.</p>  <p>Let&rsquo;s take another step. Why do I need to create directories myself? Probably the only reason is because there&rsquo;s no API that just let&rsquo;s me upload stuff and and then tells me a URL where it&rsquo;s available. So there&rsquo;s some automation missing.</p>  <p>Let&rsquo;s take a company that earns money by providing <em>something</em> thru http. What could be the basic things I want?</p>  <p>I&rsquo;d like to be able to make static content available.</p>  <ul> <li>I need a content farm</li> <li>I need a way to make the content available <em>automagically</em></li> </ul>   <p>Also I&rsquo;d probably like to tell my content farm something like:</p>  <blockquote class="posterous_short_quote"><p><em>Hey, look I have this file here. I want to make it available. I want the domain under which it is reachable to be <code>example.invalid</code></em></p></blockquote>  <p>So I want a way to specify that as well. Now let&rsquo;s define <strong>something we don&rsquo;t expect</strong>:</p>  <ul> <li><em>automagically</em> Versioned content</li> </ul>   <p>If I upload some file <code>new_cool_aid.png</code> and then somebody else comes and uploads the same file again it&rsquo;ll be overwritten. No way to restore the old version from our system, no magic <em>Trash Bin</em> that will version all of that somehow. It&rsquo;s simply overwritten.</p>  <p>But then again something we do expect, given I have to files <code>new_cool_aid.png</code> with different content. I want both files to be available.</p>  <ul> <li><p><a href="http://en.wikipedia.org/wiki/Content-addressable_storage">Content-addressable Storage</a>.</p>  <p>I belive the <a href="http://git-scm.org">Git Version Control System</a> is the most commonly known one of those.</p></li> </ul>   <p>OK, I was just talking about some requirements and some ideas. Now that&rsquo;s all nice and shiny. It&rsquo;s not up to me to implement that here. Maybe I&rsquo;ll just put something on <a href="http://github.com/serverhorror/">my github account</a> and see if anybody uses it.</p>  <p>On the other hand; I&rsquo;ll probably implement this at my current employer so I have no idea wether or not I&rsquo;ll get clearance about making that publicly available. In my mind I have the system ready, actually it should just be a matter of a few days to get the basic version up and running. It may not be as scalable as I&rsquo;d like it to be initially; scaling is actually the hard part about it :)</p></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1281</wp:post_id>
  <wp:post_date>2011-06-02 13:25:07</wp:post_date>
  <wp:post_date_gmt>2011-06-02 13:25:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rethinking-compliance</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1307092072";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Notes on LXC</title>
  <link>http://serverhorror.wordpress.com/2011/06/02/notes-on-lxc/</link>
  <pubDate>Thu, 02 Jun 2011 13:25:25 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2011/06/02/notes-on-lxc/</guid>
  <description/>
  <content:encoded><![CDATA[<div class="posterous_autopost">

<strong>NOTICE</strong>:
Despite looking like copy/paste commands. <strong>These are not copy/paste commands</strong>. Use your brain!

Minor notes on how to set up a host and a first container for <a href="http://en.wikipedia.org/wiki/Lxc">LXC</a>. This will not give you networking. Those are just the basics…
<h2>Assumptions</h2>
<ul>
	<li>You have an <a href="http://en.wikipedia.org/wiki/Logical_Volume_Manager_(Linux">LVM</a> configured that is named <code>lxc</code></li>
	<li><a href="http://en.wikipedia.org/wiki/Lxc">LXC</a> containers will be deployed to <code>/srv/lxc/$utsname</code></li>
	<li>LXC containers will be configured from <code>/etc/lxc/$utsname/{config,fstab}</code></li>
</ul>
<h2>Do It!</h2>
<ol>
	<li><code>apt-get install debian</code></li>
	<li><code>apt-get install vim git-core lxc bash-completion</code></li>
	<li><code>. /etc/bash-completion</code></li>
	<li><code>mkdir -p /srv/lxc/vm01</code></li>
	<li><code>lvcreate -n vm01 -L 5G lxc</code></li>
	<li><code>mkfs.ext4 /dev/lxc/vm01</code></li>
	<li><code>mount /dev/lxc/vm01 /srv/lxc/vm01</code></li>
	<li><code>mkdir -p /etc/lxc/vm01</code></li>
	<li><code>vim /etc/lxc/vm01/conf</code>
<div class="CodeRay">
<div class="code">[sourcecode]
lxc.utsname=vm01 lxc.network.type=empty
lxc.network.flags=up
lxc.mount=/etc/lxc/vm01/fstab
lxc.rootfs=/srv/lxc/vm01
lxc.tty=4 lxc.pts=1024
# LXC Device setup
# only explicitely allowed devices...
lxc.cgroup.devices.deny = a
# /dev/null and zero
lxc.cgroup.devices.allow = c 1:3 rwm
lxc.cgroup.devices.allow = c 1:5 rwm # consoles
lxc.cgroup.devices.allow = c 5:1 rwm
lxc.cgroup.devices.allow = c 5:0 rwm
lxc.cgroup.devices.allow = c 4:0 rwm
lxc.cgroup.devices.allow = c 4:1 rwm
# /dev/{,u}random
lxc.cgroup.devices.allow = c 1:9 rwm
lxc.cgroup.devices.allow = c 1:8 rwm
lxc.cgroup.devices.allow = c 136:* rwm
lxc.cgroup.devices.allow = c 5:2 rwm
# rtc
lxc.cgroup.devices.allow = c 254:0 rwm
[/sourcecode]

</div>
</div></li>
	<li><code>vim /etc/lxc/vm01/fstab</code>
<div class="CodeRay">
<div class="code">[sourcecode]
devpts /srv/lxc/vm01/debootstrapped/dev/pts devpts defaults 0 0
proc /srv/lxc/vm01/debootstrapped/proc    proc   defaults 0 0
sysfs /srv/lxc/vm01/debootstrapped/sys     sysfs  defaults 0 0
none /srv/lxc/vm01/debootstrapped/dev/shm tmpfs  defaults 0 0
[/sourcecode]

</div>
</div></li>
	<li>Install base system
<div class="CodeRay">
<div class="code">[sourcecode]
debootstrap --variant=minbase --include=dhcp-client,dialog,ifupdown,iproute,libui-dialog-perl,locales,netbase,net-tools,openssh-server,vim,curl,git-core squeeze /srv/lxc/vm01/ http://cdn.debian.net/debian/
[/sourcecode]

</div>
</div></li>
	<li><code>/usr/sbin/chroot /srv/lxc/vm01 /usr/bin/passwd -d root</code></li>
	<li><code>echo vm01 &gt; /srv/lxc/vm01/etc/hostname</code></li>
	<li><code>vim /srv/lxc/vm01/etc/inittab</code>
<div class="CodeRay">
<div class="code">[sourcecode]
id:3:initdefault:
si::sysinit:/etc/init.d/rcS
l0:0:wait:/etc/init.d/rc 0
l1:1:wait:/etc/init.d/rc 1
l2:2:wait:/etc/init.d/rc 2
l3:3:wait:/etc/init.d/rc 3
l4:4:wait:/etc/init.d/rc 4
l5:5:wait:/etc/init.d/rc 5
l6:6:wait:/etc/init.d/rc 6
# Normally not reached, but fallthrough in case of emergency.
z6:6:respawn:/sbin/sulogin
1:2345:respawn:/sbin/getty 38400 console
c1:12345:respawn:/sbin/getty 38400 tty1 linux
c2:12345:respawn:/sbin/getty 38400 tty2 linux
c3:12345:respawn:/sbin/getty 38400 tty3 linux
c4:12345:respawn:/sbin/getty 38400 tty4 linux
[/sourcecode]

</div>
</div></li>
	<li><code>vim /srv/lxc/vm01/etc/init.d/hwclockfirst.sh</code>
<div class="CodeRay">
<div class="code">[sourcecode]
#!/bin/sh
### BEGIN INIT INFO
# Provides:          hwclockfirst
# Required-Start:    mountdevsubfs
# Required-Stop:
# Default-Start:     S
# X-Start-Before:    checkroot
# Default-Stop:
### END INIT INFO
exit 0
[/sourcecode]

</div>
</div></li>
	<li><code>vim /srv/lxc/vm01/etc/init.d/hwclock.sh</code>
<div class="CodeRay">
<div class="code">[sourcecode]
#!/bin/sh
### BEGIN INIT INFO
# Provides:          hwclock
# Required-Start:    checkroot
# Required-Stop:     $local_fs
# Default-Start:     S
# Default-Stop:      0 6
### END INIT INFO
exit 0
[/sourcecode]

</div>
</div></li>
	<li><code>&gt;/etc/lxc/vm01/log</code></li>
	<li><code>lxc-start -n vm01 -f /etc/lxc/vm01/conf -o /etc/lxc/vm01/log --logpriority INFO</code></li>
</ol>
</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1282</wp:post_id>
  <wp:post_date>2011-06-02 13:25:25</wp:post_date>
  <wp:post_date_gmt>2011-06-02 13:25:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>notes-on-lxc</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="device-file"><![CDATA[Device file]]></category>
  <category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
  <category domain="post_tag" nicename="logical-volume-manager-linux"><![CDATA[Logical Volume Manager (Linux)]]></category>
  <category domain="post_tag" nicename="lxc"><![CDATA[LXC]]></category>
  <category domain="post_tag" nicename="mkdir"><![CDATA[Mkdir]]></category>
  <category domain="post_tag" nicename="operating-systems"><![CDATA[Operating Systems]]></category>
  <category domain="post_tag" nicename="sysfs"><![CDATA[Sysfs]]></category>
  <category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Fixed formatting: "Notes on LXC http://wp.me/pxxjT-kG"]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1307092069";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rethinking Deployment</title>
  <link>http://serverhorror.wordpress.com/2011/06/02/rethinking-deployment/</link>
  <pubDate>Thu, 02 Jun 2011 20:52:26 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2011/06/02/rethinking-deployment/</guid>
  <description/>
  <content:encoded><![CDATA[<div class="posterous_autopost">
<h1>Rethinking <a class="zem_slink" title="Software deployment" href="http://en.wikipedia.org/wiki/Software_deployment" rel="wikipedia">Deployment</a></h1>
Probably everyone knows something about one of the following environment:
<ul>
	<li><a href="https://appengine.google.com/">Google AppEngine</a> (runs <a href="http://www.python.org">Python</a>, <a href="http://www.java.com/">Java</a> and recently also <a href="http://golang.org">Go</a>)</li>
	<li><a href="http://www.ep.io">ep.io</a> (runs <a href="http://www.python.org">Python</a>)</li>
	<li><a href="http://www.engineyard.com/">Engine Yard</a> or <a href="http://www.heroku.com">Heroku</a> (runs <a href="http://www.ruby-lang.org">Ruby</a>)</li>
</ul>
What you usually get from services like these is easy deployment and kind of a <em>namespace for your app</em>. By namespace I mean some kind of container that keeps your app from crashing because someone else did something bad on the server and vice versa. This is naturally what you want because you run in a hosted environment, that means you don’t actually have control about what kinds of apps run on the servers or even how many apps run on the server. Please keep in mind that hosted doesn’t necessarily mean that you pay a third party for hosting your stuff. It might as well be some service within the very own company.

Not a bad thing in and on itself. Just something to get used to.

Of course there are some things to keep in mind with that kind of automated deployment. One of the more problematic things will be how to ensure that only working apps will get deployed.

After all you don’t want some fancy, easy to use deployment mechanism just to take your main site down every 15 minutes. Of course you could then just easily deploy the last version again and be up and running. Still this is not a desireable solution.

We now know a few requirements:
<ul>
	<li>easy deployment (more on that later)</li>
	<li>versioned deployment</li>
</ul>
<h2>Versioned Deployment</h2>
Versioned deployment means that the same app must be deployable multiple times. Somehow the deployment system must be able to differentiate between the same app deployed multiple times. It’s only natural (at least to me) to use a version number. This actually brings in another requirement:
<ul>
	<li>semantic version numbers</li>
</ul>
What does that mean? Don’t just use some random string, there needs to be a notion of comparison between versions. In simple Terms it must support the following operations:
<ul>
	<li>is larger than</li>
	<li>is smaller than</li>
	<li>is equal to</li>
</ul>
There’s the nice <a href="http://semver.org">semver.org</a> site that tries to <em>standardize</em>. Personally I agree with the spec, except for the <em>special version number</em>, I just don’t see a need for it. I’m perfectly fine without it.

Another quite simple version number would be a unix timestamp or the date and time of the release. I suggest something like 201105261324 — but to be honest; just staying with the spec from <a href="http://semver.org">semver.org</a> is perfectly fine. <strong>It’s defined, it’s there; no need to reinvent the wheel!</strong>
<h2>Easy Deployment</h2>
<ul>
	<li><a href="http://pivotallabs.com/talks/30-next-generation-application-deployment">http://pivotallabs.com/talks/30-next-generation-application-deployment</a></li>
</ul>
Easy deployment actually means that developers have to live with quite a lot of constraints. I can’t imagine a system that allows you to do anything you can think of and still have a notion of easy deployment.

Contraints (or rather restrictions) have a bad side taste. Maybe I can’t write to disk. Maybe I can’t configure my logging the way I want. Maybe I don’t have the possibility of accessing the database I like best.

These kinds of contraints come in varying sizes and tastes. The most basic thing that won’t be available is random access to the file system. Or even the expectation that whatever you write to the file system may be there in half an hour.

To <a href="http://serverhorror.eu/rethinking-compliance">quote myself</a> (yeah, I know…):
<blockquote class="posterous_medium_quote">You want that people accept the system, hell they shouldn’t just accept it — it should be natural to them to use the whatever compliant services are provided. Because the are easy to use and because they do the job at least well.

If you want to have compliance and you do it in a way that users don’t like they will find ways around it.</blockquote>
What this actually means is that for every expectation (or at least most of them) people have regarding a system, there needs to be a solution. This solution must be well thought of. I couldn’t just throw some bad API at the users and expect that people will use the deployment system.

The most basic requirements to deploy (web) software are:
<ul>
	<li>Application <em>Entry Points</em></li>
	<li>Application Configuration</li>
	<li>Have a <em>caching API</em></li>
	<li>Have a <em>persistence API</em></li>
	<li>Have a <em>data query API</em> (specifically not resctricted to SQL)</li>
	<li>Have a <em>logging API</em></li>
	<li>Have at <em>least very good documentation</em> for all of the above</li>
</ul>
This is what needs to be available to write some app against a restricted environment. Much of this is actually just what <a href="https://appengine.google.com/">Google AppEngine</a> provides.

Let me construct a system that has the basic properties mentioned above. We’ll restrict to the following:
<ul>
	<li>Python <a class="zem_slink" title="Web application" href="http://en.wikipedia.org/wiki/Web_application" rel="wikipedia">Web Applications</a> that are accessed thru an <code>application</code> object that is a <a href="http://www.python.org/dev/peps/pep-0333/">WSGI</a> instance</li>
	<li>You will run on <a href="http://www.python.org">python2.5</a></li>
	<li>The application needs to be self contained
<ul>
	<li>this implies that if you use <a href="http://webpy.org">web.py</a> you need to make sure that it’s importable from within you application. You cannot expect <a href="http://webpy.org">web.py</a> to be somehow magically available</li>
	<li>this also means that you can only use pure python modules</li>
</ul>
</li>
</ul>
I’ll ber very unspecific here. I hope nobody expects me to to use a magic hat and just pull out a solution. I hope the basic idea will still come through.
<h3>Entry Points</h3>
I just implicitely defined that above. Just make a WSGI application, a simple one like the <a href="http://webpy.org/cookbook/mod_wsgi-apache"><code>web.py</code> cookbook sample</a> is enough:
<div class="CodeRay">
<div class="code">
<pre>import web  urls = ( '/.*', 'hello', )  class hello: def GET(self): return "<a class="zem_slink" title="Hello world program" href="http://en.wikipedia.org/wiki/Hello_world_program" rel="wikipedia">Hello, world</a>."  application = web.application(urls, globals()).wsgifunc()</pre>
</div>
</div>
<h3>Application Configuration</h3>
This mostly about data that shouldn’t be the default. For web application this means:
<ul>
	<li>cookie/session secret</li>
	<li>API credentials (which may be different for different <a class="zem_slink" title="Application programming interface" href="http://en.wikipedia.org/wiki/Application_programming_interface" rel="wikipedia">APIs</a>)</li>
	<li>other data that is not under the direct control of a user</li>
</ul>
<h3>Caching API</h3>
<strong>Note</strong>: Stealing from <a href="http://memcached.org/"><code>memcached</code></a> here. You might want to read up on <a href="http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt">the memcached protocol</a>

Some assumptions that need to be dealt with:
<ul>
	<li>Cached items may expire at any time</li>
	<li><code>set</code>ing something doesn’t mean that the next time I want to retrieve it it’s still there (yes this is actually <strong>very, very, very bad</strong> – just trying to simplify)</li>
</ul>
Basic idea:
<div class="CodeRay">
<div class="code">
<pre>[bytes]  set   get</pre>
</div>
</div>
<h3>Persistence API</h3>
This should be nothing special. Just <code>write(bytes)</code> and <code>read(identifier)</code>. I like the notion of content-addressed storage for that part so I’m biased. But the <code>identifier</code> could be anything. A path a sha1-sum, really anything.

Again stealing from above (and yes, this works in the real world – just look at <a href="http://www.basho.com">riak</a>).

There’s something go keep in mind here: I want to make sure nobody writes vast amounts of data, either in a single object or by issuing a multitude of <code>write</code>s that’ll take down the system. I want some kind of quote. Say 100 GiB per application.

Basic idea:
<div class="CodeRay">
<div class="code">
<pre>[bytes]  write   read</pre>
</div>
</div>
<h3>Data Query API</h3>
This get’s a bit more tricky. Usually as soon as I take away SQL from some kind of data query I hear screams. I’m not saying SQl is bad or wrong in any way. But as soon as there aren’t dedicated DBAs involved that will take care of largish databases most servers run into a problem.

For the sake of simplicity let’s stay with a nice simple (for certain definitions of simple) SQL database. I’d allow people to:
<ul>
	<li><code>CREATE TABLE</code>,</li>
	<li><code>DROP TABLE</code>,</li>
	<li><code>CREATE VIEW</code>,</li>
	<li><code>SELECT</code>,</li>
	<li><code>INSERT</code>,</li>
	<li><code>DELETE</code></li>
</ul>
Maybe even:
<ul>
	<li><code>CREATE INDEX</code>,</li>
	<li><code>DROP INDEX</code>.</li>
</ul>
Things I specifically wouldn’t allow (speaking in MySQL permissions here):
<ul>
	<li><code>CREATE TEMPORARY TABLES</code></li>
	<li><code>SELECT INTO OUTFILE</code></li>
	<li><code>COPY FROM FILE</code></li>
</ul>
Basically I’d let everyone talk to his/her own database with basic usage rights. But especially deny everything that would need access to the filesystem or something near that.
<h3>Logging API</h3>
This is a special case. All of the above were external things. External in the sense that there’s no problem by only allowing communication to run thru some sort of tcp connection. Logging however would should be available as a “<em>local</em>” API call. I’d just stay with the standard python logging library.

The important point would be that users must not set up their own Handlers. Basically people are allowed to either use a <code>StreamHandler</code> or a <code>NullHandler</code>.

A <code>StreamHandler</code> would be exactly what any other log system does. Provide a stream of events. An event isn’t necessarily something that ends with a newline. But the point is that writing something to the filesystem through the logging API sets up expectatiions that these log events will later be available. This assumption is wrong. The only events that will be available will be the ones that have been emitted through the <code>StreamHandler</code>s provided by the system.

What’s the point in providing a NullHandler? To be honest I can’t think of one. But hey! There’s gotta be some choice :)
<h3>Documentation</h3>
I’m a believer of learning by example. This has 2 advantages:
<ul>
	<li>diving in is easy</li>
	<li>by writing examples I will be a user</li>
</ul>
The last point is a “<em>eat your own dogfood</em>” argument. But it will inflict the same pain on me that the users of the system have. Thus it will get better “<em>real soon now</em>”™.

Jokes aside. There’s a third point to it. Libraries will pop up for free. By writing code against the carefully designed APIs I will automagically create libraries to make my life easier, I will then either publish these libraries or incorporate the libraries in the existing API thus making everyone elses life easier.

The valid point of “If you need to create a library it’s not good enough” has a shortcoming here. If the API is just some HTTP-Restful API this API could be very good. But why not just create a library that will do directly in Python (or Ruby, Java, <a href="http://golang.org">Go</a>), after all nearly everyone will be using these libraries and by providing them I have the potential to take serverload away by optimizing a single library and updating it on the server.

Original Post: http://serverhorror.eu/rethinking-deployment New Blog Location: http://serverhorror.eu

</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1284</wp:post_id>
  <wp:post_date>2011-06-02 20:52:26</wp:post_date>
  <wp:post_date_gmt>2011-06-02 20:52:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rethinking-deployment</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="application-programming-interface"><![CDATA[Application programming interface]]></category>
  <category domain="post_tag" nicename="google-appengine"><![CDATA[Google AppEngine]]></category>
  <category domain="post_tag" nicename="hello-world-program"><![CDATA[Hello world program]]></category>
  <category domain="post_tag" nicename="heroku"><![CDATA[Heroku]]></category>
  <category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="web-application"><![CDATA[Web application]]></category>
  <category domain="post_tag" nicename="web-server-gateway-interface"><![CDATA[Web Server Gateway Interface]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1322875060";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_78f48376f847ada37fd7bbbebba9b3f2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git Magic (git filter-branch)</title>
  <link>http://serverhorror.wordpress.com/2011/06/03/git-magic-git-filter-branch/</link>
  <pubDate>Fri, 03 Jun 2011 18:14:18 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2011/06/03/git-magic-git-filter-branch/</guid>
  <description/>
  <content:encoded><![CDATA[Rewrite all commits in <code>git</code> to a new author:

[sourcecode]
git filter-branch -f --env-filter '\
    GIT_AUTHOR_EMAIL=author@example.invalid; \
    export GIT_AUTHOR_EMAIL; \
    GIT_AUTHOR_NAME=&quot;New Author&quot;; \
    export GIT_AUTHOR_NAME'
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1285</wp:post_id>
  <wp:post_date>2011-06-03 18:14:18</wp:post_date>
  <wp:post_date_gmt>2011-06-03 18:14:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-magic-git-filter-branch</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="apache-subversion"><![CDATA[Apache Subversion]]></category>
  <category domain="post_tag" nicename="author"><![CDATA[Author]]></category>
  <category domain="post_tag" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="literature"><![CDATA[Literature]]></category>
  <category domain="post_tag" nicename="revision-control"><![CDATA[Revision control]]></category>
  <category domain="post_tag" nicename="source-code"><![CDATA[Source code]]></category>
  <category domain="post_tag" nicename="tools"><![CDATA[Tools]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1322875041";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Todos for the cloud</title>
  <link>http://serverhorror.wordpress.com/2011/06/05/todos-for-the-cloud/</link>
  <pubDate>Sun, 05 Jun 2011 00:27:58 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2011/06/05/todos-for-the-cloud/</guid>
  <description/>
  <content:encoded><![CDATA[<div class="posterous_autopost">
<h1>Todos “for the cloud”</h1>
Stuff I’d like to get done until the end of september:
<ul>
	<li>get basic EC2 stuff running for a private lab</li>
	<li>create AMIs suitable for my needs</li>
	<li>enrich AMIs with puppet</li>
	<li>create a puppet module for <a href="http://www.basho.com">Riak</a> which suits my needs</li>
	<li>create a puppet module for <a href="http://hadoop.apache.org">Hadoop</a> which suits my needs</li>
	<li>create a puppet module for <a href="http://hive.apache.org">Hive</a> which suites my needs</li>
	<li>script some stuff to setup/teardown <a href="http://www.basho.com">Riak</a> and <a href="http://hadoop.apache.org">Hadoop</a>/<a href="http://hive.apache.org">Hive</a> farms</li>
	<li>do more stuff in <a href="http://golang.org">golang</a></li>
	<li><em>OPTIONAL</em> migrate to <a href="http://www.freedesktop.org/wiki/Software/systemd">systemd</a></li>
	<li><em>OPTIONAL</em> start playing with scribe</li>
</ul>

<hr />

I'm switching blogs. Just look at <a href="http://serverhorror.eu">http://serverhorror.eu</a> during the time of transition.

<strong>Original Post at: <a href="http://serverhorror.eu/todos-for-the-cloud">http://serverhorror.eu/todos-for-the-cloud</a></strong>

</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1301</wp:post_id>
  <wp:post_date>2011-06-05 00:27:58</wp:post_date>
  <wp:post_date_gmt>2011-06-05 00:27:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>todos-for-the-cloud</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1322875060";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_16aaf341365d8a75cc988c16825bd9dc</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_159b624eaa23054efd4b9b1bff449493</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Basic EC2 Getting Started</title>
  <link>http://serverhorror.wordpress.com/2011/06/05/basic-ec2-getting-started/</link>
  <pubDate>Sun, 05 Jun 2011 14:07:30 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2011/06/05/basic-ec2-getting-started/</guid>
  <description/>
  <content:encoded><![CDATA[<div class="posterous_autopost">
<h1>Basic EC2 Getting Started</h1>
<ol>
	<li>Set up the amazon <a href="http://aws.amazon.com/developertools/351">EC2 API tools</a></li>
	<li>Create an X.509 Keypair from the Amazon website</li>
	<li>Set up the environment accordingly
<div class="CodeRay">
<div class="code">
<pre># required environment for EC2 tools EC2_HOME EC2_PRIVATE_KEY EC2_CERT JAVA_HOME # add ec2 tools to default path!</pre>
</div>
</div></li>
	<li>Create an SSH keypair

Logins on EC2 only allow public key authentication — and that is a good thing!
<div class="CodeRay">
<div class="code">
<pre># only one time (per host that is authorized for this image) ec2-add-keypair my-keypair cat &lt; ~/.ec2/id_rsa-my-keypair &gt; -----BEGIN RSA PRIVATE KEY----- &gt;... &gt; -----END RSA PRIVATE KEY----- &gt; EOF chmod 0600 ~/.ec2/id_rsa-my-keypair</pre>
</div>
</div></li>
	<li>Find an instance to run
<div class="CodeRay">
<div class="code">
<pre>ec2-describe-images -a</pre>
</div>
</div></li>
	<li>Run an instance

Instances of type <code>m1.small</code> must be 32-bit images!
<div class="CodeRay">
<div class="code">
<pre>ec2-run-instances -k my-keypair  -t m1.small</pre>
</div>
</div></li>
	<li>Find out what’s running on EC2
<div class="CodeRay">
<div class="code">
<pre>ec2-describe-instances</pre>
</div>
</div></li>
	<li>Grant access to the instances
<div class="CodeRay">
<div class="code">
<pre># only one time -- allows SSH access from anywhere for all instances ec2-authorize default -p 22</pre>
</div>
</div></li>
	<li>Shut everything down again

Keeps the bill low :)
<div class="CodeRay">
<div class="code">
<pre>ec2-terminate-instances</pre>
</div>
</div></li>
</ol>

<hr />

I'm switching blogs. Just look at <a href="http://serverhorror.eu">http://serverhorror.eu</a> during the time of transition.

<strong>Original Post at: <a href="http://serverhorror.eu/basic-ec2-getting-started">http://serverhorror.eu/basic-ec2-getting-started</a></strong>

</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1302</wp:post_id>
  <wp:post_date>2011-06-05 14:07:30</wp:post_date>
  <wp:post_date_gmt>2011-06-05 14:07:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>basic-ec2-getting-started</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="amazon"><![CDATA[Amazon]]></category>
  <category domain="post_tag" nicename="amazon-ec2"><![CDATA[Amazon EC2]]></category>
  <category domain="post_tag" nicename="amazon-elastic-compute-cloud"><![CDATA[Amazon Elastic Compute Cloud]]></category>
  <category domain="post_tag" nicename="amazon-web-services"><![CDATA[Amazon Web Services]]></category>
  <category domain="post_tag" nicename="application-programming-interface"><![CDATA[Application programming interface]]></category>
  <category domain="post_tag" nicename="public-key-cryptography"><![CDATA[Public-key cryptography]]></category>
  <category domain="post_tag" nicename="secure-shell"><![CDATA[Secure Shell]]></category>
  <category domain="post_tag" nicename="ssh"><![CDATA[SSH]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1322875045";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c683b4c1886b152a38ab17a3e0933b83</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2d34632b5fd616586afc8564f97790d7</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_16aaf341365d8a75cc988c16825bd9dc</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_70f6d28765567b02b9b55d9ea09b96a2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>dd and ssh</title>
  <link>http://serverhorror.wordpress.com/2011/06/06/dd-and-ssh/</link>
  <pubDate>Mon, 06 Jun 2011 22:56:45 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2011/06/06/dd-and-ssh/</guid>
  <description/>
  <content:encoded><![CDATA[This is something I <strong>need to remember</strong>:

[sourcecode]
ssh user@hostname dd if=/dev/sda | dd of=${HOME}/image.raw
[/sourcecode]

Specifially <strong>don't do this: <code>dd if=/dev/sda of=-</code></strong>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1303</wp:post_id>
  <wp:post_date>2011-06-06 22:56:45</wp:post_date>
  <wp:post_date_gmt>2011-06-06 22:56:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dd-and-ssh</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="clients"><![CDATA[Clients]]></category>
  <category domain="post_tag" nicename="hostname"><![CDATA[Hostname]]></category>
  <category domain="post_tag" nicename="ip-address"><![CDATA[IP address]]></category>
  <category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
  <category domain="post_tag" nicename="protocols"><![CDATA[Protocols]]></category>
  <category domain="post_tag" nicename="putty"><![CDATA[PuTTY]]></category>
  <category domain="post_tag" nicename="secure-shell"><![CDATA[Secure Shell]]></category>
  <category domain="post_tag" nicename="ssh"><![CDATA[SSH]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1319740346";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Monitoring Thoughts</title>
  <link>http://serverhorror.wordpress.com/2011/06/08/monitoring-thoughts/</link>
  <pubDate>Wed, 08 Jun 2011 21:18:46 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2011/06/08/monitoring-thoughts/</guid>
  <description/>
  <content:encoded><![CDATA[<div class="posterous_autopost">
<h1>Monitoring Thoughts</h1>
How would you scale monitoring and how would you ensure that with hundreds of thousands of events per minute you’ll still get the important ones?

<strong>A lot</strong> of stuff is missing here. This is merely a note how I think a scaling architecture for monitoring should look like. Also one should be able to do math on the events!
<h2>On Agents</h2>
<strong>RULE</strong>: <em>events generated by Agents are stateless</em>
<ol>
	<li>Run a monitoring agent on each node!</li>
	<li>Each agent performs a number of <em>tasks</em>These are specifically called tasks since those are not necessarily checks. Also <strong>I associate</strong> checks with <em>nagios checks</em>. It’s not what we want to do!

A task does one thing, and one thing only:
<ul>
	<li>do not create tasks that are what <a class="zem_slink" title="Nimsoft" href="http://en.wikipedia.org/wiki/Nimsoft" rel="wikipedia">NimSoft</a> does (CMD – CPU/Memory/Disk)</li>
</ul>
</li>
	<li>Each tasks generates an event
<ul>
	<li>Everything is an event!</li>
	<li>A successful task just a taks that ran without (programmatical errors)</li>
	<li>A failed task is something where a programmatical error occured!</li>
</ul>
</li>
	<li>Create a <a class="zem_slink" title="JSON" href="http://en.wikipedia.org/wiki/JSON" rel="wikipedia">JSON</a> String from the event</li>
	<li>Submit the JSON string to some messaging middleware (preferrably <a class="zem_slink" title="RabbitMQ" href="http://en.wikipedia.org/wiki/RabbitMQ" rel="wikipedia">RabbitMQ</a>)</li>
</ol>
<h2>On Middleware</h2>
<ol>
	<li><a class="zem_slink" title="Message" href="http://en.wikipedia.org/wiki/Message" rel="wikipedia">Messages</a>must be persistent
<ul>
	<li>It is safe to restart the <a class="zem_slink" title="Server (computing)" href="http://en.wikipedia.org/wiki/Server_%28computing%29" rel="wikipedia">server</a>!</li>
</ul>
</li>
	<li>What are just messages to the middleware are the guts of the system.Those are the events generated by agents</li>
</ol>
<h2>On Servers</h2>
There are 2 kinds of servers:
<ul>
	<li><a class="zem_slink" title="Persistence (computer science)" href="http://en.wikipedia.org/wiki/Persistence_%28computer_science%29" rel="wikipedia">Persistence</a>ServersThese run somewhere in a rack. They will grab one event after another from a queue and store them in a safe place for later reference.

Once a <em>Persistence <a class="zem_slink" title="File server" href="http://en.wikipedia.org/wiki/File_server" rel="wikipedia">Server</a></em> grabbed an event from the queue it is no longer visible to other servers. Each event will reside on and exatly on <em>Persistence Server</em>.</li>
	<li><a class="zem_slink" title="Notification system" href="http://en.wikipedia.org/wiki/Notification_system" rel="wikipedia">Notification</a>ServersThese run either on physical serves in a rack and just grab one notification at a time from the messaging middleware.
<ul>
	<li>All notification server <em>can</em> retrieve all events.</li>
	<li>Notification Servers can subscribe to a certain subset of topics.</li>
</ul>
</li>
	<li>There may be a lot of servers. We don’t want our monitoring failing</li>
</ul>
<h2>On Persistence Servers</h2>
<ol>
	<li>Subscribe to the global queue</li>
	<li>Start grabbing events</li>
	<li>Store the event on diskWhat exactly storing means is yet to be determined!</li>
	<li>Start over again</li>
</ol>
<h2>On Notification Servers</h2>
<ol>
	<li>Subscribe to the notification queue or a topic queue</li>
	<li>Start grabbing events</li>
	<li>Display the eventWhat exactly displaying means is yet to be determined!</li>
	<li>Start over again&nbsp;</li>
</ol>
</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1304</wp:post_id>
  <wp:post_date>2011-06-08 21:18:46</wp:post_date>
  <wp:post_date_gmt>2011-06-08 21:18:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>monitoring-thoughts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="hardware"><![CDATA[Hardware]]></category>
  <category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
  <category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
  <category domain="post_tag" nicename="monitoring"><![CDATA[Monitoring]]></category>
  <category domain="post_tag" nicename="nimsoft"><![CDATA[NimSoft]]></category>
  <category domain="post_tag" nicename="server"><![CDATA[Server]]></category>
  <category domain="post_tag" nicename="site-management"><![CDATA[Site Management]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="web-design-and-development"><![CDATA[Web Design and Development]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1322875045";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>NON-RFC953 Hostname Service</title>
  <link>http://serverhorror.wordpress.com/2011/09/23/non-rfc953-hostname-service/</link>
  <pubDate>Fri, 23 Sep 2011 14:20:47 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2011/09/23/non-rfc953-hostname-service/</guid>
  <description/>
  <content:encoded><![CDATA[<ul>
	<li>/etc/xinetd.d/<a class="zem_slink" title="Hostname" href="http://en.wikipedia.org/wiki/Hostname" rel="wikipedia">hostname</a></li>
</ul>
[sourcecode]
service hostname {
    disable         = no
    type            = UNLISTED
    id              = hostname
    port            = 101
    socket_type     = stream
    protocol        = tcp
    user            = nobody
    wait            = no
    server          = /bin/hostname
    server_args     = -f
}
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1307</wp:post_id>
  <wp:post_date>2011-09-23 14:20:47</wp:post_date>
  <wp:post_date_gmt>2011-09-23 14:20:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>non-rfc953-hostname-service</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="hostname"><![CDATA[Hostname]]></category>
  <category domain="post_tag" nicename="internet-protocol"><![CDATA[Internet Protocol]]></category>
  <category domain="post_tag" nicename="protocols"><![CDATA[Protocols]]></category>
  <category domain="post_tag" nicename="servers"><![CDATA[Servers]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1316940916";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[NON-RFC953 Hostname Service http://wp.me/pxxjT-l5]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Awk min/max/avg</title>
  <link>http://serverhorror.wordpress.com/2011/09/28/awk-minmaxavg-tag-sysadmin-script-awk/</link>
  <pubDate>Wed, 28 Sep 2011 16:58:13 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/2011/09/28/awk-minmaxavg-tag-sysadmin-script-awk/</guid>
  <description/>
  <content:encoded><![CDATA[<div class="posterous_autopost">

[sourcecode]

#!/usr/bin/awk -f
BEGIN
{
 minimum=0;
 maximum=0;
 sum=0;
}

{
 if($3&gt;maximum)
 {
 maximum=$3;
 }
 if($3&lt;minimum)
 {
 minimum=$3;
 }
 sum+=$3;
}

END
{
 print &quot;Average = &quot;,sum/NR;
 print &quot;Max = &quot;,maximum;
 print &quot;Min = &quot;,minimum;
}

[/sourcecode]

</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1308</wp:post_id>
  <wp:post_date>2011-09-28 16:58:13</wp:post_date>
  <wp:post_date_gmt>2011-09-28 16:58:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>awk-minmaxavg-tag-sysadmin-script-awk</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="awk"><![CDATA[AWK]]></category>
  <category domain="post_tag" nicename="command-line-interface"><![CDATA[Command-line interface]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1322875060";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Everything is a fucking event stream!</title>
  <link>http://serverhorror.wordpress.com/2011/12/27/everything-is-a-fucking-event-stream/</link>
  <pubDate>Tue, 27 Dec 2011 08:00:06 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1310</guid>
  <description/>
  <content:encoded><![CDATA[I got quite fed up with monitoring systems lately. <strong>I do not see a need for such systems any more</strong>, and I hate to introduce yet another component that does not actually add any value!

No go away and turn around and read something else if you think this is utter bullshit, but recently I took some time to think about what a monitoring system actually does.

In my opinion a monitoring system is nothing more that a logging system. You generate some log message (which actually isn’t a log message) and send it off to a central host (possibly with several level of intermediate hosts) just to fire off a notification your log message.

So what do we have we have a log stream. But since I don’t actually really care about <a class="zem_slink" title="Data logger" href="http://en.wikipedia.org/wiki/Data_logger" rel="wikipedia">log messages</a> let’s generalize a bit and call everything an event!
<h2>Everything is a fucking event stream!</h2>
<blockquote>I do mean everything!</blockquote>
Let’s begin with syslog (yup classic syslog, no bells and whistles). Have you ever thought about what the separation marker for a syslog event is? I don’t know for sure what it is. For a long time I thought that the only true answer would be a newline.

Hey, <em>who the hell wants to read Java stack traces in a log file or Python or any “multi line message”</em>.
<blockquote>I do!</blockquote>
Of course I don’t want to use grep or less or anything to work throu those files. I want a tool that understands those messages. Better yet I want a tool that is usable and that let’s me define reusable rules to <em>tag</em> <del>log messages</del> events.

Think of <a class="zem_slink" title="Nagios" href="http://www.nagios.org/" rel="homepage">Nagios</a>:
<p style="padding-left:30px;">You write some plug-in, the plug-in has a log, the plug-in reports to stdout for Nagios messages, the plug-in writes to stderr to tell about errors, there are different levels of verbosity to debug, it has at least 2 different return values</p>
Why on earth is there:
<p style="padding-left:30px;" dir="ltr">A stream of plugin results (usually exit codes), a stream of messages on stdout (meta results?), a stream of log messages (meta2 results?), a stream of messages for stderr (is that logging, monitoring, meta3 results, ignorable?)</p>
On top of that all those kinds of messages are incompatible. <strong>There’s no such thing as structured logging!</strong>
Please, please just let me send everything to some remote place where it will be persisted and I have a central view on all my events.

Add as much <a class="zem_slink" title="Metadata" href="http://en.wikipedia.org/wiki/Metadata" rel="wikipedia">meta data</a> as possible.
<p style="padding-left:30px;">source host, receiving host (or hosts if there were several in between), reception times, timestamps -- <strong>and please: do add fractions of a second, host names and ip addresses</strong>, a possibility to extend the amount of meta data</p>
Now when I have a place where I can look at all my events, then and only then I want to make decisions about what I’m interested in. I’m nowhere near deciding on whether this any of this is an alert.
<h2>After the fact tagging</h2>
Nagios, Icinga, <a class="zem_slink" title="Zabbix" href="http://www.zabbix.com/" rel="homepage">Zabbix</a> all force me to make something up. Some test, a probe or whatnot where I have to write some script (Don’t get me wrong: I like scripting -- scripting takes away those repetitive tasks I hate!) and make up arbitrary values that represent a certain level of goodness or badness. OK, CRITICAL, WARNING?
<blockquote>WTF? Who said I need three of them?</blockquote>
Just let me define some criteria that will match events. Please note that I am not restricting the criteria to regular expressions. Something like “Has the meta data field X”, “Does not have meta data field Y”, “After January 1st 1992 but not before May 3rd 1982”, “Only between 13:00h and and 13:15h when the load was higher than 3 on systems with with only 2 cores” and so on. Those are equally important.
<blockquote>Uh, oh! I just defined some <a class="zem_slink" title="Plug-in (computing)" href="http://en.wikipedia.org/wiki/Plug-in_%28computing%29" rel="wikipedia">plug-ins</a>, now I’m back at monitoring! No I’m not!</blockquote>
I ran a <a class="zem_slink" title="Cron" href="http://en.wikipedia.org/wiki/Cron" rel="wikipedia">cron job</a> (in the simplest case) that generated an event which told me the load, and another cron job that told me the number of cores in the system. This event was sent to my <a class="zem_slink" title="Sink (computing)" href="http://en.wikipedia.org/wiki/Sink_%28computing%29" rel="wikipedia">event sink</a> for later processing!

I need to be able to save those criteria collections as filters/view or whatever you want to call them and I need to be able to name those things so that I can find them later on. I simply want to label my events.

I need to be able to attach as many labels to events as I see fit. Also I need the ability to find unlabeled events.
<h2>Which brings us to alerts!</h2>
So now that I know what’s interesting and gives me the ability to make educated decisions about what’s actually interesting I can decide on when it’s worth to raise something that will wake me up in the middle of the night.

I do want to be able to generate alerts and send them of to some other system...
<blockquote>Hey look! Another event stream!</blockquote>
...and then I’d rather not want to specify when things go bad. I’d rather would like to specify when things are good. Everything else is just <strong>badness enumeration</strong>.

I’d rather triple the amount of time I invest in such a system than to create yet another monitoring system that doesn’t use what’s already there.
<h2>But today's alerts aren’t worth anything tomorrow!</h2>
Any system that silently throws away data is useless (I’m looking at you Munin and friends). I’m not saying <a class="zem_slink" title="RRDtool" href="http://oss.oetiker.ch/rrdtool/" rel="homepage">RRDtool</a> is a bad thing. I love it, the problem is how people use it.

Throw away data? Come on, who wants this? I do want to the finest possible resolution, we have Hadoop, <a class="zem_slink" title="GlusterFS" href="http://www.gluster.org" rel="homepage">GlusterFS</a>, Ceph. Storage is something that shouldn’t be in the way. I’d rather have only 7 days of data than a year of useless junk.

Of course there’s trends over long periods of time but those shouldn’t be the default, those should be something that are added on top of existing data!

How are today’s alerts helpful if I can’t possibly tell what happened yesterday between 15:03h and 15:07h?
<h2>Yes this actually is basic stuff</h2>
<blockquote>But it’s just a syslog server and some scripts!</blockquote>
Yup you are absolutely right, and that’s the reason why companies like Splunk and <a class="zem_slink" title="Loggly" href="http://www.loggly.com/" rel="homepage">Loggly</a> make money right? Because anyone just has stuff like that. It’s a default, no more to-dos, nothing to see just go along!

Ah so you don’t actually have it? Neither do I. But I’d love to! Please someone skilled create such a system and make it open source!
<blockquote>On top of that: make it near real time!</blockquote>
<p style="text-align:right;"><em>/serverhorror</em></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1310</wp:post_id>
  <wp:post_date>2011-12-27 08:00:06</wp:post_date>
  <wp:post_date_gmt>2011-12-27 08:00:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>everything-is-a-fucking-event-stream</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="cron"><![CDATA[Cron]]></category>
  <category domain="post_tag" nicename="data-logger"><![CDATA[Data logger]]></category>
  <category domain="post_tag" nicename="glusterfs"><![CDATA[GlusterFS]]></category>
  <category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="loggly"><![CDATA[Loggly]]></category>
  <category domain="post_tag" nicename="metadata"><![CDATA[Metadata]]></category>
  <category domain="post_tag" nicename="nagios"><![CDATA[Nagios]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="zabbix"><![CDATA[Zabbix]]></category>
  <wp:postmeta>
    <wp:meta_key>reddit</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1324973847";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>925</wp:comment_id>
    <wp:comment_author><![CDATA[Matt]]></wp:comment_author>
    <wp:comment_author_email>matt@mattsn0w.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>149.199.62.254</wp:comment_author_IP>
    <wp:comment_date>2012-08-08 20:15:05</wp:comment_date>
    <wp:comment_date_gmt>2012-08-08 20:15:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Have you seen graphite? after reading this posting I think you would probably be interested. :) http://graphite.wikidot.com/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1345244937</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1345244937.940167903900146484375;s:7:"message";s:52:"martinmarcher changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"martinmarcher";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344456905.9510300159454345703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>926</wp:comment_id>
    <wp:comment_author><![CDATA[serverhorror]]></wp:comment_author>
    <wp:comment_author_email>martin@marcher.name</wp:comment_author_email>
    <wp:comment_author_url>http://blog.serverhorror.com</wp:comment_author_url>
    <wp:comment_author_IP>91.89.18.165</wp:comment_author_IP>
    <wp:comment_date>2012-08-17 23:13:06</wp:comment_date>
    <wp:comment_date_gmt>2012-08-17 23:13:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I have seen it. But an "event" in graphite is not what I mean here. Event here refers from everything. Starting with: "hey look an ethernet frame!" up to -- but not ending at: "Hey look! The business year is over again, let's ...." -- granted a lot of examples are technical but I want events not already quantified streams of numbers with a label.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>925</wp:comment_parent>
    <wp:comment_user_id>5284979</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1345245186</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1345245186.9161069393157958984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"martinmarcher";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>927</wp:comment_id>
    <wp:comment_author><![CDATA[serverhorror]]></wp:comment_author>
    <wp:comment_author_email>martin@marcher.name</wp:comment_author_email>
    <wp:comment_author_url>http://blog.serverhorror.com</wp:comment_author_url>
    <wp:comment_author_IP>91.89.18.165</wp:comment_author_IP>
    <wp:comment_date>2012-08-17 23:13:43</wp:comment_date>
    <wp:comment_date_gmt>2012-08-17 23:13:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Oh and yes... graphite/statsd are *great* just not enough for me to be really really happy :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>926</wp:comment_parent>
    <wp:comment_user_id>5284979</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1345245223</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1345245223.19124889373779296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"martinmarcher";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>What is big data?</title>
  <link>http://serverhorror.wordpress.com/2011/12/31/what-is-big-data/</link>
  <pubDate>Sat, 31 Dec 2011 14:00:44 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=1470</guid>
  <description/>
  <content:encoded><![CDATA[It’s actually quite simple: You have <a class="zem_slink" title="Big data" href="http://en.wikipedia.org/wiki/Big_data" rel="wikipedia">big data</a> whenever a single host isn’t enough to either store or process your data.
<h1>What does it mean?</h1>
Suppose you have a <a class="zem_slink" title="PostgreSQL" href="http://en.wikipedia.org/wiki/PostgreSQL" rel="wikipedia">Postgresql</a> Database and you run into scaling problems. There’s a choice now, either get <em>better hardware</em> so that you can continue to work on a single host or <strong>split the database to span multiple hosts</strong>.

Suppose you have a file store and all disks are full. You can either buy larger disks or use some distributed storage system where you <strong>just add hosts to expand the total storage capacity</strong>.

<strong>In both cases you are dealing with big data.</strong>

Big data (<em>for me</em>) isn’t anything that says X MB of data. It’s simply the case when you need decide to use a distributed system to handle your data.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1470</wp:post_id>
  <wp:post_date>2011-12-31 14:00:44</wp:post_date>
  <wp:post_date_gmt>2011-12-31 14:00:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what-is-big-data</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="big-data"><![CDATA[Big data]]></category>
  <category domain="post_tag" nicename="data-analysis"><![CDATA[Data analysis]]></category>
  <category domain="post_tag" nicename="data-warehousing"><![CDATA[Data Warehousing]]></category>
  <category domain="post_tag" nicename="databases"><![CDATA[Databases]]></category>
  <category domain="post_tag" nicename="hadoop"><![CDATA[Hadoop]]></category>
  <category domain="post_tag" nicename="hardware"><![CDATA[Hardware]]></category>
  <category domain="post_tag" nicename="postgresql"><![CDATA[PostgreSQL]]></category>
  <category domain="post_tag" nicename="storage"><![CDATA[Storage]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:52673045;a:2:{s:7:"user_id";s:12:"serverhorror";s:7:"post_id";s:18:"153113849095139328";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:7:"5284979";s:7:"blog_id";s:7:"7992909";s:9:"mod_stamp";s:19:"2011-12-31 01:54:13";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>832</wp:comment_id>
    <wp:comment_author><![CDATA[RetailWire Discussion: NRF: Why Are Retailers Still Complaining About Big Data? &laquo; Meyers Research Center: THE BLOG]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://meyersresearch.wordpress.com/2012/01/20/retailwire-discussion-nrf-why-are-retailers-still-complaining-about-big-data/</wp:comment_author_url>
    <wp:comment_author_IP>69.170.134.164</wp:comment_author_IP>
    <wp:comment_date>2012-01-19 20:20:00</wp:comment_date>
    <wp:comment_date_gmt>2012-01-19 20:20:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] What is big data? (serverhorror.com) [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1327405084</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1327405084.2771";s:7:"message";s:52:"martinmarcher changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"martinmarcher";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1327004400.6614";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>The Importance of API “Transports”</title>
  <link>http://serverhorror.wordpress.com/2012/01/01/the-importance-of-api-transports-the-importance-of-api-transports-the-importance-of-api-transports/</link>
  <pubDate>Sun, 01 Jan 2012 14:00:52 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1476</guid>
  <description/>
  <content:encoded><![CDATA[<h2>SQL <a class="zem_slink" title="Database" href="http://en.wikipedia.org/wiki/Database" rel="wikipedia">Databases</a> are dead</h2>
<blockquote>
<p dir="ltr">There I said it. I jumped the <a class="zem_slink" title="NoSQL" href="http://en.wikipedia.org/wiki/NoSQL" rel="wikipedia">NoSQL</a> waggon and I refuse to use anything that is remotely uncool and old.</p>
</blockquote>
Of course the above is a lie. Well kind of. In reality I do think that the interface by which you communicate with a <a class="zem_slink" title="SQL" href="http://en.wikipedia.org/wiki/SQL" rel="wikipedia">SQL database</a> is dead (or rather should be, but so should <a class="zem_slink" title="File Transfer Protocol" href="http://en.wikipedia.org/wiki/File_Transfer_Protocol" rel="wikipedia">FTP</a> -- another story -- still there are a few people left using it).

I’m not really talking about the query language itself, I’m talking about the “transport” (lacking a better word).
<h2>So is (nearly) any other protocol</h2>
I’ll leave the <em>kool new aid road</em> now and talk about the transport stuff a bit.

My problem with <a class="zem_slink" title="Application programming interface" href="http://en.wikipedia.org/wiki/Application_programming_interface" rel="wikipedia">API</a> interfaces currently is that the usage of these interfaces is quite annoying. Let’s look at the products that people use all over the web.

Say you go to Facebook or Google and what to use their API to do something with the social networks represented by the data. On the API page of Facebook you’ll find some source package that implements a <a class="zem_slink" title="Transport Layer" href="http://en.wikipedia.org/wiki/Transport_Layer" rel="wikipedia">transport protocol</a>, a <a class="zem_slink" title="Domain-specific language" href="http://en.wikipedia.org/wiki/Domain-specific_language" rel="wikipedia">domain specific language</a> and to complicate things a bit further also a certain data representation.

Reality is that right now to use some service on the Internet there is only a single transport protocol. HTTP, maybe add SSL on top of that but the transport is HTTP. I’m not saying that the <a class="zem_slink" title="Hypertext Transfer Protocol" href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol" rel="wikipedia">HTTP protocol</a> is the ultimate protocol. It’s shortcomings are quite well known.

The point is that you can solve a whole set of problems all in one go and be done with it.
<h2>Back to the SQL Example</h2>
So you have this cool new project and decided to use some relational database system. Now you also decide to use a framework that relies on interactions with other systems being non-blocking. So you run around the web and look for some non-blocking driver for you <a class="zem_slink" title="Relational database management system" href="http://en.wikipedia.org/wiki/Relational_database_management_system" rel="wikipedia">RDBMS</a> of choice.

Then you run around the web and look for some non-blocking driver for you storage part, then you run around the web...(you get the idea).

Now if all your satellite systems would be exposed oder HTTP you’d...run around the web and look for a non-blocking HTTP client and be done with this category of problems.
<h2>Just don’t use HTTP...please!</h2>
Please, please, please...don’t just use HTTP because I used it as an example here. A unified (or generalized) transport really needs some serious thinking.

Of course you can just run away now and scream what kind of idiot I am, but the next time you run around the web and and look for a driver because the transport of services isn’t generalized enough to be reusable.

Also please don’t confuse the transport with the represenation -- which should be considered equally important and would solve another stack of problems.

And if you go that last route, that still doesn’t say that should be only a single language per domain, having a single language per domain would be not that good without wasting further thoughts about those last two statements.
<blockquote>/serverhorror</blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1476</wp:post_id>
  <wp:post_date>2012-01-01 14:00:52</wp:post_date>
  <wp:post_date_gmt>2012-01-01 14:00:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-importance-of-api-transports-the-importance-of-api-transports-the-importance-of-api-transports</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="application-programming-interface"><![CDATA[Application programming interface]]></category>
  <category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
  <category domain="post_tag" nicename="facebook"><![CDATA[Facebook]]></category>
  <category domain="post_tag" nicename="http"><![CDATA[HTTP]]></category>
  <category domain="post_tag" nicename="hypertext-transfer-protocol"><![CDATA[Hypertext Transfer Protocol]]></category>
  <category domain="post_tag" nicename="nosql"><![CDATA[NoSQL]]></category>
  <category domain="post_tag" nicename="relational-database-management-system"><![CDATA[Relational database management system]]></category>
  <category domain="post_tag" nicename="sql"><![CDATA[SQL]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:52673045;a:2:{s:7:"user_id";s:12:"serverhorror";s:7:"post_id";s:18:"153477625740918785";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:7:"5284979";s:7:"blog_id";s:7:"7992909";s:9:"mod_stamp";s:19:"2011-12-31 02:05:06";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>golang package cappedqueue</title>
  <link>http://serverhorror.wordpress.com/2012/01/03/golang-package-cappedqueue/</link>
  <pubDate>Tue, 03 Jan 2012 14:00:33 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1502</guid>
  <description/>
  <content:encoded><![CDATA[<div>Just finished the first few lines of hopefully somewhat usable go code. The code is available on github in case someone indeed is brave enough to use it...</div>
<ul>
	<li><a href="http://github.com/serverhorror/cappedqueue">http://github.com/serverhorror/cappedqueue</a></li>
</ul>
To quote the README.rst file:
<blockquote>
<h1>cappedqueue</h1>
cappedqueue is a simple package to make sure you can submit to a queue. Losing items is on purpose so that <strong>you can rely on not accidentally blocking or filling up your memory</strong>

see the <code>cappedqueue_test.go</code> file for details on the usage...

/serverhorror</blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1502</wp:post_id>
  <wp:post_date>2012-01-03 14:00:33</wp:post_date>
  <wp:post_date_gmt>2012-01-03 14:00:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>golang-package-cappedqueue</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="github"><![CDATA[github]]></category>
  <category domain="post_tag" nicename="go"><![CDATA[Go]]></category>
  <category domain="post_tag" nicename="google"><![CDATA[Google]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:52673045;a:2:{s:7:"user_id";s:12:"serverhorror";s:7:"post_id";s:18:"154203405043236864";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6227b47259d41bcb1eab7984be31ad67</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>test for facebook</title>
  <link>http://serverhorror.wordpress.com/2012/01/03/test-for-facebook/</link>
  <pubDate>Tue, 03 Jan 2012 23:09:28 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1508</guid>
  <description/>
  <content:encoded><![CDATA[is wordpress sharing working?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1508</wp:post_id>
  <wp:post_date>2012-01-03 23:09:28</wp:post_date>
  <wp:post_date_gmt>2012-01-03 23:09:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>test-for-facebook</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[test for facebook]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:2:"fb";a:1:{i:1159570860;a:2:{s:7:"user_id";s:10:"1159570860";s:7:"post_id";s:13:"2939274398474";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Just a little Test for Flattr!</title>
  <link>http://serverhorror.wordpress.com/2012/01/05/just-a-little-test-for-flattr/</link>
  <pubDate>Thu, 05 Jan 2012 19:16:23 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1513</guid>
  <description/>
  <content:encoded><![CDATA[no content here]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1513</wp:post_id>
  <wp:post_date>2012-01-05 19:16:23</wp:post_date>
  <wp:post_date_gmt>2012-01-05 19:16:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>just-a-little-test-for-flattr</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Just a little Test for Flattr!]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:52673045;a:2:{s:7:"user_id";s:12:"serverhorror";s:7:"post_id";s:18:"155004742110674944";}}s:2:"fb";a:1:{i:1159570860;a:2:{s:7:"user_id";s:10:"1159570860";s:7:"post_id";s:13:"2951562825677";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>924</wp:comment_id>
    <wp:comment_author><![CDATA[rantanplan]]></wp:comment_author>
    <wp:comment_author_email>blogs@mx.buetow.org</wp:comment_author_email>
    <wp:comment_author_url>https://blogs.buetow.org</wp:comment_author_url>
    <wp:comment_author_IP>95.113.232.124</wp:comment_author_IP>
    <wp:comment_date>2012-07-22 19:22:09</wp:comment_date>
    <wp:comment_date_gmt>2012-07-22 19:22:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[And as it seems Vim is catching SIGSEGV...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1345244922</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1345244923.2789189815521240234375;s:7:"message";s:52:"martinmarcher changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"martinmarcher";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342984930.2729";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>VIM Segfaulting, I don't see that everyday</title>
  <link>http://serverhorror.wordpress.com/2012/01/11/vim-segfaulting-i-dont-see-that-not-everyday/</link>
  <pubDate>Wed, 11 Jan 2012 20:16:08 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/?p=1515</guid>
  <description/>
  <content:encoded><![CDATA[Haha!?

<img class="aligncenter size-full wp-image-1517" title="VIM-SEGV" src="http://serverhorror.files.wordpress.com/2012/01/vim-segv.png" alt="" width="700" height="127" />]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1515</wp:post_id>
  <wp:post_date>2012-01-11 20:16:08</wp:post_date>
  <wp:post_date_gmt>2012-01-11 20:16:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vim-segfaulting-i-dont-see-that-not-everyday</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:52673045;a:2:{s:7:"user_id";s:12:"serverhorror";s:7:"post_id";s:18:"157194102688059392";}}s:2:"fb";a:1:{i:1159570860;a:2:{s:7:"user_id";s:10:"1159570860";s:7:"post_id";s:13:"2993567835776";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>create a self signed x509 cert with a single openssl command</title>
  <link>http://serverhorror.wordpress.com/2012/08/17/create-a-self-signed-x509-cert-with-a-single-openssl-command/</link>
  <pubDate>Fri, 17 Aug 2012 22:45:31 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/2012/08/17/create-a-self-signed-x509-cert-with-a-single-openssl-command/</guid>
  <description/>
  <content:encoded><![CDATA[<div>
<div>

This is how you create a nice <strong>self signed x509 cert with a single openssl command</strong>:

<em><s>openssl req -newkey rsa:2048 -keyout server.key -out server.crt -nodes -x509</s></em>

[sourcecode language="bash"]
openssl req -newkey rsa:2048 -keyout server.key -out server.crt -nodes -x509  -subj /CN=www.example.com
[/sourcecode]

<s>Now it'll just take another couple of months to finally read up on how to write a config file for that :)</s>

</div>
<div></div>
</div>
<div></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1538</wp:post_id>
  <wp:post_date>2012-08-17 22:45:31</wp:post_date>
  <wp:post_date_gmt>2012-08-17 22:45:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>create-a-self-signed-x509-cert-with-a-single-openssl-command</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="apache"><![CDATA[apache]]></category>
  <category domain="post_tag" nicename="gnutls"><![CDATA[gnutls]]></category>
  <category domain="post_tag" nicename="http"><![CDATA[HTTP]]></category>
  <category domain="post_tag" nicename="https"><![CDATA[https]]></category>
  <category domain="post_tag" nicename="openssl"><![CDATA[openssl]]></category>
  <category domain="post_tag" nicename="secure"><![CDATA[secure]]></category>
  <category domain="post_tag" nicename="ssl"><![CDATA[ssl]]></category>
  <category domain="post_tag" nicename="tls"><![CDATA[tls]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="x509"><![CDATA[x509]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>NameVirtualHost is deprecated</title>
  <link>http://serverhorror.wordpress.com/2012/08/18/namevirtualhost-is-deprecated/</link>
  <pubDate>Sat, 18 Aug 2012 22:10:21 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://blog.serverhorror.com/2012/08/18/namevirtualhost-is-deprecated/</guid>
  <description/>
  <content:encoded><![CDATA[<p><a href="http://httpd.apache.org/docs/2.4/mod/core.html#namevirtualhost" title="NameVirtualHost is deprecated">NameVirtualHost is deprecated</a></p><div><div>Oh great <strong><em>NameVirtualHost</em> is deprecated</strong> with <a href="http://httpd.apache.org/docs/2.4/mod/core.html#namevirtualhost"><em>Apache HTTPd 2.4</em></a> ... some serious config rewrites will come ... \o/</div></div><div> </div>]]></content:encoded>
  <excerpt:encoded><![CDATA[<p><a href="http://httpd.apache.org/docs/2.4/mod/core.html#namevirtualhost" title="NameVirtualHost is deprecated">NameVirtualHost is deprecated</a></p><div><div>Oh great <strong><em>NameVirtualHost</em> is deprecated</strong> with <a href="http://httpd.apache.org/docs/2.4/mod/core.html#namevirtualhost"><em>Apache HTTPd 2.4</em></a> ... some serious config rewrites will come ... \o/</div></div><div> </div>]]></excerpt:encoded>
  <wp:post_id>1542</wp:post_id>
  <wp:post_date>2012-08-18 22:10:21</wp:post_date>
  <wp:post_date_gmt>2012-08-18 22:10:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>namevirtualhost-is-deprecated</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="apache"><![CDATA[apache]]></category>
  <category domain="post_tag" nicename="http"><![CDATA[HTTP]]></category>
  <category domain="post_tag" nicename="httpd"><![CDATA[httpd]]></category>
  <category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="vhost"><![CDATA[vhost]]></category>
  <category domain="post_tag" nicename="virtualhost"><![CDATA[virtualhost]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Growing your VirtualBox Virtual Disk (The Fat Bloke Sings)</title>
  <link>http://serverhorror.wordpress.com/2013/03/11/growing-your-virtualbox-virtual-disk-the-fat-bloke-sings/</link>
  <pubDate>Mon, 11 Mar 2013 19:28:09 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">http://serverhorror.wordpress.com/?p=1547</guid>
  <description/>
  <content:encoded><![CDATA[[sourcecode language="bash"]
VBoxManage modifyhd &lt;uuid&gt;|&lt;filename&gt; [--resize &lt;megabytes&gt;|--resizebyte &lt;bytes&gt;]
[/sourcecode]

via <a href="https://blogs.oracle.com/fatbloke/entry/growing_your_virtualbox_virtual_disk">Growing your VirtualBox Virtual Disk (The Fat Bloke Sings)</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1547</wp:post_id>
  <wp:post_date>2013-03-11 19:28:09</wp:post_date>
  <wp:post_date_gmt>2013-03-11 19:28:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>growing-your-virtualbox-virtual-disk-the-fat-bloke-sings</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_3083525</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[serverhorror]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1159570860;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_106562</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_106560</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_3083525</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_106562</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_106560</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Google Reader Shutdown :(</title>
  <link>http://serverhorror.wordpress.com/2013/03/16/google-reader-shutdown/</link>
  <pubDate>Sat, 16 Mar 2013 17:51:09 +0000</pubDate>
  <dc:creator>martinmarcher</dc:creator>
  <guid isPermaLink="false">https://serverhorror.wordpress.com/?p=1550</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://googleblog.blogspot.de/2013/03/a-second-spring-of-cleaning.html?m=1">http://googleblog.blogspot.de/2013/03/a-second-spring-of-cleaning.html?m=1</a>

We launched Google Reader in 2005 in an effort to make it easy for people to discover and keep tabs on their favorite websites. While the product has a loyal following, over the years usage has declined. So, on July 1, 2013, we will retire Google Reader. Users and developers interested in RSS alternatives can export their data, including their subscriptions, with Google Takeout over the course of the next four months.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1550</wp:post_id>
  <wp:post_date>2013-03-16 17:51:09</wp:post_date>
  <wp:post_date_gmt>2013-03-16 17:51:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>google-reader-shutdown</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_3083525</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1159570860;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[serverhorror]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_106562</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_106560</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c9824215549b553cdcb8e4830cab879a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_fabc547a52dc772c58686754086b6af0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3853a56e612b03338cea1aa196ba7725</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
